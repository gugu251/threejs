





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://assets-cdn.github.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" media="all" integrity="sha512-pCRDtdb3GlUU48h+oRJVA8f0GddrLnU97wB7mHQ7q6c40vMbMMZsFdk0IMhkUFRqw1M/y4EkWxtaKwfeFezOkQ==" rel="stylesheet" href="https://assets-cdn.github.com/assets/frameworks-73f533b7cc08a9d040e601cfd38fa585.css" />
  <link crossorigin="anonymous" media="all" integrity="sha512-PjS5mJXDQ2XUrZfiLcCuiaz+DXFXudBBHULaoJfs1kHQTbemmOvdGAw0NaKyUnGIbnDAj/DZ7Tj6yaReJxSLOw==" rel="stylesheet" href="https://assets-cdn.github.com/assets/github-d9349b18bbe1c1460b442d639b635c99.css" />
  
  
  <link crossorigin="anonymous" media="all" integrity="sha512-1Q2L3mMZmUTERt299izQNP+0f6Jdb17SoRm/kKESblBKU4mRZHembOETNbqWfJqrr+UvzmU6Mt6iJ6VvP4oJ2g==" rel="stylesheet" href="https://assets-cdn.github.com/assets/site-4139b251192ad0112098c9811ce21d37.css" />
  

  <meta name="viewport" content="width=device-width">
  
  <title>three.js/three.min.js at master · mrdoob/three.js · GitHub</title>
    <meta name="description" content="GitHub is where people build software. More than 28 million people use GitHub to discover, fork, and contribute to over 85 million projects.">
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta property="og:image" content="https://avatars3.githubusercontent.com/u/97088?s=400&amp;v=4" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="mrdoob/three.js" /><meta property="og:url" content="https://github.com/mrdoob/three.js" /><meta property="og:description" content="three.js - JavaScript 3D library." />

  <link rel="assets" href="https://assets-cdn.github.com/">
  
  <meta name="pjax-timeout" content="1000">
  
  <meta name="request-id" content="C735:357E:1F35C8C:2E06735:5B487BD9" data-pjax-transient>


  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
  <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
  <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">
    <meta name="google-analytics" content="UA-3769691-2">

<meta name="octolytics-host" content="collector.githubapp.com" /><meta name="octolytics-app-id" content="github" /><meta name="octolytics-event-url" content="https://collector.githubapp.com/github-external/browser_event" /><meta name="octolytics-dimension-request_id" content="C735:357E:1F35C8C:2E06735:5B487BD9" /><meta name="octolytics-dimension-region_edge" content="ap-southeast-1" /><meta name="octolytics-dimension-region_render" content="iad" />
<meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" />




<meta class="js-ga-set" name="dimension1" content="Logged Out">


  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="OTgyMTQ1ZjJmY2Y4MjI0YzA5Mzg0OTg2YjQzNTIxMTA0NTkyMjNkZTU3YTg2MTlhMzRjNGVjOGQ1NjI4ZTNiM3x7InJlbW90ZV9hZGRyZXNzIjoiMjIxLjE1LjE5Mi42NSIsInJlcXVlc3RfaWQiOiJDNzM1OjM1N0U6MUYzNUM4QzoyRTA2NzM1OjVCNDg3QkQ5IiwidGltZXN0YW1wIjoxNTMxNDc2OTYzLCJob3N0IjoiZ2l0aHViLmNvbSJ9">

    <meta name="enabled-features" content="UNIVERSE_BANNER,FREE_TRIALS,MARKETPLACE_INSIGHTS,MARKETPLACE_SEARCH,MARKETPLACE_INSIGHTS_CONVERSION_PERCENTAGES">

  <meta name="html-safe-nonce" content="499a229acda07e515437a2278e9a7e9facec6266">

  <meta http-equiv="x-pjax-version" content="fa77b7ac1a409f657d99e8ed87fc1b2b">
  

      <link href="https://github.com/mrdoob/three.js/commits/master.atom" rel="alternate" title="Recent Commits to three.js:master" type="application/atom+xml">

  <meta name="description" content="three.js - JavaScript 3D library.">
  <meta name="go-import" content="github.com/mrdoob/three.js git https://github.com/mrdoob/three.js.git">

  <meta name="octolytics-dimension-user_id" content="97088" /><meta name="octolytics-dimension-user_login" content="mrdoob" /><meta name="octolytics-dimension-repository_id" content="576201" /><meta name="octolytics-dimension-repository_nwo" content="mrdoob/three.js" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="576201" /><meta name="octolytics-dimension-repository_network_root_nwo" content="mrdoob/three.js" /><meta name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" content="false" />


    <link rel="canonical" href="https://github.com/mrdoob/three.js/blob/master/build/three.min.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

<link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-out env-production page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="px-2 py-4 bg-blue text-white show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        

  <header class="Header header-logged-out  position-relative f4 py-3" role="banner" data-ga-load="(Logged out) Header, view, experiment:site_header_dropdowns; group:dropdowns">
    <div class="container-lg d-flex px-3">
      <div class="d-flex flex-justify-between flex-items-center">
          <a class="mr-5" href="https://github.com/" aria-label="Homepage" data-ga-click="(Logged out) Header, go to homepage, icon:logo-wordmark; experiment:site_header_dropdowns; group:dropdowns">
            <svg height="32" class="octicon octicon-logo-github text-white" viewBox="0 0 45 16" version="1.1" width="90" aria-hidden="true"><path fill-rule="evenodd" d="M18.53 12.03h-.02c.009 0 .015.01.024.011h.006l-.01-.01zm.004.011c-.093.001-.327.05-.574.05-.78 0-1.05-.36-1.05-.83V8.13h1.59c.09 0 .16-.08.16-.19v-1.7c0-.09-.08-.17-.16-.17h-1.59V3.96c0-.08-.05-.13-.14-.13h-2.16c-.09 0-.14.05-.14.13v2.17s-1.09.27-1.16.28c-.08.02-.13.09-.13.17v1.36c0 .11.08.19.17.19h1.11v3.28c0 2.44 1.7 2.69 2.86 2.69.53 0 1.17-.17 1.27-.22.06-.02.09-.09.09-.16v-1.5a.177.177 0 0 0-.146-.18zm23.696-2.2c0-1.81-.73-2.05-1.5-1.97-.6.04-1.08.34-1.08.34v3.52s.49.34 1.22.36c1.03.03 1.36-.34 1.36-2.25zm2.43-.16c0 3.43-1.11 4.41-3.05 4.41-1.64 0-2.52-.83-2.52-.83s-.04.46-.09.52c-.03.06-.08.08-.14.08h-1.48c-.1 0-.19-.08-.19-.17l.02-11.11c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v3.77s.82-.53 2.02-.53l-.01-.02c1.2 0 2.97.45 2.97 3.88zm-8.72-3.61h-2.1c-.11 0-.17.08-.17.19v5.44s-.55.39-1.3.39-.97-.34-.97-1.09V6.25c0-.09-.08-.17-.17-.17h-2.14c-.09 0-.17.08-.17.17v5.11c0 2.2 1.23 2.75 2.92 2.75 1.39 0 2.52-.77 2.52-.77s.05.39.08.45c.02.05.09.09.16.09h1.34c.11 0 .17-.08.17-.17l.02-7.47c0-.09-.08-.17-.19-.17zm-23.7-.01h-2.13c-.09 0-.17.09-.17.2v7.34c0 .2.13.27.3.27h1.92c.2 0 .25-.09.25-.27V6.23c0-.09-.08-.17-.17-.17zm-1.05-3.38c-.77 0-1.38.61-1.38 1.38 0 .77.61 1.38 1.38 1.38.75 0 1.36-.61 1.36-1.38 0-.77-.61-1.38-1.36-1.38zm16.49-.25h-2.11c-.09 0-.17.08-.17.17v4.09h-3.31V2.6c0-.09-.08-.17-.17-.17h-2.13c-.09 0-.17.08-.17.17v11.11c0 .09.09.17.17.17h2.13c.09 0 .17-.08.17-.17V8.96h3.31l-.02 4.75c0 .09.08.17.17.17h2.13c.09 0 .17-.08.17-.17V2.6c0-.09-.08-.17-.17-.17zM8.81 7.35v5.74c0 .04-.01.11-.06.13 0 0-1.25.89-3.31.89-2.49 0-5.44-.78-5.44-5.92S2.58 1.99 5.1 2c2.18 0 3.06.49 3.2.58.04.05.06.09.06.14L7.94 4.5c0 .09-.09.2-.2.17-.36-.11-.9-.33-2.17-.33-1.47 0-3.05.42-3.05 3.73s1.5 3.7 2.58 3.7c.92 0 1.25-.11 1.25-.11v-2.3H4.88c-.11 0-.19-.08-.19-.17V7.35c0-.09.08-.17.19-.17h3.74c.11 0 .19.08.19.17z"/></svg>
          </a>
      </div>

      <div class="HeaderMenu HeaderMenu--experiment d-flex flex-justify-between flex-items-center flex-auto">
        <div class="d-none">
          <button class="btn-link js-details-target" type="button" aria-label="Toggle navigation" aria-expanded="false">
            <svg height="24" class="octicon octicon-x text-gray" viewBox="0 0 12 16" version="1.1" width="18" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
          </button>
        </div>

          <nav class="">
            <ul class="d-flex list-style-none">
                <li class="HeaderMenu-item dropdown mr-5">
                  <details class="details-expanded details-reset js-dropdown-details ">
                    <summary class="HeaderMenu-target text-white">
                      <div class="d-flex flex-items-baseline flex-justify-between">
                        <span class="d-inline-block mr-1">Features</span>
                        <span class="dropdown-caret"></span>
                      </div>
                    </summary>
                    <div class="dropdown-menu dropdown-menu-s p-4 ml-n4 mt-3 mt-lg-2">
                      <a href="/features" class="d-block d-lg-flex flex-items-center flex-justify-between f5 link-gray-dark text-bold mb-2" data-ga-click="(Logged out) Header, go to Features, experiment:site_header_dropdowns; group:dropdowns"><span>Features overview</span> <svg height="16" class="octicon octicon-chevron-right text-gray-dark" viewBox="0 0 8 16" version="1.1" width="8" aria-hidden="true"><path fill-rule="evenodd" d="M7.5 8l-5 5L1 11.5 4.75 8 1 4.5 2.5 3l5 5z"/></svg></a>
                      <hr class="border border-dashed my-3 d-none d-lg-block">
                      <ul class="list-style-none f5">
                        <li class="mb-2"><a href="/features/code-review/" class="d-block link-gray" data-ga-click="(Logged out) Header, go to Code review, experiment:site_header_dropdowns; group:dropdowns">Code review</a></li>
                        <li class="mb-2"><a href="/features/project-management/" class="d-block link-gray" data-ga-click="(Logged out) Header, go to Project management, experiment:site_header_dropdowns; group:dropdowns">Project management</a></li>
                        <li class="mb-2"><a href="/features/integrations" class="d-block link-gray" data-ga-click="(Logged out) Header, go to Integrations, experiment:site_header_dropdowns; group:dropdowns">Integrations</a></li>
                        <li class="mb-2"><a href="/features#team-management" class="d-block link-gray" data-ga-click="(Logged out) Header, go to Team management, experiment:site_header_dropdowns; group:dropdowns">Team management</a></li>
                        <li class="mb-2"><a href="/features#social-coding" class="d-block link-gray" data-ga-click="(Logged out) Header, go to Social coding, experiment:site_header_dropdowns; group:dropdowns">Social coding</a></li>
                        <li class="mb-2"><a href="/features#documentation" class="d-block link-gray" data-ga-click="(Logged out) Header, go to Documentation, experiment:site_header_dropdowns; group:dropdowns">Documentation</a></li>
                        <li class="mb-2"><a href="/features#code-hosting" class="d-block link-gray" data-ga-click="(Logged out) Header, go to Code hosting, experiment:site_header_dropdowns; group:dropdowns">Code hosting</a></li>
                      </ul>
                    </div>
                  </details>
                </li>
                <li class="HeaderMenu-item dropdown platform-nav mr-5">
                  <details class="details-expanded details-reset js-dropdown-details ">
                    <summary class="HeaderMenu-target text-white">
                      <div class="d-flex flex-items-baseline flex-justify-between">
                        <span class="d-inline-block mr-1">Platform</span>
                        <span class="dropdown-caret"></span>
                      </div>
                    </summary>
                    <div class="dropdown-menu dropdown-menu-s p-4 ml-n4 mt-3 mt-lg-2">
                      <div class="d-flex gutter-spacious ">
                        <div class="position-relative col-8">
                          <dl class="my-0">
                            <a href="/marketplace" class="d-flex mb-3 link-gray-dark no-underline" data-ga-click="(Logged out) Header, go to Marketplace, experiment:site_header_dropdowns; group:dropdowns">
                              <div class="mr-3">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 70.92 56.98" class="d-block" width="34"><title>Asset 1</title><g data-name="Layer 2"><path d="M6.18 57H1a1 1 0 0 1 0-2h5.18a1 1 0 0 1 0 2zM69.92 57h-5.18a1 1 0 1 1 0-2h5.18a1 1 0 0 1 0 2z" fill="#2088ff"></path><path d="M29.67 56.47a1 1 0 0 1-1-1V34.84H16v20.23a1 1 0 0 1-2 0V33.84a1 1 0 0 1 1-1h14.67a1 1 0 0 1 1 1v21.63a1 1 0 0 1-1 1z" fill="#79b8ff"></path><path d="M64.74 57H6.18a1 1 0 0 1-1-1v-8.65a1 1 0 0 1 2 0V55h56.56V33.84a1 1 0 0 1 2 0V56a1 1 0 0 1-1 1zM6.18 41.24a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1h58.58a1 1 0 0 1 1 1v10.52a1 1 0 1 1-2 0V2H7.18v38.24a1 1 0 0 1-1 1z" fill="#2088ff"></path><path d="M56.82 45.94H36.34a1 1 0 0 1-1-1v-11.1a1 1 0 0 1 1-1h20.48a1 1 0 0 1 1 1v11.1a1 1 0 0 1-1 1zm-19.48-2h18.48v-9.1H37.34z" fill="#79b8ff"></path><path d="M31.55 27.5a7.84 7.84 0 0 1-5.21-2.42c-1.06-1-11.87-9.74-12-9.83a1 1 0 0 1 .66-1.78h43.66a1 1 0 0 1 .64.24l11.26 9.48a1 1 0 0 1-1.29 1.53l-11-9.25H17.81c3.26 2.65 9.08 7.4 9.88 8.12a6 6 0 0 0 3.87 1.9 3.3 3.3 0 0 0 3-1.95 1 1 0 1 1 1.82.82 5.3 5.3 0 0 1-4.83 3.14z" fill="#2088ff"></path><path d="M40.24 27.5a5.26 5.26 0 0 1-1.86-.34 1 1 0 0 1 .71-1.87 3.26 3.26 0 0 0 1.16.21 3.3 3.3 0 0 0 3-1.95 1 1 0 1 1 1.82.82 5.3 5.3 0 0 1-4.83 3.13zM48.82 27.5a5.26 5.26 0 0 1-1.82-.34 1 1 0 0 1 .71-1.87 3.26 3.26 0 0 0 1.16.21 3.3 3.3 0 0 0 3-1.95 1 1 0 1 1 1.82.82 5.3 5.3 0 0 1-4.87 3.13zM57.41 27.5a5.26 5.26 0 0 1-1.86-.34 1 1 0 0 1 .71-1.87 3.26 3.26 0 0 0 1.16.21 3.3 3.3 0 0 0 3-1.95 1 1 0 1 1 1.82.82 5.3 5.3 0 0 1-4.83 3.13zM66 27.5a5.26 5.26 0 0 1-1.86-.34 1 1 0 0 1 .71-1.87 3.26 3.26 0 0 0 1.15.21 3.3 3.3 0 0 0 3-2 1 1 0 0 1 1.82.82A5.31 5.31 0 0 1 66 27.5zM15 27.22a1 1 0 0 1-1-1V14.71a1 1 0 0 1 2 0v11.51a1 1 0 0 1-1 1z" fill="#2088ff"></path><path d="M44.16 25a1 1 0 0 1-.65-.24L38.07 20a1 1 0 0 1 1.3-1.52l5.43 4.67a1 1 0 0 1-.64 1.85zM35.52 25a1 1 0 0 1-.65-.24L29.44 20a1 1 0 0 1 1.3-1.52l5.43 4.67a1 1 0 0 1-.65 1.85zM52.74 25a1 1 0 0 1-.65-.24L46.66 20A1 1 0 0 1 48 18.53l5.43 4.67a1 1 0 0 1-.69 1.8zM61.33 25a1 1 0 0 1-.65-.24L55.25 20a1 1 0 0 1 1.3-1.52L62 23.2a1 1 0 0 1-.67 1.8zM22.23 8.42H6.51a1 1 0 0 1 0-2h15.72a1 1 0 0 1 0 2zM64.76 8.42H58.4a1 1 0 0 1 0-2h6.36a1 1 0 0 1 0 2z" fill="#2088ff"></path><path d="M46.58 45.72a1 1 0 0 1-1-1V34.1a1 1 0 0 1 2 0v10.62a1 1 0 0 1-1 1z" fill="#79b8ff"></path></g></svg>

                              </div>
                              <div>
                                <dt class="f4">Marketplace</dt>
                                <dd class="f6 text-gray">Find developer tools that work with GitHub</dd>
                              </div>
                            </a>
                            <a href="https://developer.github.com" class="d-flex mb-3 link-gray-dark no-underline" data-ga-click="(Logged out) Header, go to Developers, experiment:site_header_dropdowns; group:dropdowns">
                              <div class="mr-3">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 61.23 60.12" class="d-block" width="34"><title>Asset 1</title><g data-name="Layer 2"><path fill="none" stroke="#79b8ff" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M14.75 13.22H3.52M18.02 6.33H6.54"></path><path fill="none" stroke="#2088ff" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M56.96 51.89H45.73M60.23 44.99H48.75"></path><circle cx="22.5" cy="37.62" r="7.48" transform="rotate(-45 22.502 37.62)" fill="none" stroke="#2088ff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></circle><path d="M36.72 29.79l1.35 3.4 5.93 2V40l-5.92 2.08-1.44 3.39 2.83 5.58L36 54.54l-5.66-2.7L27 53.22l-2 5.9h-4.89L18 53.18l-3.36-1.4L9 54.58 5.58 51.1l2.7-5.66-1.38-3.37-5.9-2v-4.89l5.92-2.08 1.44-3.39-2.82-5.57L9 20.69l5.66 2.7L18 22l2-5.9h4.89L27 22l3.36 1.4L36 20.66l3.45 3.48z" fill="none" stroke="#2088ff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></path><path d="M7.22 22.48L9 20.69l5.66 2.7L18 22l2-5.9h4.89L27 22l3.36 1.4L36 20.66l3.45 3.48-2.7 5.66 1.35 3.4 5.93 2L44 40l-5.92 2.08-1.44 3.39 2.83 5.58-1.83 1.82" fill="none" stroke="#2088ff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" opacity=".1"></path><path d="M37.22 14.11a6.05 6.05 0 1 1 8.56 8.56M30.07 12l-2.29-4.51 2.81-2.79 4.58 2.19 2.72-1.12L39.5 1h4l1.64 4.8 2.71 1.14 4.54-2.26 2.79 2.81L53 12.06l1.09 2.75 4.8 1.58v4L54.09 22l-1.16 2.74 2.29 4.51-2.82 2.83-4.58-2.19" fill="none" stroke="#79b8ff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></path><path d="M29.14 6.14l1.45-1.44 4.58 2.19 2.72-1.12L39.5 1h4l1.64 4.8 2.71 1.14 4.54-2.26 2.79 2.81L53 12.06l1.09 2.75 4.8 1.58v4L54.09 22l-1.16 2.74 2.29 4.51-1.48 1.47" fill="none" stroke="#79b8ff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" opacity=".1"></path></g></svg>

                              </div>
                              <div>
                                <dt class="f4">GitHub API</dt>
                                <dd class="f6 text-gray">Start building on the GitHub platform</dd>
                              </div>
                            </a>
                            <a href="https://partner.github.com/?source=github-header-loggedout&experiment=site_header_dropdowns&group=dropdowns" class="d-flex mb-3 link-gray-dark no-underline" data-ga-click="(Logged out) Header, go to Partner program, experiment:site_header_dropdowns; group:dropdowns">
                              <div class="mr-3">
                                <!-- Generator: Adobe Illustrator 22.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 37 23" style="enable-background:new 0 0 37 23;" xml:space="preserve" class="d-block" width="34">
<style type="text/css">
	.st0{fill:none;stroke:#79B8FF;stroke-linecap:round;stroke-linejoin:round;}
	.st1{fill:none;stroke:#2088FF;stroke-linecap:round;stroke-linejoin:round;}
</style>
<path class="st0" d="M6,1l4.5,1.4L5.3,15.2L1,12.9L6,1z"></path>
<path class="st1" d="M30.9,1.2L36,12.8l-3.9,2.6l-5.2-13L30.9,1.2z"></path>
<path class="st1" d="M5.2,11.7c0-0.6-0.5-1-1-1c-0.6,0-1,0.5-1,1c0,0.6,0.5,1,1,1"></path>
<path class="st0" d="M29.7,4.6c0.4,0,0.8-0.3,0.8-0.8v0c0-0.4-0.3-0.8-0.8-0.8h0c-0.4,0-0.8,0.3-0.8,0.8v0C29,4.3,29.3,4.6,29.7,4.6  L29.7,4.6z"></path>
<path class="st0" d="M6.2,13.4c0,0,2.4,0.8,3.9,2.3L6.2,13.4z M9.6,4.8c0,0,4.3,2.3,6.9,2.8L9.6,4.8z"></path>
<path class="st1" d="M30.4,11.5l-3.2,2.6"></path>
<path class="st0" d="M19.7,9l8.7,6.2c0.4,0.3,1.1,1.2,0.4,2.2c-0.7,0.9-1.5,0.2-1.5,0.2l-6-4.2"></path>
<path class="st1" d="M27.5,4.8c0,0-2,1.6-3.3,1.4c-1.3-0.2-4.7-0.9-4.7-0.9c-0.7,0.8-3.7,3.5-4.6,3.6c0,0-0.2,1.5,1.6,1.3  c1.7-0.2,2.7-0.9,3.7-1.7"></path>
<path class="st0" d="M24.6,18.9c0,0,0.2,0.9-0.2,1.4c-0.2,0.3-0.7,0.6-1.3,0.3l-3.7-2.5L24.6,18.9z M27.1,17.6c0,0,0.1,0.9-0.5,1.4  c-0.3,0.3-0.8,0.6-1.5,0.3l-5.9-4.3L27.1,17.6z"></path>
<path class="st0" d="M22.4,20.1c0,0,0,0.6-0.2,1.1c-0.2,0.3-0.4,0.6-1.1,0.4l-2.8-1.9"></path>
<path class="st1" d="M17.8,17c0.3-0.3,1.6-0.2,1.4,1c-0.3,1.2-1.7,2.4-2.1,2.6c-0.4,0.2-1.4,0.2-1.4-0.7L17.8,17z M14.3,14.6  c0,0-0.7-1.5-1.5-1.2c-0.8,0.3-2.8,2-2.8,2.7c0,0.7,1,1.5,1.9,0.8L14.3,14.6z"></path>
<path class="st1" d="M16.1,15.8c0.2-0.3,1.8-0.4,1.5,1.1c-0.3,1.4-2.1,2.7-2.4,2.9c-0.3,0.1-1.7,0.3-1.9-0.9"></path>
<path class="st1" d="M15.9,16.1c0,0,0.5-0.9-0.1-1.5c-0.6-0.6-1.2-0.2-1.6,0.2c-0.3,0.3-2.9,2.8-2.9,2.8s0.5,1.8,1.7,1.3  C14.2,18.5,15.9,16.1,15.9,16.1z"></path>
</svg>

                              </div>
                              <div>
                                <dt class="f4">Partner program</dt>
                                <dd class="f6 text-gray">Help millions of developers do their best work</dd>
                              </div>
                            </a>
                          </dl>
                          <div class="d-none d-lg-block border-left position-absolute top-0 right-0 bottom-0"></div>
                        </div>
                        <div class="col-4">
                          <strong class="d-block f5 text-bold mb-2 text-gray-dark">Apps by GitHub</strong>
                          <ul class="list-style-none f5">
                            <li class="mb-2"><a href="https://desktop.github.com/" class="link-gray" data-ga-click="(Logged out) Header, go to Desktop, experiment:site_header_dropdowns; group:dropdowns">Desktop <span style="color: #959da5;">&#8599;</span></a></li>
                            <li class="mb-2"><a href="https://atom.io/" class="link-gray" data-ga-click="(Logged out) Header, go to Atom, experiment:site_header_dropdowns; group:dropdowns">Atom <span style="color: #959da5;">&#8599;</span></a></li>
                            <li class="mb-2"><a href="https://visualstudio.github.com/" class="link-gray" data-ga-click="(Logged out) Header, go to Visual Studio, experiment:site_header_dropdowns; group:dropdowns">Visual Studio <span style="color: #959da5;">&#8599;</span></a></li>
                            <li class="mb-2"><a href="https://unity.github.com/" class="link-gray" data-ga-click="(Logged out) Header, go to Unity Extension, experiment:site_header_dropdowns; group:dropdowns">Unity Extension <span style="color: #959da5;">&#8599;</span></a></li>
                          </ul>
                        </div>
                      </div>
                    </div>
                  </details>
                </li>
                <li class="HeaderMenu-item dropdown mr-5">
                  <details class="details-expanded details-reset js-dropdown-details ">
                    <summary class="HeaderMenu-target text-white">
                      <div class="d-flex flex-items-baseline flex-justify-between">
                        <span class="d-inline-block mr-1">Business</span>
                        <span class="dropdown-caret"></span>
                      </div>
                    </summary>
                    <div class="dropdown-menu dropdown-menu-s p-4 ml-n4 mt-3 mt-lg-2">
                      <a href="/business" class="d-block d-lg-flex flex-items-center flex-justify-between f5 link-gray-dark text-bold mb-2" data-ga-click="(Logged out) Header, go to Business, experiment:site_header_dropdowns; group:dropdowns"><span>Business overview</span> <svg height="16" class="octicon octicon-chevron-right text-gray-dark" viewBox="0 0 8 16" version="1.1" width="8" aria-hidden="true"><path fill-rule="evenodd" d="M7.5 8l-5 5L1 11.5 4.75 8 1 4.5 2.5 3l5 5z"/></svg></a>
                      <hr class="border border-dashed my-3 d-none d-lg-block">
                      <ul class="list-style-none f5">
                        <li class="mb-2"><a href="/business/customers" class="d-block link-gray" data-ga-click="(Logged out) Header, go to Customers, experiment:site_header_dropdowns; group:dropdowns">Customers</a></li>
                        <li class="mb-2"><a href="/business/security" class="d-block link-gray" data-ga-click="(Logged out) Header, go to Security, experiment:site_header_dropdowns; group:dropdowns">Security</a></li>
                        <li class="mb-2"><a href="https://enterprise.github.com/contact" class="d-block link-gray" data-ga-click="(Logged out) Header, go to Contact, experiment:site_header_dropdowns; group:dropdowns">Contact</a></li>
                      </ul>
                    </div>
                  </details>
                </li>

                <li class="HeaderMenu-item dropdown mr-5">
                  <details class="details-expanded details-reset js-dropdown-details ">
                    <summary class="HeaderMenu-target text-white">
                      <div class="d-flex flex-items-baseline flex-justify-between">
                        <span class="d-inline-block mr-1">Explore</span>
                        <span class="dropdown-caret"></span>
                      </div>
                    </summary>
                    <div class="dropdown-menu dropdown-menu-s p-4 ml-n4 mt-3 mt-lg-2">
                      <ul class="list-style-none f5">
                        <li class="mb-2"><a href="/explore" class="d-lg-flex flex-items-center flex-justify-between link-gray-dark text-bold" data-ga-click="(Logged out) Header, go to Explore GitHub, experiment:site_header_dropdowns; group:dropdowns"><span>Explore GitHub</span> <svg height="16" class="octicon octicon-chevron-right text-gray-dark" viewBox="0 0 8 16" version="1.1" width="8" aria-hidden="true"><path fill-rule="evenodd" d="M7.5 8l-5 5L1 11.5 4.75 8 1 4.5 2.5 3l5 5z"/></svg></a></li>
                        <li class="mb-3"><a href="/trending" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Trending, experiment:site_header_dropdowns; group:dropdowns">Trending</a></li>
                      </ul>

                      <hr class="border border-dashed my-3 d-none d-lg-block">

                      <strong class="d-block f5 text-bold mb-2 text-gray-dark">Learn</strong>
                      <ul class="list-style-none f5">
                        <li class="mb-2"><a href="/topics" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Topics, experiment:site_header_dropdowns; group:dropdowns">Topics</a></li>
                        <li class="mb-2"><a href="/collections" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Collections, experiment:site_header_dropdowns; group:dropdowns">Collections</a></li>
                        <li class="mb-2"><a href="https://lab.github.com/" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Learning Lab, experiment:site_header_dropdowns; group:dropdowns">Learning Lab <span style="color: #959da5;">&#8599;</span></a></li>
                        <li class="mb-3"><a href="https://opensource.guide/" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Open source guides, experiment:site_header_dropdowns; group:dropdowns">Open source guides <span style="color: #959da5;">&#8599;</span></a></li>
                      </ul>

                      <hr class="border border-dashed my-3 d-none d-lg-block">

                      <strong class="d-block f5 text-bold mb-2 text-gray-dark">Connect</strong>
                      <ul class="list-style-none f5">
                        <li class="mb-2"><a href="/events" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Events, experiment:site_header_dropdowns; group:dropdowns">Events</a></li>
                        <li class="mb-2"><a href="https://github.community/" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Community forum, experiment:site_header_dropdowns; group:dropdowns">Community forum <span style="color: #959da5;">&#8599;</span></a></li>
                        <li class="mb-3"><a href="https://education.github.community/" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Education community, experiment:site_header_dropdowns; group:dropdowns">Education community <span style="color: #959da5;">&#8599;</span></a></li>
                      </ul>
                    </div>
                  </details>
                </li>

                <li class="HeaderMenu-item dropdown mr-5">
                  <details class="details-expanded details-reset js-dropdown-details ">
                    <summary class="HeaderMenu-target text-white">
                      <div class="d-flex flex-items-baseline flex-justify-between">
                        <span class="d-inline-block mr-1">Pricing</span>
                        <span class="dropdown-caret"></span>
                      </div>
                    </summary>
                    <div class="dropdown-menu dropdown-menu-s p-4 ml-n4 mt-3 mt-lg-2">
                      <a href="/pricing" class="d-block d-lg-flex flex-items-center flex-justify-between f5 link-gray-dark text-bold mb-3" data-ga-click="(Logged out) Header, go to Pricing, experiment:site_header_dropdowns; group:dropdowns"><span>Pricing overview</span> <svg height="16" class="octicon octicon-chevron-right text-gray-dark" viewBox="0 0 8 16" version="1.1" width="8" aria-hidden="true"><path fill-rule="evenodd" d="M7.5 8l-5 5L1 11.5 4.75 8 1 4.5 2.5 3l5 5z"/></svg></a>
                      <hr class="border border-dashed my-3 d-none d-lg-block">
                      <strong class="d-block f5 text-bold text-gray-dark mb-2">Plans</strong>
                      <ul class="list-style-none f5">
                        <li class="mb-2"><a href="/pricing/developer" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Developer, experiment:site_header_dropdowns; group:dropdowns">Developer</a></li>
                        <li class="mb-2"><a href="/pricing/team" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Team, experiment:site_header_dropdowns; group:dropdowns">Team</a></li>
                        <li class="mb-2"><a href="/pricing/business-hosted" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Business, experiment:site_header_dropdowns; group:dropdowns">Business</a></li>
                        <li class="mb-3"><a href="/pricing#feature-comparison" class="link-gray d-block" data-ga-click="(Logged out) Header, go to Compare plans, experiment:site_header_dropdowns; group:dropdowns">Compare plans</a></li>
                      </ul>
                      <hr class="border border-dashed my-3 d-none d-lg-block">
                      <ul class="list-style-none f5">
                        <li class="mb-2"><a href="https://github.com/nonprofit" class="link-gray-dark" data-ga-click="(Logged out) Header, go to Nonprofits, experiment:site_header_dropdowns; group:dropdowns">Nonprofits</a></li>
                        <li class="mb-2"><a href="https://education.github.com/discount_requests/new" class="link-gray-dark" data-ga-click="(Logged out) Header, go to Education, experiment:site_header_dropdowns; group:dropdowns">Education <span style="color: #959da5;">&#8599;</span></a></li>
                      </ul>
                    </div>
                  </details>
                </li>
            </ul>
          </nav>

        <div class="d-flex flex-items-center">
            <div class="d-flex mr-3 flex-items-center">
              <div class="header-search scoped-search site-scoped-search js-site-search position-relative js-jump-to"
  role="search combobox"
  aria-owns="jump-to-results"
  aria-label="Search or jump to"
  aria-haspopup="listbox"
  aria-expanded="true"
>
  <div class="position-relative">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" data-scope-type="Repository" data-scope-id="576201" data-scoped-search-url="/mrdoob/three.js/search" data-unscoped-search-url="/search" action="/mrdoob/three.js/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
      <label class="form-control header-search-wrapper header-search-wrapper-jump-to position-relative d-flex flex-justify-between flex-items-center js-chromeless-input-container">
        <input type="text"
          class="form-control header-search-input jump-to-field js-jump-to-field js-site-search-focus js-site-search-field is-clearable"
          data-hotkey="s,/"
          name="q"
          value=""
          placeholder="Search"
          data-unscoped-placeholder="Search GitHub"
          data-scoped-placeholder="Search"
          autocapitalize="off"
          aria-autocomplete="list"
          aria-controls="jump-to-results"
          data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations#csrf-token=odfTKW1NauZkFpI0vYpDTOF+CEz3LB/d8NkhXxgEewnojfrYqXiI5LZY3YhJBA555Wfd0DpqyHbfv43Jx9fNQg=="
          spellcheck="false"
          autocomplete="off"
          >
          <input type="hidden" class="js-site-search-type-field" name="type" >
            <img src="https://assets-cdn.github.com/images/search-shortcut-hint.svg" alt="" class="mr-2 header-search-key-slash">

            <div class="Box position-absolute overflow-hidden d-none jump-to-suggestions js-jump-to-suggestions-container">
              <ul class="d-none js-jump-to-suggestions-template-container">
                <li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item">
                  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center p-2 jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open" href="">
                    <div class="jump-to-octicon js-jump-to-octicon mr-2 text-center d-none"></div>
                    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar" alt="" aria-label="Team" src="" width="28" height="28">

                    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden no-wrap css-truncate css-truncate-target">
                    </div>

                    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
                      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
                        In this repository
                      </span>
                      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
                        All GitHub
                      </span>
                      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
                    </div>

                    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
                      Jump to
                      <span class="d-inline-block ml-1 v-align-middle">↵</span>
                    </div>
                  </a>
                </li>
                <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-repo-octicon-template" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
                <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-project-octicon-template" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
                <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-search-octicon-template" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
              </ul>
              <ul class="d-none js-jump-to-no-results-template-container">
                <li class="d-flex flex-justify-center flex-items-center p-3 f5 d-none">
                  <span class="text-gray">No suggested jump to results</span>
                </li>
              </ul>

              <ul id="jump-to-results" class="js-navigation-container jump-to-suggestions-results-container js-jump-to-suggestions-results-container" >
                <li class="d-flex flex-justify-center flex-items-center p-0 f5">
                  <img src="https://assets-cdn.github.com/images/spinners/octocat-spinner-128.gif" alt="Octocat Spinner Icon" class="m-2" width="28">
                </li>
              </ul>
            </div>
      </label>
</form>  </div>
</div>

            </div>

          <a class="HeaderMenu-target text-white no-underline mr-3" href="/login?return_to=%2Fmrdoob%2Fthree.js%2Fblob%2Fmaster%2Fbuild%2Fthree.min.js" data-ga-click="(Logged out) Header, clicked Sign in, text:sign-in; experiment:site_header_dropdowns; group:dropdowns">Sign&nbsp;in</a>
            <a class="HeaderMenu-target d-inline-block text-white no-underline border border-gray-dark rounded-2 px-2 py-1" href="/join" data-ga-click="(Logged out) Header, clicked Sign up, text:sign-up; experiment:site_header_dropdowns; group:dropdowns">Sign&nbsp;up</a>
        </div>
      </div>
    </div>
  </header>


  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">
</div>



  <div role="main" class="application-main ">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <div id="js-repo-pjax-container" data-pjax-container >
      







  <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav  ">
    <div class="repohead-details-container clearfix container">

      <ul class="pagehead-actions">
  <li>
      <a href="/login?return_to=%2Fmrdoob%2Fthree.js"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to watch a repository" rel="nofollow">
    <svg class="octicon octicon-eye" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
    Watch
  </a>
  <a class="social-count" href="/mrdoob/three.js/watchers"
     aria-label="2331 users are watching this repository">
    2,331
  </a>

  </li>

  <li>
      <a href="/login?return_to=%2Fmrdoob%2Fthree.js"
    class="btn btn-sm btn-with-count tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <svg class="octicon octicon-star" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
    Star
  </a>

    <a class="social-count js-social-count" href="/mrdoob/three.js/stargazers"
      aria-label="43199 users starred this repository">
      43,199
    </a>

  </li>

  <li>
      <a href="/login?return_to=%2Fmrdoob%2Fthree.js"
        class="btn btn-sm btn-with-count tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <svg class="octicon octicon-repo-forked" viewBox="0 0 10 16" version="1.1" width="10" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
        Fork
      </a>

    <a href="/mrdoob/three.js/network" class="social-count"
       aria-label="16299 users forked this repository">
      16,299
    </a>
  </li>
</ul>

      <h1 class="public ">
  <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a class="url fn" rel="author" href="/mrdoob">mrdoob</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a data-pjax="#js-repo-pjax-container" href="/mrdoob/three.js">three.js</a></strong>

</h1>

    </div>
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax container"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a class="js-selected-navigation-item selected reponav-item" itemprop="url" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /mrdoob/three.js/tree/master" href="/mrdoob/three.js/tree/master">
      <svg class="octicon octicon-code" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" data-hotkey="g i" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /mrdoob/three.js/issues" href="/mrdoob/three.js/issues">
        <svg class="octicon octicon-issue-opened" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">554</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a data-hotkey="g p" itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /mrdoob/three.js/pulls" href="/mrdoob/three.js/pulls">
      <svg class="octicon octicon-git-pull-request" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">176</span>
      <meta itemprop="position" content="3">
</a>  </span>

    <a data-hotkey="g b" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /mrdoob/three.js/projects" href="/mrdoob/three.js/projects">
      <svg class="octicon octicon-project" viewBox="0 0 15 16" version="1.1" width="15" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >1</span>
</a>
    <a class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /mrdoob/three.js/wiki" href="/mrdoob/three.js/wiki">
      <svg class="octicon octicon-book" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

  <a class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse /mrdoob/three.js/pulse" href="/mrdoob/three.js/pulse">
    <svg class="octicon octicon-graph" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Insights
</a>

</nav>


  </div>

<div class="container new-discussion-timeline experiment-repo-nav  ">
  <div class="repository-content ">

    
  <a class="d-none js-permalink-shortcut" data-hotkey="y" href="/mrdoob/three.js/blob/0949e59f3a4978efc39d7c1366d26274b7d9af82/build/three.min.js">Permalink</a>

  <!-- blob contrib key: blob_contributors:v21:5da46be8ba658286c170c0dd871323c2 -->

      <div class="signup-prompt-bg rounded-1">
      <div class="signup-prompt p-4 text-center mb-4 rounded-1">
        <div class="position-relative">
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form action="/site/dismiss_signup_prompt" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="NCtIGi9wyKnzQOka3heHCwBWWJn2VTljH8QdYGPmgWJQhKt3VCQNoVytOggtEmthOBkAaGVsDni/4BQ3/GPMDA==" />
            <button type="submit" class="position-absolute top-0 right-0 btn-link link-gray" data-ga-click="(Logged out) Sign up prompt, clicked Dismiss, text:dismiss">
              Dismiss
            </button>
</form>          <h3 class="pt-2">Join GitHub today</h3>
          <p class="col-6 mx-auto">GitHub is home to over 28 million developers working together to host and review code, manage projects, and build software together.</p>
          <a class="btn btn-primary" href="/join?source=prompt-blob-show" data-ga-click="(Logged out) Sign up prompt, clicked Sign up, text:sign-up">Sign up</a>
        </div>
      </div>
    </div>


  <div class="file-navigation">
    
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class=" btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" aria-expanded="false" aria-haspopup="true">
      <i>Branch:</i>
      <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg class="octicon octicon-x js-menu-close" role="img" aria-label="Close" viewBox="0 0 12 16" version="1.1" width="12" height="16"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tag…" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mrdoob/three.js/blob/dev/build/three.min.js"
               data-name="dev"
               data-skip-pjax="true"
               rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                dev
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/mrdoob/three.js/blob/gh-pages/build/three.min.js"
               data-name="gh-pages"
               data-skip-pjax="true"
               rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                gh-pages
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/mrdoob/three.js/blob/master/build/three.min.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r94/build/three.min.js"
              data-name="r94"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r94">
                r94
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r93/build/three.min.js"
              data-name="r93"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r93">
                r93
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r92/build/three.min.js"
              data-name="r92"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r92">
                r92
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r91/build/three.min.js"
              data-name="r91"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r91">
                r91
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r90/build/three.min.js"
              data-name="r90"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r90">
                r90
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r89/build/three.min.js"
              data-name="r89"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r89">
                r89
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r88/build/three.min.js"
              data-name="r88"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r88">
                r88
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r87/build/three.min.js"
              data-name="r87"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r87">
                r87
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r86/build/three.min.js"
              data-name="r86"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r86">
                r86
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r85/build/three.min.js"
              data-name="r85"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r85">
                r85
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r84/build/three.min.js"
              data-name="r84"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r84">
                r84
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r83/build/three.min.js"
              data-name="r83"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r83">
                r83
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r82/build/three.min.js"
              data-name="r82"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r82">
                r82
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r81/build/three.min.js"
              data-name="r81"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r81">
                r81
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r80/build/three.min.js"
              data-name="r80"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r80">
                r80
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r79/build/three.min.js"
              data-name="r79"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r79">
                r79
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r78/build/three.min.js"
              data-name="r78"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r78">
                r78
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r77/build/three.min.js"
              data-name="r77"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r77">
                r77
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r76/build/three.min.js"
              data-name="r76"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r76">
                r76
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r75/build/three.min.js"
              data-name="r75"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r75">
                r75
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r74/build/three.min.js"
              data-name="r74"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r74">
                r74
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r73/build/three.min.js"
              data-name="r73"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r73">
                r73
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r72/build/three.min.js"
              data-name="r72"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r72">
                r72
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r71/build/three.min.js"
              data-name="r71"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r71">
                r71
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r70/build/three.min.js"
              data-name="r70"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r70">
                r70
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r69/build/three.min.js"
              data-name="r69"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r69">
                r69
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r68/build/three.min.js"
              data-name="r68"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r68">
                r68
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r67/build/three.min.js"
              data-name="r67"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r67">
                r67
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r66/build/three.min.js"
              data-name="r66"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r66">
                r66
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r65/build/three.min.js"
              data-name="r65"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r65">
                r65
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r64/build/three.min.js"
              data-name="r64"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r64">
                r64
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r63/build/three.min.js"
              data-name="r63"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r63">
                r63
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r62/build/three.min.js"
              data-name="r62"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r62">
                r62
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r61/build/three.min.js"
              data-name="r61"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r61">
                r61
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r60/build/three.min.js"
              data-name="r60"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r60">
                r60
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r59/build/three.min.js"
              data-name="r59"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r59">
                r59
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r58/build/three.min.js"
              data-name="r58"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r58">
                r58
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r57/build/three.min.js"
              data-name="r57"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r57">
                r57
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r56/build/three.min.js"
              data-name="r56"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r56">
                r56
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r55/build/three.min.js"
              data-name="r55"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r55">
                r55
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r54/build/three.min.js"
              data-name="r54"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r54">
                r54
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r53/build/three.min.js"
              data-name="r53"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r53">
                r53
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r52/build/three.min.js"
              data-name="r52"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r52">
                r52
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r51/build/three.min.js"
              data-name="r51"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r51">
                r51
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r50/build/three.min.js"
              data-name="r50"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r50">
                r50
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r49/build/three.min.js"
              data-name="r49"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r49">
                r49
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r48/build/three.min.js"
              data-name="r48"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r48">
                r48
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r47/build/three.min.js"
              data-name="r47"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r47">
                r47
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r46/build/three.min.js"
              data-name="r46"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r46">
                r46
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r45/build/three.min.js"
              data-name="r45"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r45">
                r45
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r44/build/three.min.js"
              data-name="r44"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r44">
                r44
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r43/build/three.min.js"
              data-name="r43"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r43">
                r43
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r42/build/three.min.js"
              data-name="r42"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r42">
                r42
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r41/ROME/build/three.min.js"
              data-name="r41/ROME"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r41/ROME">
                r41/ROME
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r40/build/three.min.js"
              data-name="r40"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r40">
                r40
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r39/build/three.min.js"
              data-name="r39"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r39">
                r39
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r38/build/three.min.js"
              data-name="r38"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r38">
                r38
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r37/build/three.min.js"
              data-name="r37"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r37">
                r37
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r36/build/three.min.js"
              data-name="r36"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r36">
                r36
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r35/build/three.min.js"
              data-name="r35"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r35">
                r35
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r34/build/three.min.js"
              data-name="r34"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r34">
                r34
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r33/build/three.min.js"
              data-name="r33"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r33">
                r33
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r32/build/three.min.js"
              data-name="r32"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r32">
                r32
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r31/build/three.min.js"
              data-name="r31"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r31">
                r31
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r30/build/three.min.js"
              data-name="r30"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r30">
                r30
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r29/build/three.min.js"
              data-name="r29"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r29">
                r29
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r28/build/three.min.js"
              data-name="r28"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r28">
                r28
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r25/build/three.min.js"
              data-name="r25"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r25">
                r25
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r18/build/three.min.js"
              data-name="r18"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r18">
                r18
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r17/build/three.min.js"
              data-name="r17"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r17">
                r17
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r16/build/three.min.js"
              data-name="r16"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r16">
                r16
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r15/build/three.min.js"
              data-name="r15"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r15">
                r15
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r14/build/three.min.js"
              data-name="r14"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r14">
                r14
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r13/build/three.min.js"
              data-name="r13"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r13">
                r13
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r12/build/three.min.js"
              data-name="r12"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r12">
                r12
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r11/build/three.min.js"
              data-name="r11"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r11">
                r11
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r10/build/three.min.js"
              data-name="r10"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r10">
                r10
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r9/build/three.min.js"
              data-name="r9"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r9">
                r9
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r8/build/three.min.js"
              data-name="r8"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r8">
                r8
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r7/build/three.min.js"
              data-name="r7"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r7">
                r7
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r6/build/three.min.js"
              data-name="r6"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r6">
                r6
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r5/build/three.min.js"
              data-name="r5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r5">
                r5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r4/build/three.min.js"
              data-name="r4"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r4">
                r4
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r3/build/three.min.js"
              data-name="r3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r3">
                r3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r2/build/three.min.js"
              data-name="r2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r2">
                r2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/mrdoob/three.js/tree/r1/build/three.min.js"
              data-name="r1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="r1">
                r1
              </span>
            </a>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

    <div class="BtnGroup float-right">
      <a href="/mrdoob/three.js/find/master"
            class="js-pjax-capture-input btn btn-sm BtnGroup-item"
            data-pjax
            data-hotkey="t">
        Find file
      </a>
      <clipboard-copy for="blob-path" class="btn btn-sm BtnGroup-item">
        Copy path
      </clipboard-copy>
    </div>
    <div id="blob-path" class="breadcrumb">
      <span class="repo-root js-repo-root"><span class="js-path-segment"><a data-pjax="true" href="/mrdoob/three.js/tree/master"><span>three.js</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a data-pjax="true" href="/mrdoob/three.js/tree/master/build"><span>build</span></a></span><span class="separator">/</span><strong class="final-path">three.min.js</strong>
    </div>
  </div>


  
  <div class="commit-tease">
      <span class="float-right">
        <a class="commit-tease-sha" href="/mrdoob/three.js/commit/0949e59f3a4978efc39d7c1366d26274b7d9af82" data-pjax>
          0949e59
        </a>
        <relative-time datetime="2018-06-27T15:09:19Z">Jun 27, 2018</relative-time>
      </span>
      <div>
        <a rel="author" data-skip-pjax="true" data-hovercard-user-id="97088" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob"><img class="avatar" src="https://avatars0.githubusercontent.com/u/97088?s=40&amp;v=4" width="20" height="20" alt="@mrdoob" /></a>
        <a class="user-mention" rel="author" data-hovercard-user-id="97088" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob">mrdoob</a>
          <a data-pjax="true" title="r94" class="message" href="/mrdoob/three.js/commit/0949e59f3a4978efc39d7c1366d26274b7d9af82">r94</a>
      </div>

    <div class="commit-tease-contributors">
      <button type="button" class="btn-link muted-link contributors-toggle" data-facebox="#blob_contributors_box">
        <strong>12</strong>
         contributors
      </button>
          <a class="avatar-link" data-hovercard-user-id="97088" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=mrdoob">
      <img class="avatar" src="https://avatars0.githubusercontent.com/u/97088?s=40&amp;v=4" width="20" height="20" alt="@mrdoob" /> 
</a>    <a class="avatar-link" data-hovercard-user-id="438022" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=alteredq">
      <img class="avatar" src="https://avatars2.githubusercontent.com/u/438022?s=40&amp;v=4" width="20" height="20" alt="@alteredq" /> 
</a>    <a class="avatar-link" data-hovercard-user-id="1263177" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=daoshengmu">
      <img class="avatar" src="https://avatars1.githubusercontent.com/u/1263177?s=40&amp;v=4" width="20" height="20" alt="@daoshengmu" /> 
</a>    <a class="avatar-link" data-hovercard-user-id="476017" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=tsherif">
      <img class="avatar" src="https://avatars0.githubusercontent.com/u/476017?s=40&amp;v=4" width="20" height="20" alt="@tsherif" /> 
</a>    <a class="avatar-link" data-hovercard-user-id="3916357" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=tschw">
      <img class="avatar" src="https://avatars1.githubusercontent.com/u/3916357?s=40&amp;v=4" width="20" height="20" alt="@tschw" /> 
</a>    <a class="avatar-link" data-hovercard-user-id="1162160" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=Rich-Harris">
      <img class="avatar" src="https://avatars0.githubusercontent.com/u/1162160?s=40&amp;v=4" width="20" height="20" alt="@Rich-Harris" /> 
</a>    <a class="avatar-link" data-hovercard-user-id="1036540" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=plepers">
      <img class="avatar" src="https://avatars1.githubusercontent.com/u/1036540?s=40&amp;v=4" width="20" height="20" alt="@plepers" /> 
</a>    <a class="avatar-link" data-hovercard-user-id="577871" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=crobi">
      <img class="avatar" src="https://avatars3.githubusercontent.com/u/577871?s=40&amp;v=4" width="20" height="20" alt="@crobi" /> 
</a>    <a class="avatar-link" data-hovercard-user-id="1069125" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=MiiBond">
      <img class="avatar" src="https://avatars1.githubusercontent.com/u/1069125?s=40&amp;v=4" width="20" height="20" alt="@MiiBond" /> 
</a>    <a class="avatar-link" data-hovercard-user-id="83944" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=manuq">
      <img class="avatar" src="https://avatars0.githubusercontent.com/u/83944?s=40&amp;v=4" width="20" height="20" alt="@manuq" /> 
</a>    <a class="avatar-link" data-hovercard-user-id="1000017" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=WestLangley">
      <img class="avatar" src="https://avatars0.githubusercontent.com/u/1000017?s=40&amp;v=4" width="20" height="20" alt="@WestLangley" /> 
</a>    <a class="avatar-link" data-hovercard-user-id="949987" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob/three.js/commits/master/build/three.min.js?author=chmp">
      <img class="avatar" src="https://avatars2.githubusercontent.com/u/949987?s=40&amp;v=4" width="20" height="20" alt="@chmp" /> 
</a>

    </div>

    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header" data-facebox-id="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list" data-facebox-id="facebox-description">
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="97088" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob"><img src="https://avatars1.githubusercontent.com/u/97088?s=48&amp;v=4" width="24" height="24" alt="@mrdoob" /></a>
            <a data-hovercard-user-id="97088" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/mrdoob">mrdoob</a>
          </li>
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="438022" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/alteredq"><img src="https://avatars3.githubusercontent.com/u/438022?s=48&amp;v=4" width="24" height="24" alt="@alteredq" /></a>
            <a data-hovercard-user-id="438022" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/alteredq">alteredq</a>
          </li>
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="1263177" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/daoshengmu"><img src="https://avatars0.githubusercontent.com/u/1263177?s=48&amp;v=4" width="24" height="24" alt="@daoshengmu" /></a>
            <a data-hovercard-user-id="1263177" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/daoshengmu">daoshengmu</a>
          </li>
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="476017" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/tsherif"><img src="https://avatars1.githubusercontent.com/u/476017?s=48&amp;v=4" width="24" height="24" alt="@tsherif" /></a>
            <a data-hovercard-user-id="476017" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/tsherif">tsherif</a>
          </li>
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="3916357" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/tschw"><img src="https://avatars0.githubusercontent.com/u/3916357?s=48&amp;v=4" width="24" height="24" alt="@tschw" /></a>
            <a data-hovercard-user-id="3916357" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/tschw">tschw</a>
          </li>
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="1162160" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/Rich-Harris"><img src="https://avatars1.githubusercontent.com/u/1162160?s=48&amp;v=4" width="24" height="24" alt="@Rich-Harris" /></a>
            <a data-hovercard-user-id="1162160" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/Rich-Harris">Rich-Harris</a>
          </li>
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="1036540" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/plepers"><img src="https://avatars0.githubusercontent.com/u/1036540?s=48&amp;v=4" width="24" height="24" alt="@plepers" /></a>
            <a data-hovercard-user-id="1036540" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/plepers">plepers</a>
          </li>
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="577871" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/crobi"><img src="https://avatars2.githubusercontent.com/u/577871?s=48&amp;v=4" width="24" height="24" alt="@crobi" /></a>
            <a data-hovercard-user-id="577871" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/crobi">crobi</a>
          </li>
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="1069125" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/MiiBond"><img src="https://avatars0.githubusercontent.com/u/1069125?s=48&amp;v=4" width="24" height="24" alt="@MiiBond" /></a>
            <a data-hovercard-user-id="1069125" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/MiiBond">MiiBond</a>
          </li>
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="83944" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/manuq"><img src="https://avatars1.githubusercontent.com/u/83944?s=48&amp;v=4" width="24" height="24" alt="@manuq" /></a>
            <a data-hovercard-user-id="83944" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/manuq">manuq</a>
          </li>
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="1000017" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/WestLangley"><img src="https://avatars1.githubusercontent.com/u/1000017?s=48&amp;v=4" width="24" height="24" alt="@WestLangley" /></a>
            <a data-hovercard-user-id="1000017" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/WestLangley">WestLangley</a>
          </li>
          <li class="facebox-user-list-item">
            <a class="d-inline-block" data-hovercard-user-id="949987" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/chmp"><img src="https://avatars3.githubusercontent.com/u/949987?s=48&amp;v=4" width="24" height="24" alt="@chmp" /></a>
            <a data-hovercard-user-id="949987" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/chmp">chmp</a>
          </li>
      </ul>
    </div>
  </div>



  <div class="file">
    <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a id="raw-url" class="btn btn-sm BtnGroup-item" href="/mrdoob/three.js/raw/master/build/three.min.js">Raw</a>
        <a class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b" href="/mrdoob/three.js/blame/master/build/three.min.js">Blame</a>
      <a rel="nofollow" class="btn btn-sm BtnGroup-item" href="/mrdoob/three.js/commits/master/build/three.min.js">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="https://desktop.github.com"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg class="octicon octicon-device-desktop" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <button type="button" class="btn-octicon disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <svg class="octicon octicon-pencil" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
        </button>
        <button type="button" class="btn-octicon btn-octicon-danger disabled tooltipped tooltipped-nw"
          aria-label="You must be signed in to make or propose changes">
          <svg class="octicon octicon-trashcan" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
        </button>
  </div>

  <div class="file-info">
      947 lines (946 sloc)
      <span class="file-info-divider"></span>
    533 KB
  </div>
</div>

    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> threejs.org/license</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">k</span>,<span class="pl-smi">za</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">exports</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">?</span><span class="pl-en">za</span>(<span class="pl-c1">exports</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> define<span class="pl-k">&amp;&amp;</span><span class="pl-smi">define</span>.<span class="pl-smi">amd</span><span class="pl-k">?</span><span class="pl-en">define</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>exports<span class="pl-pds">&quot;</span></span>],za)<span class="pl-k">:</span><span class="pl-en">za</span>(<span class="pl-smi">k</span>.<span class="pl-c1">THREE</span><span class="pl-k">=</span>{})})(<span class="pl-c1">this</span>,<span class="pl-k">function</span>(<span class="pl-smi">k</span>){<span class="pl-k">function</span> <span class="pl-en">za</span>(){}function B(a,b){this.x=a||0;this.y=b||0}function R(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];0&lt;arguments.length&amp;&amp;console.error(&quot;THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.&quot;)}function ca(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1}function p(a,</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line">b,c){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">0</span>}function la(){this.elements=[1,0,0,0,1,0,0,0,1];0&lt;arguments.length&amp;&amp;console.error(&quot;THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.&quot;)}function ea(a,b,c,d,e,f,g,h,l,m){Object.defineProperty(this,&quot;id&quot;,{value:Ff++});this.uuid=J.generateUUID();this.name=&quot;&quot;;this.image=void 0!==a?a:ea.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:ea.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:1001;this.wrapT=void 0!==d?d:1001;this.magFilter=void 0!==</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">?</span>e<span class="pl-k">:</span><span class="pl-c1">1006</span>;<span class="pl-c1">this</span>.<span class="pl-smi">minFilter</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">?</span>f<span class="pl-k">:</span><span class="pl-c1">1008</span>;<span class="pl-c1">this</span>.<span class="pl-smi">anisotropy</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>l<span class="pl-k">?</span>l<span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">format</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>g<span class="pl-k">?</span>g<span class="pl-k">:</span><span class="pl-c1">1023</span>;<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>h<span class="pl-k">?</span>h<span class="pl-k">:</span><span class="pl-c1">1009</span>;<span class="pl-c1">this</span>.<span class="pl-smi">offset</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">repeat</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">center</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">la</span>;<span class="pl-c1">this</span>.<span class="pl-smi">generateMipmaps</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">premultiplyAlpha</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">flipY</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">unpackAlignment</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-c1">this</span>.<span class="pl-c1">encoding</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>m<span class="pl-k">?</span>m<span class="pl-k">:</span><span class="pl-c1">3E3</span>;<span class="pl-c1">this</span>.<span class="pl-c1">version</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">onUpdate</span><span class="pl-k">=</span><span class="pl-c1">null</span>}function W(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1}function kb(a,</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line">b,c){<span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">scissor</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,a,b);<span class="pl-c1">this</span>.<span class="pl-smi">scissorTest</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">viewport</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,a,b);c<span class="pl-k">=</span>c<span class="pl-k">||</span>{};<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">minFilter</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">minFilter</span><span class="pl-k">=</span><span class="pl-c1">1006</span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ea</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-smi">wrapS</span>,<span class="pl-smi">c</span>.<span class="pl-smi">wrapT</span>,<span class="pl-smi">c</span>.<span class="pl-smi">magFilter</span>,<span class="pl-smi">c</span>.<span class="pl-smi">minFilter</span>,<span class="pl-smi">c</span>.<span class="pl-smi">format</span>,<span class="pl-smi">c</span>.<span class="pl-c1">type</span>,<span class="pl-smi">c</span>.<span class="pl-smi">anisotropy</span>,<span class="pl-smi">c</span>.<span class="pl-c1">encoding</span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">generateMipmaps</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">generateMipmaps</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">generateMipmaps</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">depthBuffer</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">depthBuffer</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">depthBuffer</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">stencilBuffer</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">stencilBuffer</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">stencilBuffer</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">depthTexture</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">depthTexture</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">depthTexture</span><span class="pl-k">:</span><span class="pl-c1">null</span>}function Lb(a,b,c){kb.call(this,a,b,c);this.activeMipMapLevel=this.activeCubeFace=0}function lb(a,b,c,d,e,f,g,h,l,m,v,n){ea.call(this,null,f,g,h,l,m,d,e,v,n);this.image={data:a,width:b,height:c};this.magFilter=void 0!==l?l:1003;this.minFilter=void 0!==m?m:1003;this.flipY=this.generateMipmaps=!1;this.unpackAlignment=1}function Xa(a,b){this.min=void 0!==a?a:new p(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new p(-Infinity,-Infinity,-Infinity)}function Ha(a,b){this.center=void 0!==</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-c1">0</span>}function Ia(a,b){this.normal=void 0!==a?a:new p(1,0,0);this.constant=void 0!==b?b:0}function td(a,b,c,d,e,f){this.planes=[void 0!==a?a:new Ia,void 0!==b?b:new Ia,void 0!==c?c:new Ia,void 0!==d?d:new Ia,void 0!==e?e:new Ia,void 0!==f?f:new Ia]}function G(a,b,c){return void 0===b&amp;&amp;void 0===c?this.set(a):this.setRGB(a,b,c)}function Vd(){function a(e,f){!1!==c&amp;&amp;(d(e,f),b.requestAnimationFrame(a))}var b=null,c=!1,d=null;return{start:function(){!0!==c&amp;&amp;null!==d&amp;&amp;(b.requestAnimationFrame(a),</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">stop</span><span class="pl-k">:</span><span class="pl-k">function</span>(){c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">setAnimationLoop</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){d<span class="pl-k">=</span>a},<span class="pl-en">setContext</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){b<span class="pl-k">=</span>a}}}function Gf(a){function b(b,c){var d=b.array,e=b.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW,h=a.createBuffer();a.bindBuffer(c,h);a.bufferData(c,d,e);b.onUploadCallback();c=a.FLOAT;d instanceof Float32Array?c=a.FLOAT:d instanceof Float64Array?console.warn(&quot;THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.&quot;):d instanceof Uint16Array?c=a.UNSIGNED_SHORT:d instanceof Int16Array?c=a.SHORT:d instanceof</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Uint32Array</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">UNSIGNED_INT</span><span class="pl-k">:</span>d <span class="pl-k">instanceof</span> <span class="pl-c1">Int32Array</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">INT</span><span class="pl-k">:</span>d <span class="pl-k">instanceof</span> <span class="pl-c1">Int8Array</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">BYTE</span><span class="pl-k">:</span>d <span class="pl-k">instanceof</span> <span class="pl-c1">Uint8Array</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">UNSIGNED_BYTE</span>);<span class="pl-k">return</span>{buffer<span class="pl-k">:</span>h,type<span class="pl-k">:</span>c,bytesPerElement<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">BYTES_PER_ELEMENT</span>,version<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">version</span>}}<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">WeakMap</span>;<span class="pl-k">return</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isInterleavedBufferAttribute</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>);<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">get</span>(a)},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-smi">isInterleavedBufferAttribute</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">data</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">get</span>(b);d<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">deleteBuffer</span>(<span class="pl-smi">d</span>.<span class="pl-smi">buffer</span>),<span class="pl-smi">c</span>.<span class="pl-c1">delete</span>(b))},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-smi">d</span>.<span class="pl-smi">isInterleavedBufferAttribute</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">data</span>);</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">get</span>(d);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f)<span class="pl-smi">c</span>.<span class="pl-c1">set</span>(d,<span class="pl-en">b</span>(d,e));<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-c1">version</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">version</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>d,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">array</span>,l<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">updateRange</span>;<span class="pl-smi">a</span>.<span class="pl-en">bindBuffer</span>(e,<span class="pl-smi">f</span>.<span class="pl-smi">buffer</span>);<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">dynamic</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">bufferData</span>(e,h,<span class="pl-smi">a</span>.<span class="pl-c1">STATIC_DRAW</span>)<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">l</span>.<span class="pl-smi">count</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">bufferSubData</span>(e,<span class="pl-c1">0</span>,h)<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">l</span>.<span class="pl-smi">count</span><span class="pl-k">?</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-en">bufferSubData</span>(e,<span class="pl-smi">l</span>.<span class="pl-smi">offset</span><span class="pl-k">*</span><span class="pl-smi">h</span>.<span class="pl-c1">BYTES_PER_ELEMENT</span>,<span class="pl-smi">h</span>.<span class="pl-en">subarray</span>(<span class="pl-smi">l</span>.<span class="pl-smi">offset</span>,<span class="pl-smi">l</span>.<span class="pl-smi">offset</span><span class="pl-k">+</span><span class="pl-smi">l</span>.<span class="pl-smi">count</span>)),<span class="pl-smi">l</span>.<span class="pl-smi">count</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-smi">f</span>.<span class="pl-c1">version</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">version</span>}}}}function mb(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||mb.DefaultOrder}function Wd(){this.mask=1}function H(){Object.defineProperty(this,&quot;id&quot;,{value:Hf++});this.uuid=J.generateUUID();this.name=&quot;&quot;;this.type=&quot;Object3D&quot;;this.parent=null;this.children=[];this.up=H.DefaultUp.clone();var a=new p,b=new mb,c=new ca,d=new p(1,1,1);b.onChange(function(){c.setFromEuler(b,!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">{position<span class="pl-k">:</span>{enumerable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,value<span class="pl-k">:</span>a},rotation<span class="pl-k">:</span>{enumerable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,value<span class="pl-k">:</span>b},quaternion<span class="pl-k">:</span>{enumerable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,value<span class="pl-k">:</span>c},scale<span class="pl-k">:</span>{enumerable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,value<span class="pl-k">:</span>d},modelViewMatrix<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">R</span>},normalMatrix<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">la</span>}});<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-smi">DefaultMatrixAutoUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-c1">layers</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Wd</span>;<span class="pl-c1">this</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">receiveShadow</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">castShadow</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">frustumCulled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">userData</span><span class="pl-k">=</span>{}}function Ra(){H.call(this);this.type=&quot;Camera&quot;;this.matrixWorldInverse=</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-c1">this</span>.<span class="pl-smi">projectionMatrix</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>}function Mb(a,b,c,d,e,f){Ra.call(this);this.type=&quot;OrthographicCamera&quot;;this.zoom=1;this.view=null;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()}function Ya(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d&amp;&amp;d.isVector3?d:new p;this.vertexNormals=Array.isArray(d)?d:[];this.color=e&amp;&amp;e.isColor?e:new G;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=void 0!==f?f:0}function P(){Object.defineProperty(this,</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,{value<span class="pl-k">:</span>If<span class="pl-k">+=</span><span class="pl-c1">2</span>});<span class="pl-c1">this</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">generateUUID</span>();<span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Geometry<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">colors</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">faces</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span><span class="pl-k">=</span>[[]];<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">skinWeights</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">skinIndices</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">lineDistances</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">groupsNeedUpdate</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">lineDistancesNeedUpdate</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">colorsNeedUpdate</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">normalsNeedUpdate</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">uvsNeedUpdate</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">verticesNeedUpdate</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">elementsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}function L(a,b,c){if(Array.isArray(a))throw new TypeError(&quot;THREE.BufferAttribute: array should be a Typed Array.&quot;);</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">array</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">/</span>b<span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalized</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">dynamic</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">updateRange</span><span class="pl-k">=</span>{offset<span class="pl-k">:</span><span class="pl-c1">0</span>,count<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>};<span class="pl-c1">this</span>.<span class="pl-c1">version</span><span class="pl-k">=</span><span class="pl-c1">0</span>}function yc(a,b,c){L.call(this,new Int8Array(a),b,c)}function zc(a,b,c){L.call(this,new Uint8Array(a),b,c)}function Ac(a,b,c){L.call(this,new Uint8ClampedArray(a),b,c)}function Bc(a,b,c){L.call(this,new Int16Array(a),b,c)}function nb(a,b,c){L.call(this,new Uint16Array(a),b,c)}function Cc(a,b,c){L.call(this,new Int32Array(a),b,c)}function ob(a,</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line">b,c){<span class="pl-c1">L</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,<span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>(a),b,c)}function z(a,b,c){L.call(this,new Float32Array(a),b,c)}function Dc(a,b,c){L.call(this,new Float64Array(a),b,c)}function Ge(){this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1}function He(a){if(0===a.length)return-Infinity;</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],c<span class="pl-k">=</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;<span class="pl-k">++</span>c)a[c]<span class="pl-k">&gt;</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>a[c]);<span class="pl-k">return</span> b}function D(){Object.defineProperty(this,&quot;id&quot;,{value:Jf+=2});this.uuid=J.generateUUID();this.name=&quot;&quot;;this.type=&quot;BufferGeometry&quot;;this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity};this.userData={}}function Nb(a,b,c,d,e,f){P.call(this);this.type=&quot;BoxGeometry&quot;;this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line">depthSegments<span class="pl-k">:</span>f};<span class="pl-c1">this</span>.<span class="pl-en">fromBufferGeometry</span>(<span class="pl-k">new</span> <span class="pl-en">pb</span>(a,b,c,d,e,f));<span class="pl-c1">this</span>.<span class="pl-en">mergeVertices</span>()}function pb(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,k,Q,M,Ob){var r=f/Q,u=g/M,O=f/2,y=g/2,x=k/2;g=Q+1;var w=M+1,C=f=0,A,B,z=new p;for(B=0;B&lt;w;B++){var H=B*u-y;for(A=0;A&lt;g;A++)z[a]=(A*r-O)*d,z[b]=H*e,z[c]=x,m.push(z.x,z.y,z.z),z[a]=0,z[b]=0,z[c]=0&lt;k?1:-1,v.push(z.x,z.y,z.z),n.push(A/Q),n.push(1-B/M),f+=1}for(B=0;B&lt;M;B++)for(A=0;A&lt;Q;A++)a=t+A+g*(B+1),b=t+(A+1)+g*(B+1),c=t+(A+1)+g*B,l.push(t+A+g*B,a,c),l.push(a,b,c),C+=</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">6</span>;<span class="pl-smi">h</span>.<span class="pl-en">addGroup</span>(q,<span class="pl-c1">C</span>,Ob);q<span class="pl-k">+=</span><span class="pl-c1">C</span>;t<span class="pl-k">+=</span>f}<span class="pl-c1">D</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>BoxBufferGeometry<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span><span class="pl-k">=</span>{width<span class="pl-k">:</span>a,height<span class="pl-k">:</span>b,depth<span class="pl-k">:</span>c,widthSegments<span class="pl-k">:</span>d,heightSegments<span class="pl-k">:</span>e,depthSegments<span class="pl-k">:</span>f};<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">this</span>;a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-c1">1</span>;b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">1</span>;c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">1</span>;d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(d)<span class="pl-k">||</span><span class="pl-c1">1</span>;e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(e)<span class="pl-k">||</span><span class="pl-c1">1</span>;f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(f)<span class="pl-k">||</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> l<span class="pl-k">=</span>[],m<span class="pl-k">=</span>[],v<span class="pl-k">=</span>[],n<span class="pl-k">=</span>[],t<span class="pl-k">=</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,c,b,a,f,e,<span class="pl-c1">0</span>);<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,c,b,<span class="pl-k">-</span>a,f,e,<span class="pl-c1">1</span>);<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,a,c,b,d,f,<span class="pl-c1">2</span>);<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,a,c,<span class="pl-k">-</span>b,d,f,<span class="pl-c1">3</span>);<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,a,b,c,d,e,<span class="pl-c1">4</span>);<span class="pl-en">g</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,a,b,<span class="pl-k">-</span>c,d,e,<span class="pl-c1">5</span>);<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(l);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">z</span>(m,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(v,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(n,<span class="pl-c1">2</span>))}function Fc(a,b,c,d){P.call(this);this.type=&quot;PlaneGeometry&quot;;this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new rb(a,b,c,d));this.mergeVertices()}function rb(a,b,c,d){D.call(this);this.type=&quot;PlaneBufferGeometry&quot;;this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};a=a||1;b=b||1;var e=a/2,f=b/2;c=Math.floor(c)||1;d=Math.floor(d)||1;var g=c+1,h=d+1,l=a/c,m=</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">/</span>d,v<span class="pl-k">=</span>[],n<span class="pl-k">=</span>[],t<span class="pl-k">=</span>[],q<span class="pl-k">=</span>[];<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>h;a<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>a<span class="pl-k">*</span>m<span class="pl-k">-</span>f;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>g;b<span class="pl-k">++</span>)<span class="pl-smi">n</span>.<span class="pl-c1">push</span>(b<span class="pl-k">*</span>l<span class="pl-k">-</span>e,<span class="pl-k">-</span>r,<span class="pl-c1">0</span>),<span class="pl-smi">t</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>),<span class="pl-smi">q</span>.<span class="pl-c1">push</span>(b<span class="pl-k">/</span>c),<span class="pl-smi">q</span>.<span class="pl-c1">push</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>a<span class="pl-k">/</span>d)}<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>d;a<span class="pl-k">++</span>)<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)e<span class="pl-k">=</span>b<span class="pl-k">+</span>g<span class="pl-k">*</span>(a<span class="pl-k">+</span><span class="pl-c1">1</span>),f<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span>g<span class="pl-k">*</span>(a<span class="pl-k">+</span><span class="pl-c1">1</span>),h<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span>g<span class="pl-k">*</span>a,<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(b<span class="pl-k">+</span>g<span class="pl-k">*</span>a,e,h),<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(e,f,h);<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(v);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(n,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(t,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(q,<span class="pl-c1">2</span>))}function I(){Object.defineProperty(this,&quot;id&quot;,{value:Kf++});this.uuid=J.generateUUID();this.name=&quot;&quot;;this.type=&quot;Material&quot;;this.lights=this.fog=</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blending</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">side</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">flatShading</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">vertexColors</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">opacity</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">transparent</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blendSrc</span><span class="pl-k">=</span><span class="pl-c1">204</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blendDst</span><span class="pl-k">=</span><span class="pl-c1">205</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blendEquation</span><span class="pl-k">=</span><span class="pl-c1">100</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blendEquationAlpha</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">blendDstAlpha</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">blendSrcAlpha</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">depthFunc</span><span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-c1">this</span>.<span class="pl-smi">depthWrite</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">depthTest</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">clippingPlanes</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">clipShadows</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">clipIntersection</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">shadowSide</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">colorWrite</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">precision</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">polygonOffset</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">polygonOffsetUnits</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">polygonOffsetFactor</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">dithering</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">alphaTest</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">premultipliedAlpha</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">overdraw</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">userData</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}function ua(a){I.call(this);this.type=&quot;MeshBasicMaterial&quot;;this.color=new G(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=0;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=&quot;round&quot;;this.lights=</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a)}function Fa(a){I.call(this);this.type=&quot;ShaderMaterial&quot;;this.defines={};this.uniforms={};this.vertexShader=&quot;void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}&quot;;this.fragmentShader=&quot;void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}&quot;;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1;this.extensions=</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line">{derivatives<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,fragDepth<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,drawBuffers<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,shaderTextureLOD<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-c1">this</span>.<span class="pl-smi">defaultAttributeValues</span><span class="pl-k">=</span>{color<span class="pl-k">:</span>[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>],uv<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],uv2<span class="pl-k">:</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]};<span class="pl-c1">this</span>.<span class="pl-smi">index0AttributeName</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">uniformsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">attributes</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a))}function sb(a,b){this.origin=void 0!==a?a:new p;this.direction=void 0!==b?b:new p}function Qb(a,b){this.start=void 0!==a?a:new p;this.end=void 0!==b?b:new p}</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ta</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">a</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-c1">this</span>.<span class="pl-smi">c</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>}function va(a,b){H.call(this);this.type=&quot;Mesh&quot;;this.geometry=void 0!==a?a:new D;this.material=void 0!==b?b:new ua({color:16777215*Math.random()});this.drawMode=0;this.updateMorphTargets()}function Lf(a,b,c,d){function e(a,c){b.buffers.color.setClear(a.r,a.g,a.b,c,d)}var f=new G(0),g=0,h,l,m;return{getClearColor:function(){return f},setClearColor:function(a,b){f.set(a);g=void 0!==b?b:1;e(f,g)},getClearAlpha:function(){return g},</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-en">setClearAlpha</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){g<span class="pl-k">=</span>a;<span class="pl-en">e</span>(f,g)},<span class="pl-en">render</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">t</span>,<span class="pl-smi">q</span>){d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">background</span>;<span class="pl-c1">null</span><span class="pl-k">===</span>d<span class="pl-k">?</span><span class="pl-en">e</span>(f,g)<span class="pl-k">:</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">isColor</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">e</span>(d,<span class="pl-c1">1</span>),q<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);(<span class="pl-smi">a</span>.<span class="pl-smi">autoClear</span><span class="pl-k">||</span>q)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">clear</span>(<span class="pl-smi">a</span>.<span class="pl-smi">autoClearColor</span>,<span class="pl-smi">a</span>.<span class="pl-smi">autoClearDepth</span>,<span class="pl-smi">a</span>.<span class="pl-smi">autoClearStencil</span>);d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">isCubeTexture</span><span class="pl-k">?</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>m<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">va</span>(<span class="pl-k">new</span> <span class="pl-en">pb</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>),<span class="pl-k">new</span> <span class="pl-en">Fa</span>({uniforms<span class="pl-k">:</span><span class="pl-smi">tb</span>.<span class="pl-smi">cube</span>.<span class="pl-smi">uniforms</span>,vertexShader<span class="pl-k">:</span><span class="pl-smi">tb</span>.<span class="pl-smi">cube</span>.<span class="pl-smi">vertexShader</span>,fragmentShader<span class="pl-k">:</span><span class="pl-smi">tb</span>.<span class="pl-smi">cube</span>.<span class="pl-smi">fragmentShader</span>,side<span class="pl-k">:</span><span class="pl-c1">1</span>,depthTest<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,depthWrite<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,fog<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>})),<span class="pl-smi">m</span>.<span class="pl-smi">geometry</span>.<span class="pl-c1">removeAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-smi">geometry</span>.<span class="pl-c1">removeAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-en">onBeforeRender</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">copyPosition</span>(<span class="pl-smi">c</span>.<span class="pl-smi">matrixWorld</span>)},<span class="pl-smi">c</span>.<span class="pl-en">update</span>(m)),<span class="pl-smi">m</span>.<span class="pl-smi">material</span>.<span class="pl-smi">uniforms</span>.<span class="pl-smi">tCube</span>.<span class="pl-c1">value</span><span class="pl-k">=</span>d,<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(m,<span class="pl-smi">m</span>.<span class="pl-smi">geometry</span>,<span class="pl-smi">m</span>.<span class="pl-smi">material</span>,<span class="pl-c1">0</span>,<span class="pl-c1">null</span>))<span class="pl-k">:</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Mb</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>),l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">va</span>(<span class="pl-k">new</span> <span class="pl-en">rb</span>(<span class="pl-c1">2</span>,<span class="pl-c1">2</span>),<span class="pl-k">new</span> <span class="pl-en">ua</span>({depthTest<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,depthWrite<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,fog<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>})),<span class="pl-smi">c</span>.<span class="pl-en">update</span>(l)),<span class="pl-smi">l</span>.<span class="pl-smi">material</span>.<span class="pl-smi">map</span><span class="pl-k">=</span>d,<span class="pl-smi">a</span>.<span class="pl-en">renderBufferDirect</span>(h,<span class="pl-c1">null</span>,<span class="pl-smi">l</span>.<span class="pl-smi">geometry</span>,<span class="pl-smi">l</span>.<span class="pl-smi">material</span>,l,<span class="pl-c1">null</span>))}}}function Mf(a,b,c){var d;this.setMode=function(a){d=a};this.render=function(b,f){a.drawArrays(d,b,f);c.update(f,d)};this.renderInstances=function(a,f,g){var e=</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ANGLE_instanced_arrays<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">===</span>e<span class="pl-k">?</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-en">drawArraysInstancedANGLE</span>(d,f,g,<span class="pl-smi">a</span>.<span class="pl-smi">maxInstancedCount</span>),<span class="pl-smi">c</span>.<span class="pl-en">update</span>(g,d,<span class="pl-smi">a</span>.<span class="pl-smi">maxInstancedCount</span>))}}function Nf(a,b,c){function d(b){if(&quot;highp&quot;===b){if(0&lt;a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision&amp;&amp;0&lt;a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision)return&quot;highp&quot;;b=&quot;mediump&quot;}return&quot;mediump&quot;===</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-en">getShaderPrecisionFormat</span>(<span class="pl-smi">a</span>.<span class="pl-c1">VERTEX_SHADER</span>,<span class="pl-smi">a</span>.<span class="pl-c1">MEDIUM_FLOAT</span>).<span class="pl-smi">precision</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-en">getShaderPrecisionFormat</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FRAGMENT_SHADER</span>,<span class="pl-smi">a</span>.<span class="pl-c1">MEDIUM_FLOAT</span>).<span class="pl-smi">precision</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>mediump<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lowp<span class="pl-pds">&quot;</span></span>}<span class="pl-k">var</span> e,f<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">precision</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">precision</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>highp<span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span><span class="pl-en">d</span>(f);g<span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer:<span class="pl-pds">&quot;</span></span>,f,<span class="pl-s"><span class="pl-pds">&quot;</span>not supported, using<span class="pl-pds">&quot;</span></span>,g,<span class="pl-s"><span class="pl-pds">&quot;</span>instead.<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span>g);c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">logarithmicDepthBuffer</span>;g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">MAX_TEXTURE_IMAGE_UNITS</span>);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">MAX_VERTEX_TEXTURE_IMAGE_UNITS</span>),l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">MAX_TEXTURE_SIZE</span>),m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">MAX_CUBE_MAP_TEXTURE_SIZE</span>),</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line">v<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">MAX_VERTEX_ATTRIBS</span>),n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">MAX_VERTEX_UNIFORM_VECTORS</span>),t<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">MAX_VARYING_VECTORS</span>),q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">MAX_FRAGMENT_UNIFORM_VECTORS</span>),r<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>h,k<span class="pl-k">=</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_texture_float<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>{<span class="pl-en">getMaxAnisotropy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>e)<span class="pl-k">return</span> e;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EXT_texture_filter_anisotropic<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> e<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!==</span>c<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">c</span>.<span class="pl-c1">MAX_TEXTURE_MAX_ANISOTROPY_EXT</span>)<span class="pl-k">:</span><span class="pl-c1">0</span>},getMaxPrecision<span class="pl-k">:</span>d,precision<span class="pl-k">:</span>f,logarithmicDepthBuffer<span class="pl-k">:</span>c,maxTextures<span class="pl-k">:</span>g,maxVertexTextures<span class="pl-k">:</span>h,maxTextureSize<span class="pl-k">:</span>l,maxCubemapSize<span class="pl-k">:</span>m,</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">maxAttributes<span class="pl-k">:</span>v,maxVertexUniforms<span class="pl-k">:</span>n,maxVaryings<span class="pl-k">:</span>t,maxFragmentUniforms<span class="pl-k">:</span>q,vertexTextures<span class="pl-k">:</span>r,floatFragmentTextures<span class="pl-k">:</span>k,floatVertexTextures<span class="pl-k">:</span>r<span class="pl-k">&amp;&amp;</span>k}}function Of(){function a(){m.value!==d&amp;&amp;(m.value=d,m.needsUpdate=0&lt;e);c.numPlanes=e;c.numIntersection=0}function b(a,b,d,e){var f=null!==a?a.length:0,g=null;if(0!==f){g=m.value;if(!0!==e||null===g){e=d+4*f;b=b.matrixWorldInverse;l.getNormalMatrix(b);if(null===g||g.length&lt;e)g=new Float32Array(e);for(e=0;e!==f;++e,d+=4)h.copy(a[e]).applyMatrix4(b,l),h.normal.toArray(g,</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line">d),g[d<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">constant</span>}<span class="pl-smi">m</span>.<span class="pl-c1">value</span><span class="pl-k">=</span>g;<span class="pl-smi">m</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-smi">c</span>.<span class="pl-smi">numPlanes</span><span class="pl-k">=</span>f;<span class="pl-k">return</span> g}<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-c1">null</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ia</span>,l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">la</span>,m<span class="pl-k">=</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>,needsUpdate<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-c1">this</span>.<span class="pl-smi">uniform</span><span class="pl-k">=</span>m;<span class="pl-c1">this</span>.<span class="pl-smi">numIntersection</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">numPlanes</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-en">init</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">||</span>c<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">!==</span>e<span class="pl-k">||</span>f;f<span class="pl-k">=</span>c;d<span class="pl-k">=</span><span class="pl-en">b</span>(a,g,<span class="pl-c1">0</span>);e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span> h};<span class="pl-c1">this</span>.<span class="pl-en">beginShadows</span><span class="pl-k">=</span><span class="pl-k">function</span>(){g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-en">b</span>(<span class="pl-c1">null</span>)};<span class="pl-c1">this</span>.<span class="pl-en">endShadows</span><span class="pl-k">=</span><span class="pl-k">function</span>(){g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-en">a</span>()};<span class="pl-c1">this</span>.<span class="pl-en">setState</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">h</span>,<span class="pl-smi">l</span>,<span class="pl-smi">q</span>,<span class="pl-smi">r</span>,<span class="pl-smi">k</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>f<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">||</span>g<span class="pl-k">&amp;&amp;!</span>l)g<span class="pl-k">?</span><span class="pl-en">b</span>(<span class="pl-c1">null</span>)<span class="pl-k">:</span><span class="pl-en">a</span>();<span class="pl-k">else</span>{l<span class="pl-k">=</span>g<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>e;<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">4</span><span class="pl-k">*</span>l,v<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">clippingState</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>;<span class="pl-smi">m</span>.<span class="pl-c1">value</span><span class="pl-k">=</span>v;v<span class="pl-k">=</span><span class="pl-en">b</span>(c,q,n,k);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">!==</span>n;<span class="pl-k">++</span>c)v[c]<span class="pl-k">=</span>d[c];<span class="pl-smi">r</span>.<span class="pl-smi">clippingState</span><span class="pl-k">=</span>v;<span class="pl-c1">this</span>.<span class="pl-smi">numIntersection</span><span class="pl-k">=</span>h<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">numPlanes</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">numPlanes</span><span class="pl-k">+=</span>l}}}function Pf(a){var b={};return{get:function(c){if(void 0!==b[c])return b[c];switch(c){case &quot;WEBGL_depth_texture&quot;:var d=a.getExtension(&quot;WEBGL_depth_texture&quot;)||a.getExtension(&quot;MOZ_WEBGL_depth_texture&quot;)||a.getExtension(&quot;WEBKIT_WEBGL_depth_texture&quot;);break;case &quot;EXT_texture_filter_anisotropic&quot;:d=a.getExtension(&quot;EXT_texture_filter_anisotropic&quot;)||a.getExtension(&quot;MOZ_EXT_texture_filter_anisotropic&quot;)||</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">getExtension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBKIT_EXT_texture_filter_anisotropic<span class="pl-pds">&quot;</span></span>);<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_s3tc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getExtension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_s3tc<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-en">getExtension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>MOZ_WEBGL_compressed_texture_s3tc<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-en">getExtension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBKIT_WEBGL_compressed_texture_s3tc<span class="pl-pds">&quot;</span></span>);<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_pvrtc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getExtension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_pvrtc<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-en">getExtension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBKIT_WEBGL_compressed_texture_pvrtc<span class="pl-pds">&quot;</span></span>);<span class="pl-k">break</span>;default<span class="pl-k">:</span>d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getExtension</span>(c)}<span class="pl-c1">null</span><span class="pl-k">===</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> extension not supported.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> b[c]<span class="pl-k">=</span>d}}}function Qf(a,b,c){function d(a){a=a.target;var g=e[a.id];null!==g.index&amp;&amp;b.remove(g.index);for(var l in g.attributes)b.remove(g.attributes[l]);a.removeEventListener(&quot;dispose&quot;,d);delete e[a.id];if(l=f[a.id])b.remove(l),delete f[a.id];if(l=f[g.id])b.remove(l),delete f[g.id];c.memory.geometries--}var e={},f={};return{get:function(a,b){var f=e[b.id];if(f)return f;b.addEventListener(&quot;dispose&quot;,d);b.isBufferGeometry?f=b:b.isGeometry&amp;&amp;(void 0===b._bufferGeometry&amp;&amp;(b._bufferGeometry=(new D).setFromObject(a)),</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_bufferGeometry</span>);e[<span class="pl-smi">b</span>.<span class="pl-c1">id</span>]<span class="pl-k">=</span>f;<span class="pl-smi">c</span>.<span class="pl-smi">memory</span>.<span class="pl-smi">geometries</span><span class="pl-k">++</span>;<span class="pl-k">return</span> f},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">index</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">attributes</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">update</span>(d,<span class="pl-smi">a</span>.<span class="pl-c1">ELEMENT_ARRAY_BUFFER</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> f <span class="pl-k">in</span> e)<span class="pl-smi">b</span>.<span class="pl-en">update</span>(e[f],<span class="pl-smi">a</span>.<span class="pl-c1">ARRAY_BUFFER</span>);c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">morphAttributes</span>;<span class="pl-k">for</span>(f <span class="pl-k">in</span> c){d<span class="pl-k">=</span>c[f];e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>g;e<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-en">update</span>(d[e],<span class="pl-smi">a</span>.<span class="pl-c1">ARRAY_BUFFER</span>)}},<span class="pl-en">getWireframeAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>f[<span class="pl-smi">c</span>.<span class="pl-c1">id</span>];<span class="pl-k">if</span>(d)<span class="pl-k">return</span> d;d<span class="pl-k">=</span>[];<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">index</span>,g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">attributes</span>;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>e){e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">array</span>;g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>v;g<span class="pl-k">+=</span><span class="pl-c1">3</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>e[g<span class="pl-k">+</span><span class="pl-c1">0</span>],t<span class="pl-k">=</span>e[g<span class="pl-k">+</span><span class="pl-c1">1</span>],q<span class="pl-k">=</span>e[g<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(n,t,t,q,</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line">q,n)}}<span class="pl-k">else</span> <span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">position</span>.<span class="pl-smi">array</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,v<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">1</span>;g<span class="pl-k">&lt;</span>v;g<span class="pl-k">+=</span><span class="pl-c1">3</span>)n<span class="pl-k">=</span>g<span class="pl-k">+</span><span class="pl-c1">0</span>,t<span class="pl-k">=</span>g<span class="pl-k">+</span><span class="pl-c1">1</span>,q<span class="pl-k">=</span>g<span class="pl-k">+</span><span class="pl-c1">2</span>,<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(n,t,t,q,q,n);d<span class="pl-k">=</span><span class="pl-k">new</span> (<span class="pl-c1">65535</span><span class="pl-k">&lt;</span><span class="pl-en">He</span>(d)<span class="pl-k">?</span>ob<span class="pl-k">:</span>nb)(d,<span class="pl-c1">1</span>);<span class="pl-smi">b</span>.<span class="pl-en">update</span>(d,<span class="pl-smi">a</span>.<span class="pl-c1">ELEMENT_ARRAY_BUFFER</span>);<span class="pl-k">return</span> f[<span class="pl-smi">c</span>.<span class="pl-c1">id</span>]<span class="pl-k">=</span>d}}}function Rf(a,b,c){var d,e,f;this.setMode=function(a){d=a};this.setIndex=function(a){e=a.type;f=a.bytesPerElement};this.render=function(b,h){a.drawElements(d,h,e,b*f);c.update(h,d)};this.renderInstances=function(a,h,l){var g=b.get(&quot;ANGLE_instanced_arrays&quot;);null===g?console.error(&quot;THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.&quot;):</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">g</span>.<span class="pl-en">drawElementsInstancedANGLE</span>(d,l,e,h<span class="pl-k">*</span>f,<span class="pl-smi">a</span>.<span class="pl-smi">maxInstancedCount</span>),<span class="pl-smi">c</span>.<span class="pl-en">update</span>(l,d,<span class="pl-smi">a</span>.<span class="pl-smi">maxInstancedCount</span>))}}function Sf(a){var b={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:b,programs:null,autoReset:!0,reset:function(){b.frame++;b.calls=0;b.triangles=0;b.points=0;b.lines=0},update:function(c,d,e){e=e||1;b.calls++;switch(d){case a.TRIANGLES:b.triangles+=c/3*e;break;case a.TRIANGLE_STRIP:case a.TRIANGLE_FAN:b.triangles+=e*(c-2);break;case a.LINES:b.lines+=c/2*</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">e;<span class="pl-k">break</span>;case <span class="pl-smi">a</span>.<span class="pl-c1">LINE_STRIP</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">lines</span><span class="pl-k">+=</span>e<span class="pl-k">*</span>(c<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">break</span>;case <span class="pl-smi">a</span>.<span class="pl-c1">LINE_LOOP</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">lines</span><span class="pl-k">+=</span>e<span class="pl-k">*</span>c;<span class="pl-k">break</span>;case <span class="pl-smi">a</span>.<span class="pl-c1">POINTS</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">points</span><span class="pl-k">+=</span>e<span class="pl-k">*</span>c;<span class="pl-k">break</span>;default<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLInfo: Unknown draw mode:<span class="pl-pds">&quot;</span></span>,d)}}}}function Tf(a,b){return Math.abs(b[1])-Math.abs(a[1])}function Uf(a){var b={},c=new Float32Array(8);return{update:function(d,e,f,g){var h=d.morphTargetInfluences,l=h.length;d=b[e.id];if(void 0===d){d=[];for(var m=0;m&lt;l;m++)d[m]=[m,0];b[e.id]=d}var v=f.morphTargets&amp;&amp;e.morphAttributes.position;f=f.morphNormals&amp;&amp;e.morphAttributes.normal;</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>l;m<span class="pl-k">++</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>d[m];<span class="pl-c1">0</span><span class="pl-k">!==</span>n[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">removeAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>morphTarget<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m),f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">removeAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>morphNormal<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m))}<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>l;m<span class="pl-k">++</span>)n<span class="pl-k">=</span>d[m],n[<span class="pl-c1">0</span>]<span class="pl-k">=</span>m,n[<span class="pl-c1">1</span>]<span class="pl-k">=</span>h[m];<span class="pl-smi">d</span>.<span class="pl-c1">sort</span>(Tf);<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">8</span><span class="pl-k">&gt;</span>m;m<span class="pl-k">++</span>){<span class="pl-k">if</span>(n<span class="pl-k">=</span>d[m])<span class="pl-k">if</span>(h<span class="pl-k">=</span>n[<span class="pl-c1">0</span>],l<span class="pl-k">=</span>n[<span class="pl-c1">1</span>]){v<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>morphTarget<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m,v[h]);f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>morphNormal<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m,f[h]);c[m]<span class="pl-k">=</span>l;<span class="pl-k">continue</span>}c[m]<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-smi">g</span>.<span class="pl-en">getUniforms</span>().<span class="pl-en">setValue</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>morphTargetInfluences<span class="pl-pds">&quot;</span></span>,c)}}}function Vf(a,b){var c={};return{update:function(d){var e=b.render.frame,f=d.geometry,g=a.get(d,f);c[g.id]!==e&amp;&amp;(f.isGeometry&amp;&amp;g.updateFromObject(d),</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">update</span>(g),c[<span class="pl-smi">g</span>.<span class="pl-c1">id</span>]<span class="pl-k">=</span>e);<span class="pl-k">return</span> g},<span class="pl-en">dispose</span><span class="pl-k">:</span><span class="pl-k">function</span>(){c<span class="pl-k">=</span>{}}}}function Za(a,b,c,d,e,f,g,h,l,m){a=void 0!==a?a:[];ea.call(this,a,void 0!==b?b:301,c,d,e,f,g,h,l,m);this.flipY=!1}function Rb(a,b,c){var d=a[0];if(0&gt;=d||0&lt;d)return a;var e=b*c,f=Ie[e];void 0===f&amp;&amp;(f=new Float32Array(e),Ie[e]=f);if(0!==b)for(d.toArray(f,0),d=1,e=0;d!==b;++d)e+=c,a[d].toArray(f,e);return f}function da(a,b){if(a.length!==b.length)return!1;for(var c=0,d=a.length;c&lt;d;c++)if(a[c]!==b[c])return!1;return!0}function qa(a,b){for(var c=</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)a[c]<span class="pl-k">=</span>b[c]}function Je(a,b){var c=Ke[b];void 0===c&amp;&amp;(c=new Int32Array(b),Ke[b]=c);for(var d=0;d!==b;++d)c[d]=a.allocTextureUnit();return c}function Wf(a,b){var c=this.cache;c[0]!==b&amp;&amp;(a.uniform1f(this.addr,b),c[0]=b)}function Xf(a,b){var c=this.cache;c[0]!==b&amp;&amp;(a.uniform1i(this.addr,b),c[0]=b)}function Yf(a,b){var c=this.cache;if(void 0!==b.x){if(c[0]!==b.x||c[1]!==b.y)a.uniform2f(this.addr,b.x,b.y),c[0]=b.x,c[1]=b.y}else da(c,b)||(a.uniform2fv(this.addr,b),qa(c,b))}function Zf(a,</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line">b){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">cache</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>){<span class="pl-k">if</span>(c[<span class="pl-c1">0</span>]<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">||</span>c[<span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">||</span>c[<span class="pl-c1">2</span>]<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>)<span class="pl-smi">a</span>.<span class="pl-en">uniform3f</span>(<span class="pl-c1">this</span>.<span class="pl-smi">addr</span>,<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-smi">b</span>.<span class="pl-c1">z</span>),c[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>,c[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>,c[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">r</span>){<span class="pl-k">if</span>(c[<span class="pl-c1">0</span>]<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">r</span><span class="pl-k">||</span>c[<span class="pl-c1">1</span>]<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">g</span><span class="pl-k">||</span>c[<span class="pl-c1">2</span>]<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">b</span>)<span class="pl-smi">a</span>.<span class="pl-en">uniform3f</span>(<span class="pl-c1">this</span>.<span class="pl-smi">addr</span>,<span class="pl-smi">b</span>.<span class="pl-smi">r</span>,<span class="pl-smi">b</span>.<span class="pl-smi">g</span>,<span class="pl-smi">b</span>.<span class="pl-smi">b</span>),c[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">r</span>,c[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">g</span>,c[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">b</span>}<span class="pl-k">else</span> <span class="pl-en">da</span>(c,b)<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-en">uniform3fv</span>(<span class="pl-c1">this</span>.<span class="pl-smi">addr</span>,b),<span class="pl-en">qa</span>(c,b))}function $f(a,b){var c=this.cache;if(void 0!==b.x){if(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z||c[3]!==b.w)a.uniform4f(this.addr,b.x,b.y,b.z,b.w),c[0]=b.x,c[1]=b.y,c[2]=b.z,c[3]=b.w}else da(c,b)||(a.uniform4fv(this.addr,</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line">b),<span class="pl-en">qa</span>(c,b))}function ag(a,b){var c=this.cache,d=b.elements;void 0===d?da(c,b)||(a.uniformMatrix2fv(this.addr,!1,b),qa(c,b)):da(c,d)||(Le.set(d),a.uniformMatrix2fv(this.addr,!1,Le),qa(c,d))}function bg(a,b){var c=this.cache,d=b.elements;void 0===d?da(c,b)||(a.uniformMatrix3fv(this.addr,!1,b),qa(c,b)):da(c,d)||(Me.set(d),a.uniformMatrix3fv(this.addr,!1,Me),qa(c,d))}function cg(a,b){var c=this.cache,d=b.elements;void 0===d?da(c,b)||(a.uniformMatrix4fv(this.addr,!1,b),qa(c,b)):da(c,d)||(Ne.set(d),a.uniformMatrix4fv(this.addr,</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>,Ne),<span class="pl-en">qa</span>(c,d))}function dg(a,b,c){var d=this.cache,e=c.allocTextureUnit();d[0]!==e&amp;&amp;(a.uniform1i(this.addr,e),d[0]=e);c.setTexture2D(b||Oe,e)}function eg(a,b,c){var d=this.cache,e=c.allocTextureUnit();d[0]!==e&amp;&amp;(a.uniform1i(this.addr,e),d[0]=e);c.setTextureCube(b||Pe,e)}function Qe(a,b){var c=this.cache;da(c,b)||(a.uniform2iv(this.addr,b),qa(c,b))}function Re(a,b){var c=this.cache;da(c,b)||(a.uniform3iv(this.addr,b),qa(c,b))}function Se(a,b){var c=this.cache;da(c,b)||(a.uniform4iv(this.addr,b),qa(c,</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line">b))}function fg(a){switch(a){case 5126:return Wf;case 35664:return Yf;case 35665:return Zf;case 35666:return $f;case 35674:return ag;case 35675:return bg;case 35676:return cg;case 35678:case 36198:return dg;case 35680:return eg;case 5124:case 35670:return Xf;case 35667:case 35671:return Qe;case 35668:case 35672:return Re;case 35669:case 35673:return Se}}function gg(a,b){var c=this.cache;da(c,b)||(a.uniform1fv(this.addr,b),qa(c,b))}function hg(a,b){var c=this.cache;da(c,b)||(a.uniform1iv(this.addr,</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line">b),<span class="pl-en">qa</span>(c,b))}function ig(a,b){var c=this.cache;b=Rb(b,this.size,2);da(c,b)||(a.uniform2fv(this.addr,b),this.updateCache(b))}function jg(a,b){var c=this.cache;b=Rb(b,this.size,3);da(c,b)||(a.uniform3fv(this.addr,b),this.updateCache(b))}function kg(a,b){var c=this.cache;b=Rb(b,this.size,4);da(c,b)||(a.uniform4fv(this.addr,b),this.updateCache(b))}function lg(a,b){var c=this.cache;b=Rb(b,this.size,4);da(c,b)||(a.uniformMatrix2fv(this.addr,!1,b),this.updateCache(b))}function mg(a,b){var c=this.cache;b=</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-en">Rb</span>(b,<span class="pl-c1">this</span>.<span class="pl-c1">size</span>,<span class="pl-c1">9</span>);<span class="pl-en">da</span>(c,b)<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-en">uniformMatrix3fv</span>(<span class="pl-c1">this</span>.<span class="pl-smi">addr</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,b),<span class="pl-c1">this</span>.<span class="pl-en">updateCache</span>(b))}function ng(a,b){var c=this.cache;b=Rb(b,this.size,16);da(c,b)||(a.uniformMatrix4fv(this.addr,!1,b),this.updateCache(b))}function og(a,b,c){var d=this.cache,e=b.length,f=Je(c,e);!1===da(d,f)&amp;&amp;(a.uniform1iv(this.addr,f),qa(d,f));for(a=0;a!==e;++a)c.setTexture2D(b[a]||Oe,f[a])}function pg(a,b,c){var d=this.cache,e=b.length,f=Je(c,e);!1===da(d,f)&amp;&amp;(a.uniform1iv(this.addr,f),qa(d,f));for(a=0;a!==e;++a)c.setTextureCube(b[a]||</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line">Pe,f[a])}function qg(a){switch(a){case 5126:return gg;case 35664:return ig;case 35665:return jg;case 35666:return kg;case 35674:return lg;case 35675:return mg;case 35676:return ng;case 35678:return og;case 35680:return pg;case 5124:case 35670:return hg;case 35667:case 35671:return Qe;case 35668:case 35672:return Re;case 35669:case 35673:return Se}}function rg(a,b,c){this.id=a;this.addr=c;this.cache=[];this.setValue=fg(b.type)}function Te(a,b,c){this.id=a;this.addr=c;this.cache=[];this.size=b.size;</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">setValue</span><span class="pl-k">=</span><span class="pl-en">qg</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span>)}function Ue(a){this.id=a;this.seq=[];this.map={}}function eb(a,b,c){this.seq=[];this.map={};this.renderer=c;c=a.getProgramParameter(b,a.ACTIVE_UNIFORMS);for(var d=0;d&lt;c;++d){var e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name),g=this,h=e.name,l=h.length;for(Xd.lastIndex=0;;){var m=Xd.exec(h),v=Xd.lastIndex,n=m[1],t=m[3];&quot;]&quot;===m[2]&amp;&amp;(n|=0);if(void 0===t||&quot;[&quot;===t&amp;&amp;v+2===l){h=g;e=void 0===t?new rg(n,e,f):new Te(n,e,f);h.seq.push(e);h.map[e.id]=e;break}else t=g.map[n],</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>t<span class="pl-k">&amp;&amp;</span>(t<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ue</span>(n),n<span class="pl-k">=</span>g,g<span class="pl-k">=</span>t,<span class="pl-smi">n</span>.<span class="pl-smi">seq</span>.<span class="pl-c1">push</span>(g),<span class="pl-smi">n</span>.<span class="pl-smi">map</span>[<span class="pl-smi">g</span>.<span class="pl-c1">id</span>]<span class="pl-k">=</span>g),g<span class="pl-k">=</span>t}}}function sg(a){a=a.split(&quot;\n&quot;);for(var b=0;b&lt;a.length;b++)a[b]=b+1+&quot;: &quot;+a[b];return a.join(&quot;\n&quot;)}function Ve(a,b,c){var d=a.createShader(b);a.shaderSource(d,c);a.compileShader(d);!1===a.getShaderParameter(d,a.COMPILE_STATUS)&amp;&amp;console.error(&quot;THREE.WebGLShader: Shader couldn&#39;t compile.&quot;);&quot;&quot;!==a.getShaderInfoLog(d)&amp;&amp;console.warn(&quot;THREE.WebGLShader: gl.getShaderInfoLog()&quot;,b===a.VERTEX_SHADER?&quot;vertex&quot;:&quot;fragment&quot;,a.getShaderInfoLog(d),</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-en">sg</span>(c));<span class="pl-k">return</span> d}function We(a){switch(a){case 3E3:return[&quot;Linear&quot;,&quot;( value )&quot;];case 3001:return[&quot;sRGB&quot;,&quot;( value )&quot;];case 3002:return[&quot;RGBE&quot;,&quot;( value )&quot;];case 3004:return[&quot;RGBM&quot;,&quot;( value, 7.0 )&quot;];case 3005:return[&quot;RGBM&quot;,&quot;( value, 16.0 )&quot;];case 3006:return[&quot;RGBD&quot;,&quot;( value, 256.0 )&quot;];case 3007:return[&quot;Gamma&quot;,&quot;( value, float( GAMMA_FACTOR ) )&quot;];default:throw Error(&quot;unsupported encoding: &quot;+a);}}function Yd(a,b){b=We(b);return&quot;vec4 &quot;+a+&quot;( vec4 value ) { return &quot;+b[0]+&quot;ToLinear&quot;+b[1]+&quot;; }&quot;}function tg(a,</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">b){b<span class="pl-k">=</span><span class="pl-en">We</span>(b);<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>vec4 <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>( vec4 value ) { return LinearTo<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b[<span class="pl-c1">0</span>]<span class="pl-k">+</span>b[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>; }<span class="pl-pds">&quot;</span></span>}function ug(a,b){switch(b){case 1:b=&quot;Linear&quot;;break;case 2:b=&quot;Reinhard&quot;;break;case 3:b=&quot;Uncharted2&quot;;break;case 4:b=&quot;OptimizedCineon&quot;;break;default:throw Error(&quot;unsupported toneMapping: &quot;+b);}return&quot;vec3 &quot;+a+&quot;( vec3 color ) { return &quot;+b+&quot;ToneMapping( color ); }&quot;}function vg(a,b,c){a=a||{};return[a.derivatives||b.envMapCubeUV||b.bumpMap||b.normalMap&amp;&amp;!b.objectSpaceNormalMap||b.flatShading?&quot;#extension GL_OES_standard_derivatives : enable&quot;:</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,(<span class="pl-smi">a</span>.<span class="pl-smi">fragDepth</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">logarithmicDepthBuffer</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EXT_frag_depth<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#extension GL_EXT_frag_depth : enable<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">drawBuffers</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_draw_buffers<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#extension GL_EXT_draw_buffers : require<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,(<span class="pl-smi">a</span>.<span class="pl-smi">shaderTextureLOD</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">envMap</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EXT_shader_texture_lod<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#extension GL_EXT_shader_texture_lod : enable<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>].<span class="pl-en">filter</span>(Gc).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>)}function wg(a){var b=[],c;for(c in a){var d=a[c];!1!==d&amp;&amp;b.push(&quot;#define &quot;+c+&quot; &quot;+d)}return b.join(&quot;\n&quot;)}function Gc(a){return&quot;&quot;!==a}function Xe(a,b){return a.replace(/NUM_DIR_LIGHTS/g,</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">numDirLights</span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>NUM_SPOT_LIGHTS<span class="pl-pds">/</span>g</span>,<span class="pl-smi">b</span>.<span class="pl-smi">numSpotLights</span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>NUM_RECT_AREA_LIGHTS<span class="pl-pds">/</span>g</span>,<span class="pl-smi">b</span>.<span class="pl-smi">numRectAreaLights</span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>NUM_POINT_LIGHTS<span class="pl-pds">/</span>g</span>,<span class="pl-smi">b</span>.<span class="pl-smi">numPointLights</span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>NUM_HEMI_LIGHTS<span class="pl-pds">/</span>g</span>,<span class="pl-smi">b</span>.<span class="pl-smi">numHemiLights</span>)}function Ye(a,b){return a.replace(/NUM_CLIPPING_PLANES/g,b.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,b.numClippingPlanes-b.numClipIntersection)}function Zd(a){return a.replace(/^[ \t]*#include +&lt;([\w\d.]+)&gt;/gm,function(a,c){a=S[c];if(void 0===a)throw Error(&quot;Can not resolve #include &lt;&quot;+c+</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-en">Zd</span>(a)})}function Ze(a){return a.replace(/#pragma unroll_loop[\s]+?for \( int i = (\d+); i &lt; (\d+); i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(a,c,d,e){a=&quot;&quot;;for(c=parseInt(c);c&lt;parseInt(d);c++)a+=e.replace(/\[ i \]/g,&quot;[ &quot;+c+&quot; ]&quot;);return a})}function xg(a,b,c,d,e,f){var g=a.context,h=d.defines,l=e.vertexShader,m=e.fragmentShader,v=&quot;SHADOWMAP_TYPE_BASIC&quot;;1===f.shadowMapType?v=&quot;SHADOWMAP_TYPE_PCF&quot;:2===f.shadowMapType&amp;&amp;(v=&quot;SHADOWMAP_TYPE_PCF_SOFT&quot;);var n=&quot;ENVMAP_TYPE_CUBE&quot;,t=&quot;ENVMAP_MODE_REFLECTION&quot;,</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">q<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ENVMAP_BLENDING_MULTIPLY<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-smi">envMap</span>){<span class="pl-k">switch</span>(<span class="pl-smi">d</span>.<span class="pl-smi">envMap</span>.<span class="pl-smi">mapping</span>){<span class="pl-k">case</span> <span class="pl-c1">301</span>:<span class="pl-k">case</span> <span class="pl-c1">302</span>:n<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ENVMAP_TYPE_CUBE<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">306</span>:<span class="pl-k">case</span> <span class="pl-c1">307</span>:n<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ENVMAP_TYPE_CUBE_UV<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">303</span>:<span class="pl-k">case</span> <span class="pl-c1">304</span>:n<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ENVMAP_TYPE_EQUIREC<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">305</span>:n<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ENVMAP_TYPE_SPHERE<span class="pl-pds">&quot;</span></span>}<span class="pl-k">switch</span>(<span class="pl-smi">d</span>.<span class="pl-smi">envMap</span>.<span class="pl-smi">mapping</span>){<span class="pl-k">case</span> <span class="pl-c1">302</span>:<span class="pl-k">case</span> <span class="pl-c1">304</span>:t<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ENVMAP_MODE_REFRACTION<span class="pl-pds">&quot;</span></span>}<span class="pl-k">switch</span>(<span class="pl-smi">d</span>.<span class="pl-smi">combine</span>){<span class="pl-k">case</span> <span class="pl-c1">0</span>:q<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ENVMAP_BLENDING_MULTIPLY<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:q<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ENVMAP_BLENDING_MIX<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:q<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ENVMAP_BLENDING_ADD<span class="pl-pds">&quot;</span></span>}}<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">gammaFactor</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">gammaFactor</span><span class="pl-k">:</span><span class="pl-c1">1</span>,k<span class="pl-k">=</span><span class="pl-en">vg</span>(<span class="pl-smi">d</span>.<span class="pl-smi">extensions</span>,f,b),p<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-en">wg</span>(h),w<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">createProgram</span>();<span class="pl-smi">d</span>.<span class="pl-smi">isRawShaderMaterial</span><span class="pl-k">?</span>(h<span class="pl-k">=</span>[p].<span class="pl-en">filter</span>(Gc).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span>[k,p].<span class="pl-en">filter</span>(Gc).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span>(h<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>precision <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">precision</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> float;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>precision <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">precision</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> int;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#define SHADER_NAME <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">name</span>,p,<span class="pl-smi">f</span>.<span class="pl-smi">supportsVertexTextures</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define VERTEX_TEXTURES<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#define GAMMA_FACTOR <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>r,<span class="pl-s"><span class="pl-pds">&quot;</span>#define MAX_BONES <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">maxBones</span>,<span class="pl-smi">f</span>.<span class="pl-smi">useFog</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">fog</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_FOG<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">useFog</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">fogExp</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define FOG_EXP2<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">map</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_MAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">envMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_ENVMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">envMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>t<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">lightMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_LIGHTMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">aoMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_AOMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_EMISSIVEMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_BUMPMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">normalMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_NORMALMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">normalMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">objectSpaceNormalMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define OBJECTSPACE_NORMALMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">supportsVertexTextures</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_DISPLACEMENTMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">specularMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_SPECULARMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">roughnessMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_ROUGHNESSMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">metalnessMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_METALNESSMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_ALPHAMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">vertexColors</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_COLOR<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">flatShading</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define FLAT_SHADED<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">skinning</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_SKINNING<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">useVertexTexture</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define BONE_TEXTURE<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_MORPHTARGETS<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">f</span>.<span class="pl-smi">flatShading</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_MORPHNORMALS<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">doubleSided</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define DOUBLE_SIDED<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">flipSided</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define FLIP_SIDED<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">shadowMapEnabled</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_SHADOWMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">shadowMapEnabled</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>v<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">sizeAttenuation</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_SIZEATTENUATION<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-smi">logarithmicDepthBuffer</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_LOGDEPTHBUF<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">logarithmicDepthBuffer</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EXT_frag_depth<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_LOGDEPTHBUF_EXT<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform mat4 modelMatrix;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform mat4 modelViewMatrix;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform mat4 projectionMatrix;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform mat4 viewMatrix;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform mat3 normalMatrix;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform vec3 cameraPosition;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec3 position;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec3 normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 uv;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_COLOR<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span>attribute vec3 color;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#endif<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_MORPHTARGETS<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span>attribute vec3 morphTarget0;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span>attribute vec3 morphTarget1;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span>attribute vec3 morphTarget2;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span>attribute vec3 morphTarget3;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span>#ifdef USE_MORPHNORMALS<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t\t</span>attribute vec3 morphNormal0;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t\t</span>attribute vec3 morphNormal1;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t\t</span>attribute vec3 morphNormal2;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t\t</span>attribute vec3 morphNormal3;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span>#else<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t\t</span>attribute vec3 morphTarget4;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t\t</span>attribute vec3 morphTarget5;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t\t</span>attribute vec3 morphTarget6;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t\t</span>attribute vec3 morphTarget7;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span>#endif<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#endif<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_SKINNING<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span>attribute vec4 skinIndex;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span>attribute vec4 skinWeight;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>#endif<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>].<span class="pl-en">filter</span>(Gc).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span>[k,<span class="pl-s"><span class="pl-pds">&quot;</span>precision <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">precision</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> float;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>precision <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">precision</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> int;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#define SHADER_NAME <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">name</span>,p,<span class="pl-smi">f</span>.<span class="pl-smi">alphaTest</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define ALPHATEST <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-smi">alphaTest</span><span class="pl-k">+</span>(<span class="pl-smi">f</span>.<span class="pl-smi">alphaTest</span><span class="pl-k">%</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>.0<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#define GAMMA_FACTOR <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>r,<span class="pl-smi">f</span>.<span class="pl-smi">useFog</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">fog</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_FOG<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">useFog</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">fogExp</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define FOG_EXP2<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">map</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_MAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">envMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_ENVMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">envMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>n<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">envMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>t<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">envMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>q<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">lightMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_LIGHTMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">aoMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_AOMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_EMISSIVEMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_BUMPMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">normalMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_NORMALMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">normalMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">objectSpaceNormalMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define OBJECTSPACE_NORMALMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">specularMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_SPECULARMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">roughnessMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_ROUGHNESSMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">metalnessMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_METALNESSMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_ALPHAMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">vertexColors</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_COLOR<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">gradientMap</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_GRADIENTMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">flatShading</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define FLAT_SHADED<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">doubleSided</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define DOUBLE_SIDED<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">flipSided</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define FLIP_SIDED<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">shadowMapEnabled</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_SHADOWMAP<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">shadowMapEnabled</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>v<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">premultipliedAlpha</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define PREMULTIPLIED_ALPHA<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">physicallyCorrectLights</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define PHYSICALLY_CORRECT_LIGHTS<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">logarithmicDepthBuffer</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_LOGDEPTHBUF<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">logarithmicDepthBuffer</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EXT_frag_depth<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define USE_LOGDEPTHBUF_EXT<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">envMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EXT_shader_texture_lod<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define TEXTURE_LOD_EXT<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform mat4 viewMatrix;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform vec3 cameraPosition;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">toneMapping</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define TONE_MAPPING<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">toneMapping</span><span class="pl-k">?</span><span class="pl-c1">S</span>.<span class="pl-smi">tonemapping_pars_fragment</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">toneMapping</span><span class="pl-k">?</span><span class="pl-en">ug</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>toneMapping<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">toneMapping</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">dithering</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define DITHERING<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">outputEncoding</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">mapEncoding</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">envMapEncoding</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">emissiveMapEncoding</span><span class="pl-k">?</span><span class="pl-c1">S</span>.<span class="pl-smi">encodings_pars_fragment</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">mapEncoding</span><span class="pl-k">?</span><span class="pl-en">Yd</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mapTexelToLinear<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">mapEncoding</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">envMapEncoding</span><span class="pl-k">?</span><span class="pl-en">Yd</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>envMapTexelToLinear<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">envMapEncoding</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">emissiveMapEncoding</span><span class="pl-k">?</span><span class="pl-en">Yd</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>emissiveMapTexelToLinear<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">emissiveMapEncoding</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">outputEncoding</span><span class="pl-k">?</span><span class="pl-en">tg</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>linearToOutputTexel<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-smi">outputEncoding</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-smi">depthPacking</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define DEPTH_PACKING <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-smi">depthPacking</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>].<span class="pl-en">filter</span>(Gc).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>));l<span class="pl-k">=</span><span class="pl-en">Zd</span>(l);l<span class="pl-k">=</span><span class="pl-en">Xe</span>(l,f);l<span class="pl-k">=</span><span class="pl-en">Ye</span>(l,f);m<span class="pl-k">=</span><span class="pl-en">Zd</span>(m);m<span class="pl-k">=</span><span class="pl-en">Xe</span>(m,f);m<span class="pl-k">=</span><span class="pl-en">Ye</span>(m,f);l<span class="pl-k">=</span><span class="pl-en">Ze</span>(l);m<span class="pl-k">=</span><span class="pl-en">Ze</span>(m);m<span class="pl-k">=</span>b<span class="pl-k">+</span>m;l<span class="pl-k">=</span><span class="pl-en">Ve</span>(g,<span class="pl-smi">g</span>.<span class="pl-c1">VERTEX_SHADER</span>,h<span class="pl-k">+</span>l);m<span class="pl-k">=</span><span class="pl-en">Ve</span>(g,<span class="pl-smi">g</span>.<span class="pl-c1">FRAGMENT_SHADER</span>,m);<span class="pl-smi">g</span>.<span class="pl-en">attachShader</span>(w,l);<span class="pl-smi">g</span>.<span class="pl-en">attachShader</span>(w,m);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-smi">index0AttributeName</span><span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-en">bindAttribLocation</span>(w,<span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-smi">index0AttributeName</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">f</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">bindAttribLocation</span>(w,<span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">g</span>.<span class="pl-en">linkProgram</span>(w);f<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getProgramInfoLog</span>(w).<span class="pl-en">trim</span>();v<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getShaderInfoLog</span>(l).<span class="pl-en">trim</span>();n<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-en">getShaderInfoLog</span>(m).<span class="pl-en">trim</span>();q<span class="pl-k">=</span>t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-en">getProgramParameter</span>(w,<span class="pl-smi">g</span>.<span class="pl-c1">LINK_STATUS</span>))t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLProgram: shader error: <span class="pl-pds">&quot;</span></span>,<span class="pl-smi">g</span>.<span class="pl-en">getError</span>(),<span class="pl-s"><span class="pl-pds">&quot;</span>gl.VALIDATE_STATUS<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">g</span>.<span class="pl-en">getProgramParameter</span>(w,<span class="pl-smi">g</span>.<span class="pl-c1">VALIDATE_STATUS</span>),<span class="pl-s"><span class="pl-pds">&quot;</span>gl.getProgramInfoLog<span class="pl-pds">&quot;</span></span>,f,v,n);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>f)<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLProgram: gl.getProgramInfoLog()<span class="pl-pds">&quot;</span></span>,f);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>v<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>n)q<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;q<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">diagnostics</span><span class="pl-k">=</span>{runnable<span class="pl-k">:</span>t,material<span class="pl-k">:</span>d,programLog<span class="pl-k">:</span>f,vertexShader<span class="pl-k">:</span>{log<span class="pl-k">:</span>v,prefix<span class="pl-k">:</span>h},fragmentShader<span class="pl-k">:</span>{log<span class="pl-k">:</span>n,prefix<span class="pl-k">:</span>b}});<span class="pl-smi">g</span>.<span class="pl-en">deleteShader</span>(l);<span class="pl-smi">g</span>.<span class="pl-en">deleteShader</span>(m);</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> x;<span class="pl-c1">this</span>.<span class="pl-en">getUniforms</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;</span>(x<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">eb</span>(g,w,a));<span class="pl-k">return</span> x};<span class="pl-k">var</span> <span class="pl-c1">A</span>;<span class="pl-c1">this</span>.<span class="pl-en">getAttributes</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">A</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>{},b<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getProgramParameter</span>(w,<span class="pl-smi">g</span>.<span class="pl-c1">ACTIVE_ATTRIBUTES</span>),c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getActiveAttrib</span>(w,c).<span class="pl-c1">name</span>;a[d]<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getAttribLocation</span>(w,d)}<span class="pl-c1">A</span><span class="pl-k">=</span>a}<span class="pl-k">return</span> <span class="pl-c1">A</span>};<span class="pl-c1">this</span>.<span class="pl-en">destroy</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">g</span>.<span class="pl-en">deleteProgram</span>(w);<span class="pl-c1">this</span>.<span class="pl-smi">program</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>};<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-c1">this</span>,{uniforms<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLProgram: .uniforms is now .getUniforms().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getUniforms</span>()}},attributes<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLProgram: .attributes is now .getAttributes().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getAttributes</span>()}}});<span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">name</span>;<span class="pl-c1">this</span>.<span class="pl-c1">id</span><span class="pl-k">=</span>yg<span class="pl-k">++</span>;<span class="pl-c1">this</span>.<span class="pl-c1">code</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">usedTimes</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">program</span><span class="pl-k">=</span>w;<span class="pl-c1">this</span>.<span class="pl-smi">vertexShader</span><span class="pl-k">=</span>l;<span class="pl-c1">this</span>.<span class="pl-smi">fragmentShader</span><span class="pl-k">=</span>m;<span class="pl-k">return</span> <span class="pl-c1">this</span>}function zg(a,b,c){function d(a,b){if(a)a.isTexture?c=a.encoding:a.isWebGLRenderTarget&amp;&amp;(console.warn(&quot;THREE.WebGLPrograms.getTextureEncodingFromMap: don&#39;t use render targets as textures. Use their .texture property instead.&quot;),c=a.texture.encoding);else var c=3E3;3E3===c&amp;&amp;b&amp;&amp;(c=3007);return c}var e=[],f={MeshDepthMaterial:&quot;depth&quot;,MeshDistanceMaterial:&quot;distanceRGBA&quot;,</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line">MeshNormalMaterial<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,MeshBasicMaterial<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>basic<span class="pl-pds">&quot;</span></span>,MeshLambertMaterial<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lambert<span class="pl-pds">&quot;</span></span>,MeshPhongMaterial<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>phong<span class="pl-pds">&quot;</span></span>,MeshToonMaterial<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>phong<span class="pl-pds">&quot;</span></span>,MeshStandardMaterial<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>physical<span class="pl-pds">&quot;</span></span>,MeshPhysicalMaterial<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>physical<span class="pl-pds">&quot;</span></span>,LineBasicMaterial<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>basic<span class="pl-pds">&quot;</span></span>,LineDashedMaterial<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dashed<span class="pl-pds">&quot;</span></span>,PointsMaterial<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>points<span class="pl-pds">&quot;</span></span>,ShadowMaterial<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>shadow<span class="pl-pds">&quot;</span></span>},g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>precision supportsVertexTextures map mapEncoding envMap envMapMode envMapEncoding lightMap aoMap emissiveMap emissiveMapEncoding bumpMap normalMap objectSpaceNormalMap displacementMap specularMap roughnessMap metalnessMap gradientMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights numRectAreaLights shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes numClipIntersection depthPacking dithering<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">getParameters</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">e</span>,<span class="pl-smi">g</span>,<span class="pl-smi">v</span>,<span class="pl-smi">n</span>,<span class="pl-smi">t</span>,<span class="pl-smi">q</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>f[<span class="pl-smi">b</span>.<span class="pl-c1">type</span>];<span class="pl-k">if</span>(<span class="pl-smi">q</span>.<span class="pl-smi">isSkinnedMesh</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-smi">skeleton</span>.<span class="pl-smi">bones</span>;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">floatVertexTextures</span>)l<span class="pl-k">=</span><span class="pl-c1">1024</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>((<span class="pl-smi">c</span>.<span class="pl-smi">maxVertexUniforms</span><span class="pl-k">-</span><span class="pl-c1">20</span>)<span class="pl-k">/</span><span class="pl-c1">4</span>),<span class="pl-smi">l</span>.<span class="pl-c1">length</span>);m<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: Skeleton has <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> bones. This GPU supports <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">=</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>l<span class="pl-k">=</span>m}}<span class="pl-k">else</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">precision</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">precision</span><span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getMaxPrecision</span>(<span class="pl-smi">b</span>.<span class="pl-smi">precision</span>),m<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">precision</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLProgram.getParameters:<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-smi">precision</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>not supported, using<span class="pl-pds">&quot;</span></span>,m,<span class="pl-s"><span class="pl-pds">&quot;</span>instead.<span class="pl-pds">&quot;</span></span>));</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getRenderTarget</span>();<span class="pl-k">return</span>{shaderID<span class="pl-k">:</span>h,precision<span class="pl-k">:</span>m,supportsVertexTextures<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">vertexTextures</span>,outputEncoding<span class="pl-k">:</span><span class="pl-en">d</span>(k<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-smi">texture</span><span class="pl-k">:</span><span class="pl-c1">null</span>,<span class="pl-smi">a</span>.<span class="pl-smi">gammaOutput</span>),map<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">map</span>,mapEncoding<span class="pl-k">:</span><span class="pl-en">d</span>(<span class="pl-smi">b</span>.<span class="pl-smi">map</span>,<span class="pl-smi">a</span>.<span class="pl-smi">gammaInput</span>),envMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">envMap</span>,envMapMode<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">envMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">envMap</span>.<span class="pl-smi">mapping</span>,envMapEncoding<span class="pl-k">:</span><span class="pl-en">d</span>(<span class="pl-smi">b</span>.<span class="pl-smi">envMap</span>,<span class="pl-smi">a</span>.<span class="pl-smi">gammaInput</span>),envMapCubeUV<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">envMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">306</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">envMap</span>.<span class="pl-smi">mapping</span><span class="pl-k">||</span><span class="pl-c1">307</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">envMap</span>.<span class="pl-smi">mapping</span>),lightMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">lightMap</span>,aoMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">aoMap</span>,emissiveMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">emissiveMap</span>,emissiveMapEncoding<span class="pl-k">:</span><span class="pl-en">d</span>(<span class="pl-smi">b</span>.<span class="pl-smi">emissiveMap</span>,<span class="pl-smi">a</span>.<span class="pl-smi">gammaInput</span>),bumpMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">bumpMap</span>,normalMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">normalMap</span>,</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line">objectSpaceNormalMap<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">normalMapType</span>,displacementMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">displacementMap</span>,roughnessMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">roughnessMap</span>,metalnessMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">metalnessMap</span>,specularMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">specularMap</span>,alphaMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">alphaMap</span>,gradientMap<span class="pl-k">:</span><span class="pl-k">!!</span><span class="pl-smi">b</span>.<span class="pl-smi">gradientMap</span>,combine<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">combine</span>,vertexColors<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">vertexColors</span>,fog<span class="pl-k">:</span><span class="pl-k">!!</span>v,useFog<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">fog</span>,fogExp<span class="pl-k">:</span>v<span class="pl-k">&amp;&amp;</span><span class="pl-smi">v</span>.<span class="pl-smi">isFogExp2</span>,flatShading<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">flatShading</span>,sizeAttenuation<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">sizeAttenuation</span>,logarithmicDepthBuffer<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">logarithmicDepthBuffer</span>,skinning<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">skinning</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>l,maxBones<span class="pl-k">:</span>l,useVertexTexture<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">floatVertexTextures</span>,morphTargets<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">morphTargets</span>,</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line">morphNormals<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">morphNormals</span>,maxMorphTargets<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">maxMorphTargets</span>,maxMorphNormals<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">maxMorphNormals</span>,numDirLights<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">directional</span>.<span class="pl-c1">length</span>,numPointLights<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">point</span>.<span class="pl-c1">length</span>,numSpotLights<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">spot</span>.<span class="pl-c1">length</span>,numRectAreaLights<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">rectArea</span>.<span class="pl-c1">length</span>,numHemiLights<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">hemi</span>.<span class="pl-c1">length</span>,numClippingPlanes<span class="pl-k">:</span>n,numClipIntersection<span class="pl-k">:</span>t,dithering<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">dithering</span>,shadowMapEnabled<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">shadowMap</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-smi">receiveShadow</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,shadowMapType<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">shadowMap</span>.<span class="pl-c1">type</span>,toneMapping<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">toneMapping</span>,physicallyCorrectLights<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">physicallyCorrectLights</span>,premultipliedAlpha<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">premultipliedAlpha</span>,</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line">alphaTest<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">alphaTest</span>,doubleSided<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">side</span>,flipSided<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">side</span>,depthPacking<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">depthPacking</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">depthPacking</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}};<span class="pl-c1">this</span>.<span class="pl-en">getProgramCode</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>[];<span class="pl-smi">c</span>.<span class="pl-smi">shaderID</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-smi">c</span>.<span class="pl-smi">shaderID</span>)<span class="pl-k">:</span>(<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-smi">b</span>.<span class="pl-smi">fragmentShader</span>),<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-smi">b</span>.<span class="pl-smi">vertexShader</span>));<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">defines</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> e <span class="pl-k">in</span> <span class="pl-smi">b</span>.<span class="pl-smi">defines</span>)<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(e),<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-smi">b</span>.<span class="pl-smi">defines</span>[e]);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(c[g[e]]);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-smi">b</span>.<span class="pl-smi">onBeforeCompile</span>.<span class="pl-c1">toString</span>());<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">gammaOutput</span>);<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">join</span>()};<span class="pl-c1">this</span>.<span class="pl-en">acquireProgram</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> h,l<span class="pl-k">=</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;l<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line">m;l<span class="pl-k">++</span>){<span class="pl-k">var</span> v<span class="pl-k">=</span>e[l];<span class="pl-k">if</span>(<span class="pl-smi">v</span>.<span class="pl-c1">code</span><span class="pl-k">===</span>g){h<span class="pl-k">=</span>v;<span class="pl-k">++</span><span class="pl-smi">h</span>.<span class="pl-smi">usedTimes</span>;<span class="pl-k">break</span>}}<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">xg</span>(a,b,g,c,d,f),<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(h));<span class="pl-k">return</span> h};<span class="pl-c1">this</span>.<span class="pl-en">releaseProgram</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-k">--</span><span class="pl-smi">a</span>.<span class="pl-smi">usedTimes</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">indexOf</span>(a);e[b]<span class="pl-k">=</span>e[<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-smi">e</span>.<span class="pl-c1">pop</span>();<span class="pl-smi">a</span>.<span class="pl-en">destroy</span>()}};<span class="pl-c1">this</span>.<span class="pl-smi">programs</span><span class="pl-k">=</span>e}function Ag(){var a=new WeakMap;return{get:function(b){var c=a.get(b);void 0===c&amp;&amp;(c={},a.set(b,c));return c},remove:function(b){a.delete(b)},update:function(b,c,d){a.get(b)[c]=d},dispose:function(){a=new WeakMap}}}function Bg(a,b){return a.renderOrder!==b.renderOrder?</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">program</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">program</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">program</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">program</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">program</span>.<span class="pl-c1">id</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">program</span>.<span class="pl-c1">id</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">material</span>.<span class="pl-c1">id</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">material</span>.<span class="pl-c1">id</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">material</span>.<span class="pl-c1">id</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">material</span>.<span class="pl-c1">id</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">id</span>}function Cg(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function Dg(){var a=[],b=0,c=[],d=[];return{opaque:c,transparent:d,init:function(){b=0;c.length=0;d.length=0},push:function(e,f,g,h,l){var m=a[b];void 0===m?(m={id:e.id,object:e,geometry:f,material:g,program:g.program,</td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line">renderOrder<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">renderOrder</span>,z<span class="pl-k">:</span>h,group<span class="pl-k">:</span>l},a[b]<span class="pl-k">=</span>m)<span class="pl-k">:</span>(<span class="pl-smi">m</span>.<span class="pl-c1">id</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">id</span>,<span class="pl-smi">m</span>.<span class="pl-c1">object</span><span class="pl-k">=</span>e,<span class="pl-smi">m</span>.<span class="pl-smi">geometry</span><span class="pl-k">=</span>f,<span class="pl-smi">m</span>.<span class="pl-smi">material</span><span class="pl-k">=</span>g,<span class="pl-smi">m</span>.<span class="pl-smi">program</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">program</span>,<span class="pl-smi">m</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">renderOrder</span>,<span class="pl-smi">m</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>h,<span class="pl-smi">m</span>.<span class="pl-smi">group</span><span class="pl-k">=</span>l);(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">transparent</span><span class="pl-k">?</span>d<span class="pl-k">:</span>c).<span class="pl-c1">push</span>(m);b<span class="pl-k">++</span>},<span class="pl-en">sort</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">sort</span>(Bg);<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">sort</span>(Cg)}}}function Eg(){var a={};return{get:function(b,c){b=b.id+&quot;,&quot;+c.id;c=a[b];void 0===c&amp;&amp;(c=new Dg,a[b]=c);return c},dispose:function(){a={}}}}function Fg(){var a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];switch(b.type){case &quot;DirectionalLight&quot;:var c=</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line">{direction<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>,color<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>,shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,shadowBias<span class="pl-k">:</span><span class="pl-c1">0</span>,shadowRadius<span class="pl-k">:</span><span class="pl-c1">1</span>,shadowMapSize<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">B</span>};<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>SpotLight<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>c<span class="pl-k">=</span>{position<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>,direction<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>,color<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>,distance<span class="pl-k">:</span><span class="pl-c1">0</span>,coneCos<span class="pl-k">:</span><span class="pl-c1">0</span>,penumbraCos<span class="pl-k">:</span><span class="pl-c1">0</span>,decay<span class="pl-k">:</span><span class="pl-c1">0</span>,shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,shadowBias<span class="pl-k">:</span><span class="pl-c1">0</span>,shadowRadius<span class="pl-k">:</span><span class="pl-c1">1</span>,shadowMapSize<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">B</span>};<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>PointLight<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>c<span class="pl-k">=</span>{position<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>,color<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>,distance<span class="pl-k">:</span><span class="pl-c1">0</span>,decay<span class="pl-k">:</span><span class="pl-c1">0</span>,shadow<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,shadowBias<span class="pl-k">:</span><span class="pl-c1">0</span>,shadowRadius<span class="pl-k">:</span><span class="pl-c1">1</span>,shadowMapSize<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">B</span>,shadowCameraNear<span class="pl-k">:</span><span class="pl-c1">1</span>,shadowCameraFar<span class="pl-k">:</span><span class="pl-c1">1E3</span>};<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>HemisphereLight<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>c<span class="pl-k">=</span>{direction<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>,skyColor<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>,groundColor<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>};</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>RectAreaLight<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>c<span class="pl-k">=</span>{color<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>,position<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>,halfWidth<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>,halfHeight<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>}}<span class="pl-k">return</span> a[<span class="pl-smi">b</span>.<span class="pl-c1">id</span>]<span class="pl-k">=</span>c}}}function Gg(){var a=new Fg,b={id:Hg++,hash:&quot;&quot;,ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},c=new p,d=new R,e=new R;return{setup:function(f,g,h){var l=0,m=0,v=0,n=0,t=0,q=0,r=0,k=0;h=h.matrixWorldInverse;for(var p=0,w=f.length;p&lt;w;p++){var x=</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line">f[p],<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-c1">color</span>,<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">intensity</span>,<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">distance</span>,<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">shadow</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">x</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">map</span><span class="pl-k">?</span><span class="pl-smi">x</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">map</span>.<span class="pl-smi">texture</span><span class="pl-k">:</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(<span class="pl-smi">x</span>.<span class="pl-smi">isAmbientLight</span>)l<span class="pl-k">+=</span><span class="pl-c1">A</span>.<span class="pl-smi">r</span><span class="pl-k">*</span><span class="pl-c1">C</span>,m<span class="pl-k">+=</span><span class="pl-c1">A</span>.<span class="pl-smi">g</span><span class="pl-k">*</span><span class="pl-c1">C</span>,v<span class="pl-k">+=</span><span class="pl-c1">A</span>.<span class="pl-smi">b</span><span class="pl-k">*</span><span class="pl-c1">C</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">x</span>.<span class="pl-smi">isDirectionalLight</span>){<span class="pl-k">var</span> <span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">get</span>(x);<span class="pl-c1">M</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">x</span>.<span class="pl-c1">color</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-smi">x</span>.<span class="pl-smi">intensity</span>);<span class="pl-c1">M</span>.<span class="pl-smi">direction</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">x</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-smi">c</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">x</span>.<span class="pl-c1">target</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-c1">M</span>.<span class="pl-smi">direction</span>.<span class="pl-c1">sub</span>(c);<span class="pl-c1">M</span>.<span class="pl-smi">direction</span>.<span class="pl-en">transformDirection</span>(h);<span class="pl-k">if</span>(<span class="pl-c1">M</span>.<span class="pl-smi">shadow</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">castShadow</span>)<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">shadow</span>,<span class="pl-c1">M</span>.<span class="pl-smi">shadowBias</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">bias</span>,<span class="pl-c1">M</span>.<span class="pl-smi">shadowRadius</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">radius</span>,<span class="pl-c1">M</span>.<span class="pl-smi">shadowMapSize</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">mapSize</span>;<span class="pl-smi">b</span>.<span class="pl-smi">directionalShadowMap</span>[n]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Q</span>;<span class="pl-smi">b</span>.<span class="pl-smi">directionalShadowMatrix</span>[n]<span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">matrix</span>;<span class="pl-smi">b</span>.<span class="pl-smi">directional</span>[n]<span class="pl-k">=</span><span class="pl-c1">M</span>;n<span class="pl-k">++</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">x</span>.<span class="pl-smi">isSpotLight</span>){<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">get</span>(x);<span class="pl-c1">M</span>.<span class="pl-smi">position</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">x</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-c1">M</span>.<span class="pl-smi">position</span>.<span class="pl-en">applyMatrix4</span>(h);<span class="pl-c1">M</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-c1">A</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">C</span>);<span class="pl-c1">M</span>.<span class="pl-smi">distance</span><span class="pl-k">=</span><span class="pl-c1">O</span>;<span class="pl-c1">M</span>.<span class="pl-smi">direction</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">x</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-smi">c</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">x</span>.<span class="pl-c1">target</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-c1">M</span>.<span class="pl-smi">direction</span>.<span class="pl-c1">sub</span>(c);<span class="pl-c1">M</span>.<span class="pl-smi">direction</span>.<span class="pl-en">transformDirection</span>(h);<span class="pl-c1">M</span>.<span class="pl-smi">coneCos</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-smi">x</span>.<span class="pl-smi">angle</span>);<span class="pl-c1">M</span>.<span class="pl-smi">penumbraCos</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-smi">x</span>.<span class="pl-smi">angle</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-smi">x</span>.<span class="pl-smi">penumbra</span>));<span class="pl-c1">M</span>.<span class="pl-smi">decay</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">x</span>.<span class="pl-smi">distance</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">x</span>.<span class="pl-smi">decay</span>;<span class="pl-k">if</span>(<span class="pl-c1">M</span>.<span class="pl-smi">shadow</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">castShadow</span>)<span class="pl-c1">A</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">x</span>.<span class="pl-smi">shadow</span>,<span class="pl-c1">M</span>.<span class="pl-smi">shadowBias</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">bias</span>,<span class="pl-c1">M</span>.<span class="pl-smi">shadowRadius</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">radius</span>,<span class="pl-c1">M</span>.<span class="pl-smi">shadowMapSize</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">mapSize</span>;<span class="pl-smi">b</span>.<span class="pl-smi">spotShadowMap</span>[q]<span class="pl-k">=</span><span class="pl-c1">Q</span>;<span class="pl-smi">b</span>.<span class="pl-smi">spotShadowMatrix</span>[q]<span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">matrix</span>;<span class="pl-smi">b</span>.<span class="pl-smi">spot</span>[q]<span class="pl-k">=</span><span class="pl-c1">M</span>;q<span class="pl-k">++</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">x</span>.<span class="pl-smi">isRectAreaLight</span>)<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">get</span>(x),<span class="pl-c1">M</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-c1">A</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">C</span>),<span class="pl-c1">M</span>.<span class="pl-smi">position</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">x</span>.<span class="pl-smi">matrixWorld</span>),<span class="pl-c1">M</span>.<span class="pl-smi">position</span>.<span class="pl-en">applyMatrix4</span>(h),<span class="pl-smi">e</span>.<span class="pl-en">identity</span>(),<span class="pl-smi">d</span>.<span class="pl-en">copy</span>(<span class="pl-smi">x</span>.<span class="pl-smi">matrixWorld</span>),<span class="pl-smi">d</span>.<span class="pl-en">premultiply</span>(h),<span class="pl-smi">e</span>.<span class="pl-en">extractRotation</span>(d),<span class="pl-c1">M</span>.<span class="pl-smi">halfWidth</span>.<span class="pl-c1">set</span>(<span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-smi">x</span>.<span class="pl-c1">width</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>),<span class="pl-c1">M</span>.<span class="pl-smi">halfHeight</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-smi">x</span>.<span class="pl-c1">height</span>,<span class="pl-c1">0</span>),<span class="pl-c1">M</span>.<span class="pl-smi">halfWidth</span>.<span class="pl-en">applyMatrix4</span>(e),<span class="pl-c1">M</span>.<span class="pl-smi">halfHeight</span>.<span class="pl-en">applyMatrix4</span>(e),<span class="pl-smi">b</span>.<span class="pl-smi">rectArea</span>[r]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">M</span>,r<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">x</span>.<span class="pl-smi">isPointLight</span>){<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">get</span>(x);<span class="pl-c1">M</span>.<span class="pl-smi">position</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">x</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-c1">M</span>.<span class="pl-smi">position</span>.<span class="pl-en">applyMatrix4</span>(h);<span class="pl-c1">M</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">x</span>.<span class="pl-c1">color</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-smi">x</span>.<span class="pl-smi">intensity</span>);<span class="pl-c1">M</span>.<span class="pl-smi">distance</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">distance</span>;<span class="pl-c1">M</span>.<span class="pl-smi">decay</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">x</span>.<span class="pl-smi">distance</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">x</span>.<span class="pl-smi">decay</span>;<span class="pl-k">if</span>(<span class="pl-c1">M</span>.<span class="pl-smi">shadow</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">castShadow</span>)<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">shadow</span>,<span class="pl-c1">M</span>.<span class="pl-smi">shadowBias</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">bias</span>,<span class="pl-c1">M</span>.<span class="pl-smi">shadowRadius</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">radius</span>,<span class="pl-c1">M</span>.<span class="pl-smi">shadowMapSize</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">mapSize</span>,<span class="pl-c1">M</span>.<span class="pl-smi">shadowCameraNear</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">camera</span>.<span class="pl-smi">near</span>,<span class="pl-c1">M</span>.<span class="pl-smi">shadowCameraFar</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-smi">camera</span>.<span class="pl-smi">far</span>;<span class="pl-smi">b</span>.<span class="pl-smi">pointShadowMap</span>[t]<span class="pl-k">=</span><span class="pl-c1">Q</span>;<span class="pl-smi">b</span>.<span class="pl-smi">pointShadowMatrix</span>[t]<span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">matrix</span>;<span class="pl-smi">b</span>.<span class="pl-smi">point</span>[t]<span class="pl-k">=</span><span class="pl-c1">M</span>;t<span class="pl-k">++</span>}<span class="pl-k">else</span> <span class="pl-smi">x</span>.<span class="pl-smi">isHemisphereLight</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">get</span>(x),</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">M</span>.<span class="pl-smi">direction</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">x</span>.<span class="pl-smi">matrixWorld</span>),<span class="pl-c1">M</span>.<span class="pl-smi">direction</span>.<span class="pl-en">transformDirection</span>(h),<span class="pl-c1">M</span>.<span class="pl-smi">direction</span>.<span class="pl-c1">normalize</span>(),<span class="pl-c1">M</span>.<span class="pl-smi">skyColor</span>.<span class="pl-en">copy</span>(<span class="pl-smi">x</span>.<span class="pl-c1">color</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">C</span>),<span class="pl-c1">M</span>.<span class="pl-smi">groundColor</span>.<span class="pl-en">copy</span>(<span class="pl-smi">x</span>.<span class="pl-smi">groundColor</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">C</span>),<span class="pl-smi">b</span>.<span class="pl-smi">hemi</span>[k]<span class="pl-k">=</span><span class="pl-c1">M</span>,k<span class="pl-k">++</span>)}<span class="pl-smi">b</span>.<span class="pl-smi">ambient</span>[<span class="pl-c1">0</span>]<span class="pl-k">=</span>l;<span class="pl-smi">b</span>.<span class="pl-smi">ambient</span>[<span class="pl-c1">1</span>]<span class="pl-k">=</span>m;<span class="pl-smi">b</span>.<span class="pl-smi">ambient</span>[<span class="pl-c1">2</span>]<span class="pl-k">=</span>v;<span class="pl-smi">b</span>.<span class="pl-smi">directional</span>.<span class="pl-c1">length</span><span class="pl-k">=</span>n;<span class="pl-smi">b</span>.<span class="pl-smi">spot</span>.<span class="pl-c1">length</span><span class="pl-k">=</span>q;<span class="pl-smi">b</span>.<span class="pl-smi">rectArea</span>.<span class="pl-c1">length</span><span class="pl-k">=</span>r;<span class="pl-smi">b</span>.<span class="pl-smi">point</span>.<span class="pl-c1">length</span><span class="pl-k">=</span>t;<span class="pl-smi">b</span>.<span class="pl-smi">hemi</span>.<span class="pl-c1">length</span><span class="pl-k">=</span>k;<span class="pl-smi">b</span>.<span class="pl-c1">hash</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>t<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>q<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>r<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>k<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>},state<span class="pl-k">:</span>b}}function Ig(){var a=new Gg,b=[],c=[],d=[];return{init:function(){b.length=0;c.length=</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>},state<span class="pl-k">:</span>{lightsArray<span class="pl-k">:</span>b,shadowsArray<span class="pl-k">:</span>c,spritesArray<span class="pl-k">:</span>d,lights<span class="pl-k">:</span>a},<span class="pl-en">setupLights</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-en">setup</span>(b,c,d)},<span class="pl-en">pushLight</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(a)},<span class="pl-en">pushShadow</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(a)},<span class="pl-en">pushSprite</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(a)}}}function Jg(){var a={};return{get:function(b,c){b=b.id+&quot;,&quot;+c.id;c=a[b];void 0===c&amp;&amp;(c=new Ig,a[b]=c);return c},dispose:function(){a={}}}}function fb(a){I.call(this);this.type=&quot;MeshDepthMaterial&quot;;this.depthPacking=3200;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementScale</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementBias</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lights</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">fog</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a)}function gb(a){I.call(this);this.type=&quot;MeshDistanceMaterial&quot;;this.referencePosition=new p;this.nearDistance=1;this.farDistance=1E3;this.morphTargets=this.skinning=!1;this.displacementMap=this.alphaMap=this.map=null;this.displacementScale=1;this.displacementBias=0;this.lights=this.fog=!1;this.setValues(a)}function $e(a,b,c){function d(b,c,d,e,f,g){var h=</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">geometry</span>;<span class="pl-k">var</span> l<span class="pl-k">=</span>n;<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">customDepthMaterial</span>;d<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>t,m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">customDistanceMaterial</span>);m<span class="pl-k">?</span>l<span class="pl-k">=</span>m<span class="pl-k">:</span>(m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">c</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">isBufferGeometry</span><span class="pl-k">?</span>m<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">morphAttributes</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">morphAttributes</span>.<span class="pl-smi">position</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">h</span>.<span class="pl-smi">morphAttributes</span>.<span class="pl-smi">position</span>.<span class="pl-c1">length</span><span class="pl-k">:</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">isGeometry</span><span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">h</span>.<span class="pl-smi">morphTargets</span>.<span class="pl-c1">length</span>)),<span class="pl-smi">b</span>.<span class="pl-smi">isSkinnedMesh</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">skinning</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:<span class="pl-pds">&quot;</span></span>,b),b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isSkinnedMesh</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">skinning</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,m<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">|=</span><span class="pl-c1">1</span>),b<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">|=</span><span class="pl-c1">2</span>),l<span class="pl-k">=</span>l[h]);<span class="pl-smi">a</span>.<span class="pl-smi">localClippingEnabled</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">0</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">clipShadows</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">clippingPlanes</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">uuid</span>,m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">uuid</span>,b<span class="pl-k">=</span>q[h],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>{},q[h]<span class="pl-k">=</span>b),h<span class="pl-k">=</span>b[m],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">clone</span>(),b[m]<span class="pl-k">=</span>h),l<span class="pl-k">=</span>h);<span class="pl-smi">l</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">visible</span>;<span class="pl-smi">l</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">wireframe</span>;<span class="pl-smi">l</span>.<span class="pl-smi">side</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-smi">c</span>.<span class="pl-smi">shadowSide</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">shadowSide</span><span class="pl-k">:</span>r[<span class="pl-smi">c</span>.<span class="pl-smi">side</span>];<span class="pl-smi">l</span>.<span class="pl-smi">clipShadows</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">clipShadows</span>;<span class="pl-smi">l</span>.<span class="pl-smi">clippingPlanes</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">clippingPlanes</span>;<span class="pl-smi">l</span>.<span class="pl-smi">clipIntersection</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">clipIntersection</span>;<span class="pl-smi">l</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">wireframeLinewidth</span>;<span class="pl-smi">l</span>.<span class="pl-smi">linewidth</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">linewidth</span>;d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">isMeshDistanceMaterial</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">l</span>.<span class="pl-smi">referencePosition</span>.<span class="pl-en">copy</span>(e),<span class="pl-smi">l</span>.<span class="pl-smi">nearDistance</span><span class="pl-k">=</span>f,<span class="pl-smi">l</span>.<span class="pl-smi">farDistance</span><span class="pl-k">=</span>g);<span class="pl-k">return</span> l}</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">c</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">l</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">visible</span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">layers</span>.<span class="pl-c1">test</span>(<span class="pl-smi">g</span>.<span class="pl-c1">layers</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">isMesh</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">isLine</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">isPoints</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">castShadow</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-smi">frustumCulled</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-en">intersectsObject</span>(c))){<span class="pl-smi">c</span>.<span class="pl-smi">modelViewMatrix</span>.<span class="pl-en">multiplyMatrices</span>(<span class="pl-smi">h</span>.<span class="pl-smi">matrixWorldInverse</span>,<span class="pl-smi">c</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">update</span>(c),n<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">material</span>;<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(n))<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">groups</span>,q<span class="pl-k">=</span><span class="pl-c1">0</span>,r<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;q<span class="pl-k">&lt;</span>r;q<span class="pl-k">++</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>t[q],<span class="pl-c1">O</span><span class="pl-k">=</span>n[<span class="pl-smi">k</span>.<span class="pl-smi">materialIndex</span>];<span class="pl-c1">O</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">O</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-en">d</span>(c,<span class="pl-c1">O</span>,l,v,<span class="pl-smi">h</span>.<span class="pl-smi">near</span>,<span class="pl-smi">h</span>.<span class="pl-smi">far</span>),<span class="pl-smi">a</span>.<span class="pl-en">renderBufferDirect</span>(h,<span class="pl-c1">null</span>,m,<span class="pl-c1">O</span>,c,k))}<span class="pl-k">else</span> <span class="pl-smi">n</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-en">d</span>(c,n,l,v,<span class="pl-smi">h</span>.<span class="pl-smi">near</span>,<span class="pl-smi">h</span>.<span class="pl-smi">far</span>),<span class="pl-smi">a</span>.<span class="pl-en">renderBufferDirect</span>(h,<span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line">m,<span class="pl-c1">O</span>,c,<span class="pl-c1">null</span>))}c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">children</span>;m<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;m<span class="pl-k">&lt;</span>n;m<span class="pl-k">++</span>)<span class="pl-en">e</span>(c[m],g,h,l)}}<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">td</span>,g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>,h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>(c,c),m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,v<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,n<span class="pl-k">=</span><span class="pl-c1">Array</span>(<span class="pl-c1">4</span>),t<span class="pl-k">=</span><span class="pl-c1">Array</span>(<span class="pl-c1">4</span>),q<span class="pl-k">=</span>{},r<span class="pl-k">=</span>{<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">2</span>},k<span class="pl-k">=</span>[<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>),<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>),<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>),<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>),<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>),<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>)],y<span class="pl-k">=</span>[<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>),<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>),<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>),<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>),<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>),<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>)],w<span class="pl-k">=</span>[<span class="pl-k">new</span> <span class="pl-en">W</span>,<span class="pl-k">new</span> <span class="pl-en">W</span>,<span class="pl-k">new</span> <span class="pl-en">W</span>,<span class="pl-k">new</span> <span class="pl-en">W</span>,<span class="pl-k">new</span> <span class="pl-en">W</span>,<span class="pl-k">new</span> <span class="pl-en">W</span>];<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">!==</span>c;<span class="pl-k">++</span>c){<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">!==</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">1</span>),<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">!==</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">2</span>),<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">fb</span>({depthPacking<span class="pl-k">:</span><span class="pl-c1">3201</span>,morphTargets<span class="pl-k">:</span>x,skinning<span class="pl-k">:</span><span class="pl-c1">A</span>});n[c]<span class="pl-k">=</span><span class="pl-c1">C</span>;x<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">gb</span>({morphTargets<span class="pl-k">:</span>x,</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line">skinning<span class="pl-k">:</span><span class="pl-c1">A</span>});t[c]<span class="pl-k">=</span>x}<span class="pl-k">var</span> <span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-c1">this</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">autoUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">render</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-c1">O</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-c1">O</span>.<span class="pl-smi">autoUpdate</span><span class="pl-k">||!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-c1">O</span>.<span class="pl-smi">needsUpdate</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">state</span>;<span class="pl-smi">n</span>.<span class="pl-en">disable</span>(<span class="pl-smi">a</span>.<span class="pl-smi">context</span>.<span class="pl-c1">BLEND</span>);<span class="pl-smi">n</span>.<span class="pl-smi">buffers</span>.<span class="pl-c1">color</span>.<span class="pl-en">setClear</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-smi">n</span>.<span class="pl-smi">buffers</span>.<span class="pl-smi">depth</span>.<span class="pl-en">setTest</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">n</span>.<span class="pl-en">setScissorTest</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> t,q<span class="pl-k">=</span><span class="pl-c1">0</span>,r<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;q<span class="pl-k">&lt;</span>r;q<span class="pl-k">++</span>){<span class="pl-k">var</span> u<span class="pl-k">=</span>b[q];t<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">shadow</span>;<span class="pl-k">var</span> p<span class="pl-k">=</span>u<span class="pl-k">&amp;&amp;</span><span class="pl-smi">u</span>.<span class="pl-smi">isPointLight</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>t)<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLShadowMap:<span class="pl-pds">&quot;</span></span>,u,<span class="pl-s"><span class="pl-pds">&quot;</span>has no shadow.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span>{<span class="pl-k">var</span> <span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">camera</span>;<span class="pl-smi">h</span>.<span class="pl-en">copy</span>(<span class="pl-smi">t</span>.<span class="pl-smi">mapSize</span>);</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-en">min</span>(l);<span class="pl-k">if</span>(p){<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">y</span>;w[<span class="pl-c1">0</span>].<span class="pl-c1">set</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>x,<span class="pl-c1">C</span>,x,<span class="pl-c1">C</span>);w[<span class="pl-c1">1</span>].<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">C</span>,x,<span class="pl-c1">C</span>);w[<span class="pl-c1">2</span>].<span class="pl-c1">set</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>x,<span class="pl-c1">C</span>,x,<span class="pl-c1">C</span>);w[<span class="pl-c1">3</span>].<span class="pl-c1">set</span>(x,<span class="pl-c1">C</span>,x,<span class="pl-c1">C</span>);w[<span class="pl-c1">4</span>].<span class="pl-c1">set</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>x,<span class="pl-c1">0</span>,x,<span class="pl-c1">C</span>);w[<span class="pl-c1">5</span>].<span class="pl-c1">set</span>(x,<span class="pl-c1">0</span>,x,<span class="pl-c1">C</span>);<span class="pl-smi">h</span>.<span class="pl-c1">x</span><span class="pl-k">*=</span><span class="pl-c1">4</span>;<span class="pl-smi">h</span>.<span class="pl-c1">y</span><span class="pl-k">*=</span><span class="pl-c1">2</span>}<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">t</span>.<span class="pl-smi">map</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">t</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">kb</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,{minFilter<span class="pl-k">:</span><span class="pl-c1">1003</span>,magFilter<span class="pl-k">:</span><span class="pl-c1">1003</span>,format<span class="pl-k">:</span><span class="pl-c1">1023</span>}),<span class="pl-smi">t</span>.<span class="pl-smi">map</span>.<span class="pl-smi">texture</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.shadowMap<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">Q</span>.<span class="pl-en">updateProjectionMatrix</span>());<span class="pl-smi">t</span>.<span class="pl-smi">isSpotLightShadow</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">t</span>.<span class="pl-en">update</span>(u);x<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">map</span>;<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">matrix</span>;<span class="pl-smi">v</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">u</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-c1">Q</span>.<span class="pl-smi">position</span>.<span class="pl-en">copy</span>(v);p<span class="pl-k">?</span>(t<span class="pl-k">=</span><span class="pl-c1">6</span>,<span class="pl-c1">C</span>.<span class="pl-en">makeTranslation</span>(<span class="pl-k">-</span><span class="pl-smi">v</span>.<span class="pl-c1">x</span>,<span class="pl-k">-</span><span class="pl-smi">v</span>.<span class="pl-c1">y</span>,<span class="pl-k">-</span><span class="pl-smi">v</span>.<span class="pl-c1">z</span>))<span class="pl-k">:</span>(t<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">m</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">u</span>.<span class="pl-c1">target</span>.<span class="pl-smi">matrixWorld</span>),</td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Q</span>.<span class="pl-en">lookAt</span>(m),<span class="pl-c1">Q</span>.<span class="pl-en">updateMatrixWorld</span>(),<span class="pl-c1">C</span>.<span class="pl-c1">set</span>(<span class="pl-c1">.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>),<span class="pl-c1">C</span>.<span class="pl-en">multiply</span>(<span class="pl-c1">Q</span>.<span class="pl-smi">projectionMatrix</span>),<span class="pl-c1">C</span>.<span class="pl-en">multiply</span>(<span class="pl-c1">Q</span>.<span class="pl-smi">matrixWorldInverse</span>));<span class="pl-smi">a</span>.<span class="pl-en">setRenderTarget</span>(x);<span class="pl-smi">a</span>.<span class="pl-c1">clear</span>();<span class="pl-k">for</span>(u<span class="pl-k">=</span><span class="pl-c1">0</span>;u<span class="pl-k">&lt;</span>t;u<span class="pl-k">++</span>)p<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-en">copy</span>(<span class="pl-c1">Q</span>.<span class="pl-smi">position</span>),<span class="pl-smi">m</span>.<span class="pl-c1">add</span>(k[u]),<span class="pl-c1">Q</span>.<span class="pl-smi">up</span>.<span class="pl-en">copy</span>(y[u]),<span class="pl-c1">Q</span>.<span class="pl-en">lookAt</span>(m),<span class="pl-c1">Q</span>.<span class="pl-en">updateMatrixWorld</span>(),<span class="pl-smi">n</span>.<span class="pl-en">viewport</span>(w[u])),<span class="pl-smi">g</span>.<span class="pl-en">multiplyMatrices</span>(<span class="pl-c1">Q</span>.<span class="pl-smi">projectionMatrix</span>,<span class="pl-c1">Q</span>.<span class="pl-smi">matrixWorldInverse</span>),<span class="pl-smi">f</span>.<span class="pl-en">setFromMatrix</span>(g),<span class="pl-en">e</span>(c,d,<span class="pl-c1">Q</span>,p)}}<span class="pl-c1">O</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}}}function Sb(a,b,c,d,e,f,g,h,l){ea.call(this,a,b,c,d,e,f,g,h,l);this.needsUpdate=!0}function Kg(a,</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line">b,c,d,e){<span class="pl-k">var</span> f,g,h,l,m,v,n,t,q,r,k,y,w,x,<span class="pl-c1">A</span>,<span class="pl-c1">C</span>,<span class="pl-c1">O</span>,<span class="pl-c1">Q</span>;<span class="pl-k">function</span> <span class="pl-en">M</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">id</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span>}<span class="pl-k">var</span> <span class="pl-c1">B</span>,qb,<span class="pl-c1">U</span>,z,Ec<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>,<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-c1">this</span>.<span class="pl-en">render</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">u</span>,<span class="pl-smi">p</span>,<span class="pl-smi">Ob</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">u</span>.<span class="pl-c1">length</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">U</span>){<span class="pl-k">var</span> sa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>([<span class="pl-k">-</span><span class="pl-c1">.5</span>,<span class="pl-k">-</span><span class="pl-c1">.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">.5</span>,<span class="pl-k">-</span><span class="pl-c1">.5</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">.5</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>]),Ca<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint16Array</span>([<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>]);<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">createBuffer</span>();qb<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">createBuffer</span>();<span class="pl-smi">b</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-smi">b</span>.<span class="pl-c1">ARRAY_BUFFER</span>,<span class="pl-c1">B</span>);<span class="pl-smi">b</span>.<span class="pl-en">bufferData</span>(<span class="pl-smi">b</span>.<span class="pl-c1">ARRAY_BUFFER</span>,sa,<span class="pl-smi">b</span>.<span class="pl-c1">STATIC_DRAW</span>);<span class="pl-smi">b</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-smi">b</span>.<span class="pl-c1">ELEMENT_ARRAY_BUFFER</span>,</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line">qb);b.bufferData(b.ELEMENT_ARRAY_BUFFER,Ca,b.STATIC_DRAW);sa=b.createProgram();Ca=b.createShader(b.VERTEX_SHADER);var G=b.createShader(b.FRAGMENT_SHADER);b.shaderSource(Ca,[&quot;precision &quot;+e.precision+&quot; float;&quot;,&quot;#define SHADER_NAME SpriteMaterial\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 center;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float fogDepth;\nvoid main() {\n\tvUV = uvOffset + uv * uvScale;\n\tvec2 alignedPosition = ( position - center ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tvec4 mvPosition;\n\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\tfogDepth = - mvPosition.z;\n}&quot;].join(&quot;\n&quot;));</td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">shaderSource</span>(<span class="pl-c1">G</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>precision <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">precision</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> float;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>#define SHADER_NAME SpriteMaterial<span class="pl-cce">\n</span>uniform vec3 color;<span class="pl-cce">\n</span>uniform sampler2D map;<span class="pl-cce">\n</span>uniform float opacity;<span class="pl-cce">\n</span>uniform int fogType;<span class="pl-cce">\n</span>uniform vec3 fogColor;<span class="pl-cce">\n</span>uniform float fogDensity;<span class="pl-cce">\n</span>uniform float fogNear;<span class="pl-cce">\n</span>uniform float fogFar;<span class="pl-cce">\n</span>uniform float alphaTest;<span class="pl-cce">\n</span>varying vec2 vUV;<span class="pl-cce">\n</span>varying float fogDepth;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>vec4 texture = texture2D( map, vUV );<span class="pl-cce">\n\t</span>gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );<span class="pl-cce">\n\t</span>if ( gl_FragColor.a &lt; alphaTest ) discard;<span class="pl-cce">\n\t</span>if ( fogType &gt; 0 ) {<span class="pl-cce">\n\t\t</span>float fogFactor = 0.0;<span class="pl-cce">\n\t\t</span>if ( fogType == 1 ) {<span class="pl-cce">\n\t\t\t</span>fogFactor = smoothstep( fogNear, fogFar, fogDepth );<span class="pl-cce">\n\t\t</span>} else {<span class="pl-cce">\n\t\t\t</span>const float LOG2 = 1.442695;<span class="pl-cce">\n\t\t\t</span>fogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );<span class="pl-cce">\n\t\t\t</span>fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );<span class="pl-cce">\n\t\t</span>}<span class="pl-cce">\n\t\t</span>gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );<span class="pl-cce">\n\t</span>}<span class="pl-cce">\n</span>}<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>));</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">compileShader</span>(Ca);<span class="pl-smi">b</span>.<span class="pl-en">compileShader</span>(<span class="pl-c1">G</span>);<span class="pl-smi">b</span>.<span class="pl-en">attachShader</span>(sa,Ca);<span class="pl-smi">b</span>.<span class="pl-en">attachShader</span>(sa,<span class="pl-c1">G</span>);<span class="pl-smi">b</span>.<span class="pl-en">linkProgram</span>(sa);<span class="pl-c1">U</span><span class="pl-k">=</span>sa;<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getAttribLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getAttribLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>);f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uvOffset<span class="pl-pds">&quot;</span></span>);g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uvScale<span class="pl-pds">&quot;</span></span>);h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>rotation<span class="pl-pds">&quot;</span></span>);l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>);m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>scale<span class="pl-pds">&quot;</span></span>);v<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>);n<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>map<span class="pl-pds">&quot;</span></span>);t<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>);q<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>modelViewMatrix<span class="pl-pds">&quot;</span></span>);r<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>projectionMatrix<span class="pl-pds">&quot;</span></span>);k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fogType<span class="pl-pds">&quot;</span></span>);y<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fogDensity<span class="pl-pds">&quot;</span></span>);w<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fogNear<span class="pl-pds">&quot;</span></span>);x<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fogFar<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fogColor<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fogDepth<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(<span class="pl-c1">U</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>alphaTest<span class="pl-pds">&quot;</span></span>);sa<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElementNS</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">sa</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">8</span>;<span class="pl-smi">sa</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-c1">8</span>;Ca<span class="pl-k">=</span><span class="pl-smi">sa</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">Ca</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>white<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">Ca</span>.<span class="pl-en">fillRect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>);z<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Sb</span>(sa)}<span class="pl-smi">c</span>.<span class="pl-en">useProgram</span>(<span class="pl-c1">U</span>);<span class="pl-smi">c</span>.<span class="pl-en">initAttributes</span>();<span class="pl-smi">c</span>.<span class="pl-en">enableAttribute</span>(<span class="pl-c1">O</span>);</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-en">enableAttribute</span>(<span class="pl-c1">Q</span>);<span class="pl-smi">c</span>.<span class="pl-en">disableUnusedAttributes</span>();<span class="pl-smi">c</span>.<span class="pl-en">disable</span>(<span class="pl-smi">b</span>.<span class="pl-c1">CULL_FACE</span>);<span class="pl-smi">c</span>.<span class="pl-en">enable</span>(<span class="pl-smi">b</span>.<span class="pl-c1">BLEND</span>);<span class="pl-smi">b</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-smi">b</span>.<span class="pl-c1">ARRAY_BUFFER</span>,<span class="pl-c1">B</span>);<span class="pl-smi">b</span>.<span class="pl-en">vertexAttribPointer</span>(<span class="pl-c1">O</span>,<span class="pl-c1">2</span>,<span class="pl-smi">b</span>.<span class="pl-c1">FLOAT</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">16</span>,<span class="pl-c1">0</span>);<span class="pl-smi">b</span>.<span class="pl-en">vertexAttribPointer</span>(<span class="pl-c1">Q</span>,<span class="pl-c1">2</span>,<span class="pl-smi">b</span>.<span class="pl-c1">FLOAT</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">16</span>,<span class="pl-c1">8</span>);<span class="pl-smi">b</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-smi">b</span>.<span class="pl-c1">ELEMENT_ARRAY_BUFFER</span>,qb);<span class="pl-smi">b</span>.<span class="pl-en">uniformMatrix4fv</span>(r,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">Ob</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-c1">elements</span>);<span class="pl-smi">c</span>.<span class="pl-en">activeTexture</span>(<span class="pl-smi">b</span>.<span class="pl-c1">TEXTURE0</span>);<span class="pl-smi">b</span>.<span class="pl-en">uniform1i</span>(n,<span class="pl-c1">0</span>);Ca<span class="pl-k">=</span>sa<span class="pl-k">=</span><span class="pl-c1">0</span>;(<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">fog</span>)<span class="pl-k">?</span>(<span class="pl-smi">b</span>.<span class="pl-en">uniform3f</span>(<span class="pl-c1">A</span>,<span class="pl-c1">G</span>.<span class="pl-c1">color</span>.<span class="pl-smi">r</span>,<span class="pl-c1">G</span>.<span class="pl-c1">color</span>.<span class="pl-smi">g</span>,<span class="pl-c1">G</span>.<span class="pl-c1">color</span>.<span class="pl-smi">b</span>),<span class="pl-c1">G</span>.<span class="pl-smi">isFog</span><span class="pl-k">?</span>(<span class="pl-smi">b</span>.<span class="pl-en">uniform1f</span>(w,<span class="pl-c1">G</span>.<span class="pl-smi">near</span>),<span class="pl-smi">b</span>.<span class="pl-en">uniform1f</span>(x,<span class="pl-c1">G</span>.<span class="pl-smi">far</span>),<span class="pl-smi">b</span>.<span class="pl-en">uniform1i</span>(k,<span class="pl-c1">1</span>),Ca<span class="pl-k">=</span>sa<span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">G</span>.<span class="pl-smi">isFogExp2</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">b</span>.<span class="pl-en">uniform1f</span>(y,<span class="pl-c1">G</span>.<span class="pl-smi">density</span>),<span class="pl-smi">b</span>.<span class="pl-en">uniform1i</span>(k,<span class="pl-c1">2</span>),Ca<span class="pl-k">=</span>sa<span class="pl-k">=</span><span class="pl-c1">2</span>))<span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-en">uniform1i</span>(k,<span class="pl-c1">0</span>),Ca<span class="pl-k">=</span>sa<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> <span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">length</span>;<span class="pl-c1">G</span><span class="pl-k">&lt;</span><span class="pl-c1">K</span>;<span class="pl-c1">G</span><span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">E</span><span class="pl-k">=</span>u[<span class="pl-c1">G</span>];<span class="pl-c1">E</span>.<span class="pl-smi">modelViewMatrix</span>.<span class="pl-en">multiplyMatrices</span>(<span class="pl-smi">Ob</span>.<span class="pl-smi">matrixWorldInverse</span>,<span class="pl-c1">E</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-c1">E</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">E</span>.<span class="pl-smi">modelViewMatrix</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">14</span>]}<span class="pl-smi">u</span>.<span class="pl-c1">sort</span>(<span class="pl-c1">M</span>);<span class="pl-k">var</span> <span class="pl-c1">P</span><span class="pl-k">=</span>[],<span class="pl-c1">R</span><span class="pl-k">=</span>[];<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">length</span>;<span class="pl-c1">G</span><span class="pl-k">&lt;</span><span class="pl-c1">K</span>;<span class="pl-c1">G</span><span class="pl-k">++</span>){<span class="pl-c1">E</span><span class="pl-k">=</span>u[<span class="pl-c1">G</span>];<span class="pl-k">var</span> <span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-smi">material</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-c1">V</span>.<span class="pl-smi">visible</span>){<span class="pl-c1">E</span>.<span class="pl-en">onBeforeRender</span>(a,p,Ob,<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-c1">V</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span>);<span class="pl-smi">b</span>.<span class="pl-en">uniform1f</span>(<span class="pl-c1">C</span>,<span class="pl-c1">V</span>.<span class="pl-smi">alphaTest</span>);<span class="pl-smi">b</span>.<span class="pl-en">uniformMatrix4fv</span>(q,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">E</span>.<span class="pl-smi">modelViewMatrix</span>.<span class="pl-c1">elements</span>);<span class="pl-c1">E</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">decompose</span>(Ec,<span class="pl-c1">H</span>,<span class="pl-c1">D</span>);<span class="pl-c1">P</span>[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">D</span>.<span class="pl-c1">x</span>;<span class="pl-c1">P</span>[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">D</span>.<span class="pl-c1">y</span>;<span class="pl-c1">R</span>[<span class="pl-c1">0</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">E</span>.<span class="pl-smi">center</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">.5</span>;<span class="pl-c1">R</span>[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-smi">center</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">.5</span>;<span class="pl-k">var</span> <span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">p</span>.<span class="pl-smi">fog</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">V</span>.<span class="pl-smi">fog</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">N</span><span class="pl-k">=</span>Ca);sa<span class="pl-k">!==</span><span class="pl-c1">N</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-en">uniform1i</span>(k,<span class="pl-c1">N</span>),sa<span class="pl-k">=</span><span class="pl-c1">N</span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">V</span>.<span class="pl-smi">map</span><span class="pl-k">?</span>(<span class="pl-smi">b</span>.<span class="pl-en">uniform2f</span>(f,<span class="pl-c1">V</span>.<span class="pl-smi">map</span>.<span class="pl-smi">offset</span>.<span class="pl-c1">x</span>,<span class="pl-c1">V</span>.<span class="pl-smi">map</span>.<span class="pl-smi">offset</span>.<span class="pl-c1">y</span>),<span class="pl-smi">b</span>.<span class="pl-en">uniform2f</span>(g,<span class="pl-c1">V</span>.<span class="pl-smi">map</span>.<span class="pl-smi">repeat</span>.<span class="pl-c1">x</span>,<span class="pl-c1">V</span>.<span class="pl-smi">map</span>.<span class="pl-smi">repeat</span>.<span class="pl-c1">y</span>))<span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-en">uniform2f</span>(f,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-en">uniform2f</span>(g,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>));<span class="pl-smi">b</span>.<span class="pl-en">uniform1f</span>(t,<span class="pl-c1">V</span>.<span class="pl-smi">opacity</span>);<span class="pl-smi">b</span>.<span class="pl-en">uniform3f</span>(v,<span class="pl-c1">V</span>.<span class="pl-c1">color</span>.<span class="pl-smi">r</span>,<span class="pl-c1">V</span>.<span class="pl-c1">color</span>.<span class="pl-smi">g</span>,<span class="pl-c1">V</span>.<span class="pl-c1">color</span>.<span class="pl-smi">b</span>);<span class="pl-smi">b</span>.<span class="pl-en">uniform1f</span>(h,<span class="pl-c1">V</span>.<span class="pl-smi">rotation</span>);<span class="pl-smi">b</span>.<span class="pl-en">uniform2fv</span>(l,<span class="pl-c1">R</span>);<span class="pl-smi">b</span>.<span class="pl-en">uniform2fv</span>(m,<span class="pl-c1">P</span>);<span class="pl-smi">c</span>.<span class="pl-en">setBlending</span>(<span class="pl-c1">V</span>.<span class="pl-smi">blending</span>,<span class="pl-c1">V</span>.<span class="pl-smi">blendEquation</span>,<span class="pl-c1">V</span>.<span class="pl-smi">blendSrc</span>,<span class="pl-c1">V</span>.<span class="pl-smi">blendDst</span>,<span class="pl-c1">V</span>.<span class="pl-smi">blendEquationAlpha</span>,<span class="pl-c1">V</span>.<span class="pl-smi">blendSrcAlpha</span>,<span class="pl-c1">V</span>.<span class="pl-smi">blendDstAlpha</span>,<span class="pl-c1">V</span>.<span class="pl-smi">premultipliedAlpha</span>);</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">buffers</span>.<span class="pl-smi">depth</span>.<span class="pl-en">setTest</span>(<span class="pl-c1">V</span>.<span class="pl-smi">depthTest</span>);<span class="pl-smi">c</span>.<span class="pl-smi">buffers</span>.<span class="pl-smi">depth</span>.<span class="pl-en">setMask</span>(<span class="pl-c1">V</span>.<span class="pl-smi">depthWrite</span>);<span class="pl-smi">c</span>.<span class="pl-smi">buffers</span>.<span class="pl-c1">color</span>.<span class="pl-en">setMask</span>(<span class="pl-c1">V</span>.<span class="pl-smi">colorWrite</span>);<span class="pl-smi">d</span>.<span class="pl-en">setTexture2D</span>(<span class="pl-c1">V</span>.<span class="pl-smi">map</span><span class="pl-k">||</span>z,<span class="pl-c1">0</span>);<span class="pl-smi">b</span>.<span class="pl-en">drawElements</span>(<span class="pl-smi">b</span>.<span class="pl-c1">TRIANGLES</span>,<span class="pl-c1">6</span>,<span class="pl-smi">b</span>.<span class="pl-c1">UNSIGNED_SHORT</span>,<span class="pl-c1">0</span>);<span class="pl-c1">E</span>.<span class="pl-en">onAfterRender</span>(a,p,Ob,<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-c1">V</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span>)}}<span class="pl-smi">c</span>.<span class="pl-en">enable</span>(<span class="pl-smi">b</span>.<span class="pl-c1">CULL_FACE</span>);<span class="pl-smi">c</span>.<span class="pl-c1">reset</span>()}}}function Lg(a,b,c){function d(b,c,d){var e=new Uint8Array(4),f=a.createTexture();a.bindTexture(b,f);a.texParameteri(b,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texParameteri(b,a.TEXTURE_MAG_FILTER,a.NEAREST);for(b=0;b&lt;d;b++)a.texImage2D(c+b,0,a.RGBA,</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">RGBA</span>,<span class="pl-smi">a</span>.<span class="pl-c1">UNSIGNED_BYTE</span>,e);<span class="pl-k">return</span> f}function e(c,d){p[c]=1;0===w[c]&amp;&amp;(a.enableVertexAttribArray(c),w[c]=1);x[c]!==d&amp;&amp;(b.get(&quot;ANGLE_instanced_arrays&quot;).vertexAttribDivisorANGLE(c,d),x[c]=d)}function f(b){!0!==A[b]&amp;&amp;(a.enable(b),A[b]=!0)}function g(b){!1!==A[b]&amp;&amp;(a.disable(b),A[b]=!1)}function h(b,d,e,h,l,m,n,v){0!==b?f(a.BLEND):g(a.BLEND);if(5!==b){if(b!==Q||v!==sa)switch(b){case 2:v?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE,a.ONE,a.ONE)):(a.blendEquation(a.FUNC_ADD),</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">blendFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">SRC_ALPHA</span>,<span class="pl-smi">a</span>.<span class="pl-c1">ONE</span>));<span class="pl-k">break</span>;case <span class="pl-c1">3</span><span class="pl-k">:</span>v<span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-en">blendEquationSeparate</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FUNC_ADD</span>,<span class="pl-smi">a</span>.<span class="pl-c1">FUNC_ADD</span>),<span class="pl-smi">a</span>.<span class="pl-en">blendFuncSeparate</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ZERO</span>,<span class="pl-smi">a</span>.<span class="pl-c1">ZERO</span>,<span class="pl-smi">a</span>.<span class="pl-c1">ONE_MINUS_SRC_COLOR</span>,<span class="pl-smi">a</span>.<span class="pl-c1">ONE_MINUS_SRC_ALPHA</span>))<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-en">blendEquation</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FUNC_ADD</span>),<span class="pl-smi">a</span>.<span class="pl-en">blendFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ZERO</span>,<span class="pl-smi">a</span>.<span class="pl-c1">ONE_MINUS_SRC_COLOR</span>));<span class="pl-k">break</span>;case <span class="pl-c1">4</span><span class="pl-k">:</span>v<span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-en">blendEquationSeparate</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FUNC_ADD</span>,<span class="pl-smi">a</span>.<span class="pl-c1">FUNC_ADD</span>),<span class="pl-smi">a</span>.<span class="pl-en">blendFuncSeparate</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ZERO</span>,<span class="pl-smi">a</span>.<span class="pl-c1">SRC_COLOR</span>,<span class="pl-smi">a</span>.<span class="pl-c1">ZERO</span>,<span class="pl-smi">a</span>.<span class="pl-c1">SRC_ALPHA</span>))<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-en">blendEquation</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FUNC_ADD</span>),<span class="pl-smi">a</span>.<span class="pl-en">blendFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ZERO</span>,<span class="pl-smi">a</span>.<span class="pl-c1">SRC_COLOR</span>));<span class="pl-k">break</span>;default<span class="pl-k">:</span>v<span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-en">blendEquationSeparate</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FUNC_ADD</span>,<span class="pl-smi">a</span>.<span class="pl-c1">FUNC_ADD</span>),<span class="pl-smi">a</span>.<span class="pl-en">blendFuncSeparate</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ONE</span>,</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">ONE_MINUS_SRC_ALPHA</span>,<span class="pl-smi">a</span>.<span class="pl-c1">ONE</span>,<span class="pl-smi">a</span>.<span class="pl-c1">ONE_MINUS_SRC_ALPHA</span>))<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-en">blendEquationSeparate</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FUNC_ADD</span>,<span class="pl-smi">a</span>.<span class="pl-c1">FUNC_ADD</span>),<span class="pl-smi">a</span>.<span class="pl-en">blendFuncSeparate</span>(<span class="pl-smi">a</span>.<span class="pl-c1">SRC_ALPHA</span>,<span class="pl-smi">a</span>.<span class="pl-c1">ONE_MINUS_SRC_ALPHA</span>,<span class="pl-smi">a</span>.<span class="pl-c1">ONE</span>,<span class="pl-smi">a</span>.<span class="pl-c1">ONE_MINUS_SRC_ALPHA</span>))}Ec<span class="pl-k">=</span>z<span class="pl-k">=</span><span class="pl-c1">U</span><span class="pl-k">=</span>qb<span class="pl-k">=</span><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-k">else</span>{l<span class="pl-k">=</span>l<span class="pl-k">||</span>d;m<span class="pl-k">=</span>m<span class="pl-k">||</span>e;n<span class="pl-k">=</span>n<span class="pl-k">||</span>h;<span class="pl-k">if</span>(d<span class="pl-k">!==</span><span class="pl-c1">M</span><span class="pl-k">||</span>l<span class="pl-k">!==</span><span class="pl-c1">U</span>)<span class="pl-smi">a</span>.<span class="pl-en">blendEquationSeparate</span>(<span class="pl-smi">c</span>.<span class="pl-en">convert</span>(d),<span class="pl-smi">c</span>.<span class="pl-en">convert</span>(l)),<span class="pl-c1">M</span><span class="pl-k">=</span>d,<span class="pl-c1">U</span><span class="pl-k">=</span>l;<span class="pl-k">if</span>(e<span class="pl-k">!==</span><span class="pl-c1">B</span><span class="pl-k">||</span>h<span class="pl-k">!==</span>qb<span class="pl-k">||</span>m<span class="pl-k">!==</span>z<span class="pl-k">||</span>n<span class="pl-k">!==</span>Ec)<span class="pl-smi">a</span>.<span class="pl-en">blendFuncSeparate</span>(<span class="pl-smi">c</span>.<span class="pl-en">convert</span>(e),<span class="pl-smi">c</span>.<span class="pl-en">convert</span>(h),<span class="pl-smi">c</span>.<span class="pl-en">convert</span>(m),<span class="pl-smi">c</span>.<span class="pl-en">convert</span>(n)),<span class="pl-c1">B</span><span class="pl-k">=</span>e,qb<span class="pl-k">=</span>h,z<span class="pl-k">=</span>m,Ec<span class="pl-k">=</span>n}<span class="pl-c1">Q</span><span class="pl-k">=</span>b;sa<span class="pl-k">=</span>v}function l(b){G!==b&amp;&amp;(b?a.frontFace(a.CW):a.frontFace(a.CCW),G=b)}</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">m</span>(<span class="pl-smi">b</span>){<span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>(<span class="pl-en">f</span>(<span class="pl-smi">a</span>.<span class="pl-c1">CULL_FACE</span>),b<span class="pl-k">!==</span><span class="pl-c1">H</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">1</span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">cullFace</span>(<span class="pl-smi">a</span>.<span class="pl-c1">BACK</span>)<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">cullFace</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FRONT</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">cullFace</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FRONT_AND_BACK</span>)))<span class="pl-k">:</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">CULL_FACE</span>);<span class="pl-c1">H</span><span class="pl-k">=</span>b}function v(b,c,d){if(b){if(f(a.POLYGON_OFFSET_FILL),E!==c||K!==d)a.polygonOffset(c,d),E=c,K=d}else g(a.POLYGON_OFFSET_FILL)}function n(b){void 0===b&amp;&amp;(b=a.TEXTURE0+P-1);I!==b&amp;&amp;(a.activeTexture(b),I=b)}var t=new function(){var b=!1,c=new W,d=null,e=new W(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},setClear:function(b,</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line">d,f,g,h){<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">*=</span>g,d<span class="pl-k">*=</span>g,f<span class="pl-k">*=</span>g);<span class="pl-smi">c</span>.<span class="pl-c1">set</span>(b,d,f,g);<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-en">equals</span>(c)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">clearColor</span>(b,d,f,g),<span class="pl-smi">e</span>.<span class="pl-en">copy</span>(c))},<span class="pl-en">reset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;d<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">e</span>.<span class="pl-c1">set</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)}}},q<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-c1">null</span>,e<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span>{<span class="pl-en">setTest</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">?</span><span class="pl-en">f</span>(<span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_TEST</span>)<span class="pl-k">:</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_TEST</span>)},<span class="pl-en">setMask</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){c<span class="pl-k">===</span>d<span class="pl-k">||</span>b<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-en">depthMask</span>(d),c<span class="pl-k">=</span>d)},<span class="pl-en">setFunc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(d<span class="pl-k">!==</span>b){<span class="pl-k">if</span>(b)<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-c1">0</span>:<span class="pl-smi">a</span>.<span class="pl-en">depthFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">NEVER</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-smi">a</span>.<span class="pl-en">depthFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ALWAYS</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:<span class="pl-smi">a</span>.<span class="pl-en">depthFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">LESS</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span>:<span class="pl-smi">a</span>.<span class="pl-en">depthFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">LEQUAL</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span>:<span class="pl-smi">a</span>.<span class="pl-en">depthFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">EQUAL</span>);</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span>:<span class="pl-smi">a</span>.<span class="pl-en">depthFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">GEQUAL</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">6</span>:<span class="pl-smi">a</span>.<span class="pl-en">depthFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">GREATER</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">7</span>:<span class="pl-smi">a</span>.<span class="pl-en">depthFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">NOTEQUAL</span>);<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-smi">a</span>.<span class="pl-en">depthFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">LEQUAL</span>)}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-en">depthFunc</span>(<span class="pl-smi">a</span>.<span class="pl-c1">LEQUAL</span>);d<span class="pl-k">=</span>b}},<span class="pl-en">setLocked</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){b<span class="pl-k">=</span>a},<span class="pl-en">setClear</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){e<span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">clearDepth</span>(b),e<span class="pl-k">=</span>b)},<span class="pl-en">reset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;e<span class="pl-k">=</span>d<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-c1">null</span>}}},k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-c1">null</span>,d<span class="pl-k">=</span><span class="pl-c1">null</span>,e<span class="pl-k">=</span><span class="pl-c1">null</span>,h<span class="pl-k">=</span><span class="pl-c1">null</span>,l<span class="pl-k">=</span><span class="pl-c1">null</span>,m<span class="pl-k">=</span><span class="pl-c1">null</span>,n<span class="pl-k">=</span><span class="pl-c1">null</span>,v<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span>{<span class="pl-en">setTest</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">?</span><span class="pl-en">f</span>(<span class="pl-smi">a</span>.<span class="pl-c1">STENCIL_TEST</span>)<span class="pl-k">:</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">STENCIL_TEST</span>)},<span class="pl-en">setMask</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){c<span class="pl-k">===</span>d<span class="pl-k">||</span>b<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-en">stencilMask</span>(d),c<span class="pl-k">=</span>d)},<span class="pl-en">setFunc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>,<span class="pl-smi">f</span>){<span class="pl-k">if</span>(d<span class="pl-k">!==</span>b<span class="pl-k">||</span>e<span class="pl-k">!==</span>c<span class="pl-k">||</span>h<span class="pl-k">!==</span>f)<span class="pl-smi">a</span>.<span class="pl-en">stencilFunc</span>(b,c,f),d<span class="pl-k">=</span>b,e<span class="pl-k">=</span>c,h<span class="pl-k">=</span>f},<span class="pl-en">setOp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(l<span class="pl-k">!==</span>b<span class="pl-k">||</span>m<span class="pl-k">!==</span>c<span class="pl-k">||</span>n<span class="pl-k">!==</span>d)<span class="pl-smi">a</span>.<span class="pl-en">stencilOp</span>(b,c,d),l<span class="pl-k">=</span>b,m<span class="pl-k">=</span>c,n<span class="pl-k">=</span>d},<span class="pl-en">setLocked</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){b<span class="pl-k">=</span>a},<span class="pl-en">setClear</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){v<span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">clearStencil</span>(b),v<span class="pl-k">=</span>b)},<span class="pl-en">reset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;v<span class="pl-k">=</span>n<span class="pl-k">=</span>m<span class="pl-k">=</span>l<span class="pl-k">=</span>h<span class="pl-k">=</span>e<span class="pl-k">=</span>d<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-c1">null</span>}}},u<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">MAX_VERTEX_ATTRIBS</span>),p<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(u),w<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(u),x<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(u),<span class="pl-c1">A</span><span class="pl-k">=</span>{},<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">null</span>,qb<span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">U</span><span class="pl-k">=</span><span class="pl-c1">null</span>,z<span class="pl-k">=</span><span class="pl-c1">null</span>,Ec<span class="pl-k">=</span><span class="pl-c1">null</span>,sa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">MAX_COMBINED_TEXTURE_IMAGE_UNITS</span>),</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;u<span class="pl-k">=</span><span class="pl-c1">0</span>;u<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">VERSION</span>);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">u</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WebGL<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span>(u<span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>WebGL (<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span>)<span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(u)[<span class="pl-c1">1</span>]),<span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">&lt;=</span>u)<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">u</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OpenGL ES<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>OpenGL ES (<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span>)<span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(u)[<span class="pl-c1">1</span>]),<span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">&lt;=</span>u);<span class="pl-k">var</span> <span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">L</span><span class="pl-k">=</span>{},<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>,fa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>,<span class="pl-c1">V</span><span class="pl-k">=</span>{};<span class="pl-c1">V</span>[<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>]<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">1</span>);<span class="pl-c1">V</span>[<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span>]<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP_POSITIVE_X</span>,<span class="pl-c1">6</span>);<span class="pl-smi">t</span>.<span class="pl-en">setClear</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-smi">q</span>.<span class="pl-en">setClear</span>(<span class="pl-c1">1</span>);<span class="pl-smi">k</span>.<span class="pl-en">setClear</span>(<span class="pl-c1">0</span>);<span class="pl-en">f</span>(<span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_TEST</span>);<span class="pl-smi">q</span>.<span class="pl-en">setFunc</span>(<span class="pl-c1">3</span>);<span class="pl-en">l</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-en">m</span>(<span class="pl-c1">1</span>);<span class="pl-en">f</span>(<span class="pl-smi">a</span>.<span class="pl-c1">CULL_FACE</span>);<span class="pl-en">f</span>(<span class="pl-smi">a</span>.<span class="pl-c1">BLEND</span>);<span class="pl-en">h</span>(<span class="pl-c1">1</span>);<span class="pl-k">return</span>{buffers<span class="pl-k">:</span>{color<span class="pl-k">:</span>t,depth<span class="pl-k">:</span>q,</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line">stencil<span class="pl-k">:</span>k},<span class="pl-en">initAttributes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>b;a<span class="pl-k">++</span>)p[a]<span class="pl-k">=</span><span class="pl-c1">0</span>},<span class="pl-en">enableAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">e</span>(a,<span class="pl-c1">0</span>)},enableAttributeAndDivisor<span class="pl-k">:</span>e,<span class="pl-en">disableUnusedAttributes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">length</span>;b<span class="pl-k">!==</span>c;<span class="pl-k">++</span>b)w[b]<span class="pl-k">!==</span>p[b]<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">disableVertexAttribArray</span>(b),w[b]<span class="pl-k">=</span><span class="pl-c1">0</span>)},enable<span class="pl-k">:</span>f,disable<span class="pl-k">:</span>g,<span class="pl-en">getCompressedTextureFormats</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">C</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">C</span><span class="pl-k">=</span>[],<span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_pvrtc<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_s3tc<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_etc1<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_astc<span class="pl-pds">&quot;</span></span>)))<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">getParameter</span>(<span class="pl-smi">a</span>.<span class="pl-c1">COMPRESSED_TEXTURE_FORMATS</span>),d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)<span class="pl-c1">C</span>.<span class="pl-c1">push</span>(c[d]);<span class="pl-k">return</span> <span class="pl-c1">C</span>},<span class="pl-en">useProgram</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">O</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-en">useProgram</span>(b),<span class="pl-c1">O</span><span class="pl-k">=</span>b,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},setBlending<span class="pl-k">:</span>h,<span class="pl-en">setMaterial</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">2</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">side</span><span class="pl-k">?</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">CULL_FACE</span>)<span class="pl-k">:</span><span class="pl-en">f</span>(<span class="pl-smi">a</span>.<span class="pl-c1">CULL_FACE</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">side</span>;c<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-k">!</span>d);<span class="pl-en">l</span>(d);<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">blending</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">transparent</span><span class="pl-k">?</span><span class="pl-en">h</span>(<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-en">h</span>(<span class="pl-smi">b</span>.<span class="pl-smi">blending</span>,<span class="pl-smi">b</span>.<span class="pl-smi">blendEquation</span>,<span class="pl-smi">b</span>.<span class="pl-smi">blendSrc</span>,<span class="pl-smi">b</span>.<span class="pl-smi">blendDst</span>,<span class="pl-smi">b</span>.<span class="pl-smi">blendEquationAlpha</span>,<span class="pl-smi">b</span>.<span class="pl-smi">blendSrcAlpha</span>,<span class="pl-smi">b</span>.<span class="pl-smi">blendDstAlpha</span>,<span class="pl-smi">b</span>.<span class="pl-smi">premultipliedAlpha</span>);<span class="pl-smi">q</span>.<span class="pl-en">setFunc</span>(<span class="pl-smi">b</span>.<span class="pl-smi">depthFunc</span>);<span class="pl-smi">q</span>.<span class="pl-en">setTest</span>(<span class="pl-smi">b</span>.<span class="pl-smi">depthTest</span>);<span class="pl-smi">q</span>.<span class="pl-en">setMask</span>(<span class="pl-smi">b</span>.<span class="pl-smi">depthWrite</span>);</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">t</span>.<span class="pl-en">setMask</span>(<span class="pl-smi">b</span>.<span class="pl-smi">colorWrite</span>);<span class="pl-en">v</span>(<span class="pl-smi">b</span>.<span class="pl-smi">polygonOffset</span>,<span class="pl-smi">b</span>.<span class="pl-smi">polygonOffsetFactor</span>,<span class="pl-smi">b</span>.<span class="pl-smi">polygonOffsetUnits</span>)},setFlipSided<span class="pl-k">:</span>l,setCullFace<span class="pl-k">:</span>m,<span class="pl-en">setLineWidth</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">!==</span><span class="pl-c1">D</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">R</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">lineWidth</span>(b),<span class="pl-c1">D</span><span class="pl-k">=</span>b)},setPolygonOffset<span class="pl-k">:</span>v,<span class="pl-en">setScissorTest</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">?</span><span class="pl-en">f</span>(<span class="pl-smi">a</span>.<span class="pl-c1">SCISSOR_TEST</span>)<span class="pl-k">:</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">SCISSOR_TEST</span>)},activeTexture<span class="pl-k">:</span>n,<span class="pl-en">bindTexture</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">I</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>();<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">L</span>[<span class="pl-c1">I</span>];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>{type<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,texture<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>},<span class="pl-c1">L</span>[<span class="pl-c1">I</span>]<span class="pl-k">=</span>d);<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">type</span><span class="pl-k">!==</span>b<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-smi">texture</span><span class="pl-k">!==</span>c)<span class="pl-smi">a</span>.<span class="pl-en">bindTexture</span>(b,c<span class="pl-k">||</span><span class="pl-c1">V</span>[b]),<span class="pl-smi">d</span>.<span class="pl-c1">type</span><span class="pl-k">=</span>b,<span class="pl-smi">d</span>.<span class="pl-smi">texture</span><span class="pl-k">=</span>c},<span class="pl-en">compressedTexImage2D</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-smi">compressedTexImage2D</span>.<span class="pl-c1">apply</span>(a,</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>)}<span class="pl-k">catch</span>(<span class="pl-c1">N</span>){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLState:<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">N</span>)}},<span class="pl-en">texImage2D</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-smi">texImage2D</span>.<span class="pl-c1">apply</span>(a,<span class="pl-c1">arguments</span>)}<span class="pl-k">catch</span>(<span class="pl-c1">N</span>){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLState:<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">N</span>)}},<span class="pl-en">scissor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">J</span>.<span class="pl-en">equals</span>(b)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">scissor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-smi">b</span>.<span class="pl-c1">z</span>,<span class="pl-smi">b</span>.<span class="pl-smi">w</span>),<span class="pl-c1">J</span>.<span class="pl-en">copy</span>(b))},<span class="pl-en">viewport</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">fa</span>.<span class="pl-en">equals</span>(b)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">viewport</span>(<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-smi">b</span>.<span class="pl-c1">z</span>,<span class="pl-smi">b</span>.<span class="pl-smi">w</span>),<span class="pl-smi">fa</span>.<span class="pl-en">copy</span>(b))},<span class="pl-en">reset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">w</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-c1">1</span><span class="pl-k">===</span>w[b]<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">disableVertexAttribArray</span>(b),w[b]<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">A</span><span class="pl-k">=</span>{};<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">L</span><span class="pl-k">=</span>{};<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">t</span>.<span class="pl-c1">reset</span>();<span class="pl-smi">q</span>.<span class="pl-c1">reset</span>();<span class="pl-smi">k</span>.<span class="pl-c1">reset</span>()}}}function Mg(a,b,c,d,</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line">e,f,g){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">&gt;</span>b<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">&gt;</span>b){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> a){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: image in DataTexture is too big (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>).<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>}b<span class="pl-k">/=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElementNS</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">*</span>b);<span class="pl-smi">c</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">*</span>b);<span class="pl-smi">c</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>).<span class="pl-en">drawImage</span>(a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">height</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-c1">width</span>,<span class="pl-smi">c</span>.<span class="pl-c1">height</span>);<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: image is too big (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>). Resized to <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">width</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">height</span>,a);<span class="pl-k">return</span> c}<span class="pl-k">return</span> a}function l(a){return J.isPowerOfTwo(a.width)&amp;&amp;J.isPowerOfTwo(a.height)}function m(a,b){return a.generateMipmaps&amp;&amp;b&amp;&amp;1003!==a.minFilter&amp;&amp;1006!==a.minFilter}function v(b,c,e,f){a.generateMipmap(b);d.get(c).__maxMipLevel=Math.log(Math.max(e,f))*Math.LOG2E}function n(b){return 1003===b||1004===b||1005===b?a.NEAREST:a.LINEAR}function t(b){b=b.target;b.removeEventListener(&quot;dispose&quot;,t);a:{var c=d.get(b);if(b.image&amp;&amp;c.__image__webglTextureCube)a.deleteTexture(c.__image__webglTextureCube);</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">__webglInit</span>)<span class="pl-k">break</span> a;<span class="pl-smi">a</span>.<span class="pl-en">deleteTexture</span>(<span class="pl-smi">c</span>.<span class="pl-smi">__webglTexture</span>)}<span class="pl-smi">d</span>.<span class="pl-c1">remove</span>(b)}<span class="pl-smi">b</span>.<span class="pl-smi">isVideoTexture</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-c1">A</span>[<span class="pl-smi">b</span>.<span class="pl-c1">id</span>];<span class="pl-smi">g</span>.<span class="pl-smi">memory</span>.<span class="pl-smi">textures</span><span class="pl-k">--</span>}function q(b){b=b.target;b.removeEventListener(&quot;dispose&quot;,q);var c=d.get(b),e=d.get(b.texture);if(b){void 0!==e.__webglTexture&amp;&amp;a.deleteTexture(e.__webglTexture);b.depthTexture&amp;&amp;b.depthTexture.dispose();if(b.isWebGLRenderTargetCube)for(e=0;6&gt;e;e++)a.deleteFramebuffer(c.__webglFramebuffer[e]),c.__webglDepthbuffer&amp;&amp;a.deleteRenderbuffer(c.__webglDepthbuffer[e]);else a.deleteFramebuffer(c.__webglFramebuffer),</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">__webglDepthbuffer</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">deleteRenderbuffer</span>(<span class="pl-smi">c</span>.<span class="pl-smi">__webglDepthbuffer</span>);<span class="pl-smi">d</span>.<span class="pl-c1">remove</span>(<span class="pl-smi">b</span>.<span class="pl-smi">texture</span>);<span class="pl-smi">d</span>.<span class="pl-c1">remove</span>(b)}<span class="pl-smi">g</span>.<span class="pl-smi">memory</span>.<span class="pl-smi">textures</span><span class="pl-k">--</span>}function k(b,n){var q=d.get(b);if(b.isVideoTexture){var k=b.id,r=g.render.frame;A[k]!==r&amp;&amp;(A[k]=r,b.update())}if(0&lt;b.version&amp;&amp;q.__version!==b.version)if(k=b.image,void 0===k)console.warn(&quot;THREE.WebGLRenderer: Texture marked for update but image is undefined&quot;,b);else if(!1===k.complete)console.warn(&quot;THREE.WebGLRenderer: Texture marked for update but image is incomplete&quot;,b);else{void 0===</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">q</span>.<span class="pl-smi">__webglInit</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">q</span>.<span class="pl-smi">__webglInit</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dispose<span class="pl-pds">&quot;</span></span>,t),<span class="pl-smi">q</span>.<span class="pl-smi">__webglTexture</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">createTexture</span>(),<span class="pl-smi">g</span>.<span class="pl-smi">memory</span>.<span class="pl-smi">textures</span><span class="pl-k">++</span>);<span class="pl-smi">c</span>.<span class="pl-en">activeTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE0</span><span class="pl-k">+</span>n);<span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">q</span>.<span class="pl-smi">__webglTexture</span>);<span class="pl-smi">a</span>.<span class="pl-en">pixelStorei</span>(<span class="pl-smi">a</span>.<span class="pl-c1">UNPACK_FLIP_Y_WEBGL</span>,<span class="pl-smi">b</span>.<span class="pl-smi">flipY</span>);<span class="pl-smi">a</span>.<span class="pl-en">pixelStorei</span>(<span class="pl-smi">a</span>.<span class="pl-c1">UNPACK_PREMULTIPLY_ALPHA_WEBGL</span>,<span class="pl-smi">b</span>.<span class="pl-smi">premultiplyAlpha</span>);<span class="pl-smi">a</span>.<span class="pl-en">pixelStorei</span>(<span class="pl-smi">a</span>.<span class="pl-c1">UNPACK_ALIGNMENT</span>,<span class="pl-smi">b</span>.<span class="pl-smi">unpackAlignment</span>);n<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-smi">b</span>.<span class="pl-smi">image</span>,<span class="pl-smi">e</span>.<span class="pl-smi">maxTextureSize</span>);(<span class="pl-c1">1001</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">wrapS</span><span class="pl-k">||</span><span class="pl-c1">1001</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">wrapT</span><span class="pl-k">||</span><span class="pl-c1">1003</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">minFilter</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1006</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">minFilter</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-en">l</span>(n)<span class="pl-k">&amp;&amp;</span>(n <span class="pl-k">instanceof</span> <span class="pl-c1">HTMLImageElement</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line">n <span class="pl-k">instanceof</span> <span class="pl-c1">HTMLCanvasElement</span><span class="pl-k">||</span>n <span class="pl-k">instanceof</span> <span class="pl-c1">ImageBitmap</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">C</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElementNS</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>)),<span class="pl-c1">C</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">floorPowerOfTwo</span>(<span class="pl-smi">n</span>.<span class="pl-c1">width</span>),<span class="pl-c1">C</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">floorPowerOfTwo</span>(<span class="pl-smi">n</span>.<span class="pl-c1">height</span>),<span class="pl-c1">C</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>).<span class="pl-en">drawImage</span>(n,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">C</span>.<span class="pl-c1">width</span>,<span class="pl-c1">C</span>.<span class="pl-c1">height</span>),<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: image is not power of two (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>). Resized to <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">C</span>.<span class="pl-c1">height</span>,n),n<span class="pl-k">=</span><span class="pl-c1">C</span>);k<span class="pl-k">=</span><span class="pl-en">l</span>(n);r<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">convert</span>(<span class="pl-smi">b</span>.<span class="pl-smi">format</span>);<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">convert</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span>);<span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,b,k);<span class="pl-k">var</span> <span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">mipmaps</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">isDepthTexture</span>){<span class="pl-k">var</span> y<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_COMPONENT</span>;<span class="pl-k">if</span>(<span class="pl-c1">1015</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>x)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Float Depth Texture only supported in WebGL2.0<span class="pl-pds">&quot;</span></span>);y<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_COMPONENT32F</span>}<span class="pl-k">else</span> x<span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_COMPONENT16</span>);<span class="pl-c1">1026</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">format</span><span class="pl-k">&amp;&amp;</span>y<span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_COMPONENT</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1012</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1014</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-c1">1012</span>,p<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">convert</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span>));<span class="pl-c1">1027</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">format</span><span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_STENCIL</span>,<span class="pl-c1">1020</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-c1">1020</span>,p<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">convert</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span>)));<span class="pl-smi">c</span>.<span class="pl-en">texImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">0</span>,y,<span class="pl-smi">n</span>.<span class="pl-c1">width</span>,<span class="pl-smi">n</span>.<span class="pl-c1">height</span>,<span class="pl-c1">0</span>,r,p,<span class="pl-c1">null</span>)}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">isDataTexture</span>)<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">O</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>k){<span class="pl-k">for</span>(<span class="pl-k">var</span> <span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-c1">0</span>,w<span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">length</span>;<span class="pl-c1">Q</span><span class="pl-k">&lt;</span>w;<span class="pl-c1">Q</span><span class="pl-k">++</span>)y<span class="pl-k">=</span><span class="pl-c1">O</span>[<span class="pl-c1">Q</span>],<span class="pl-smi">c</span>.<span class="pl-en">texImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">Q</span>,r,<span class="pl-smi">y</span>.<span class="pl-c1">width</span>,<span class="pl-smi">y</span>.<span class="pl-c1">height</span>,<span class="pl-c1">0</span>,r,p,<span class="pl-smi">y</span>.<span class="pl-c1">data</span>);<span class="pl-smi">b</span>.<span class="pl-smi">generateMipmaps</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">q</span>.<span class="pl-smi">__maxMipLevel</span><span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> <span class="pl-smi">c</span>.<span class="pl-en">texImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">0</span>,r,<span class="pl-smi">n</span>.<span class="pl-c1">width</span>,<span class="pl-smi">n</span>.<span class="pl-c1">height</span>,<span class="pl-c1">0</span>,r,p,<span class="pl-smi">n</span>.<span class="pl-c1">data</span>),<span class="pl-smi">q</span>.<span class="pl-smi">__maxMipLevel</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">isCompressedTexture</span>){<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(w<span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">length</span>;<span class="pl-c1">Q</span><span class="pl-k">&lt;</span>w;<span class="pl-c1">Q</span><span class="pl-k">++</span>)y<span class="pl-k">=</span><span class="pl-c1">O</span>[<span class="pl-c1">Q</span>],<span class="pl-c1">1023</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">format</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1022</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">format</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-en">getCompressedTextureFormats</span>().<span class="pl-c1">indexOf</span>(r)<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-en">compressedTexImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">Q</span>,r,<span class="pl-smi">y</span>.<span class="pl-c1">width</span>,<span class="pl-smi">y</span>.<span class="pl-c1">height</span>,<span class="pl-c1">0</span>,<span class="pl-smi">y</span>.<span class="pl-c1">data</span>)<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-en">texImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">Q</span>,r,<span class="pl-smi">y</span>.<span class="pl-c1">width</span>,<span class="pl-smi">y</span>.<span class="pl-c1">height</span>,<span class="pl-c1">0</span>,r,p,<span class="pl-smi">y</span>.<span class="pl-c1">data</span>);<span class="pl-smi">q</span>.<span class="pl-smi">__maxMipLevel</span><span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">O</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>k){<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(w<span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">length</span>;<span class="pl-c1">Q</span><span class="pl-k">&lt;</span>w;<span class="pl-c1">Q</span><span class="pl-k">++</span>)y<span class="pl-k">=</span><span class="pl-c1">O</span>[<span class="pl-c1">Q</span>],<span class="pl-smi">c</span>.<span class="pl-en">texImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">Q</span>,r,r,p,y);<span class="pl-smi">b</span>.<span class="pl-smi">generateMipmaps</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">q</span>.<span class="pl-smi">__maxMipLevel</span><span class="pl-k">=</span><span class="pl-c1">O</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> <span class="pl-smi">c</span>.<span class="pl-en">texImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">0</span>,r,r,p,n),<span class="pl-smi">q</span>.<span class="pl-smi">__maxMipLevel</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-en">m</span>(b,k)<span class="pl-k">&amp;&amp;</span><span class="pl-en">v</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,b,<span class="pl-smi">n</span>.<span class="pl-c1">width</span>,</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">n</span>.<span class="pl-c1">height</span>);<span class="pl-smi">q</span>.<span class="pl-smi">__version</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">version</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">onUpdate</span>)<span class="pl-smi">b</span>.<span class="pl-en">onUpdate</span>(b);<span class="pl-k">return</span>}<span class="pl-smi">c</span>.<span class="pl-en">activeTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE0</span><span class="pl-k">+</span>n);<span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">q</span>.<span class="pl-smi">__webglTexture</span>)}function u(c,g,h){h?(a.texParameteri(c,a.TEXTURE_WRAP_S,f.convert(g.wrapS)),a.texParameteri(c,a.TEXTURE_WRAP_T,f.convert(g.wrapT)),a.texParameteri(c,a.TEXTURE_MAG_FILTER,f.convert(g.magFilter)),a.texParameteri(c,a.TEXTURE_MIN_FILTER,f.convert(g.minFilter))):(a.texParameteri(c,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(c,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1001</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">wrapS</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1001</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">wrapT</span><span class="pl-k">||</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.<span class="pl-pds">&quot;</span></span>,g),<span class="pl-smi">a</span>.<span class="pl-en">texParameteri</span>(c,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_MAG_FILTER</span>,<span class="pl-en">n</span>(<span class="pl-smi">g</span>.<span class="pl-smi">magFilter</span>)),<span class="pl-smi">a</span>.<span class="pl-en">texParameteri</span>(c,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_MIN_FILTER</span>,<span class="pl-en">n</span>(<span class="pl-smi">g</span>.<span class="pl-smi">minFilter</span>)),<span class="pl-c1">1003</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">minFilter</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1006</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">minFilter</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.<span class="pl-pds">&quot;</span></span>,g));<span class="pl-k">!</span>(h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EXT_texture_filter_anisotropic<span class="pl-pds">&quot;</span></span>))<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1015</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_texture_float_linear<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-c1">1016</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_texture_half_float_linear<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||!</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-smi">anisotropy</span><span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-c1">get</span>(g).<span class="pl-smi">__currentAnisotropy</span>)<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-en">texParameterf</span>(c,<span class="pl-smi">h</span>.<span class="pl-c1">TEXTURE_MAX_ANISOTROPY_EXT</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">g</span>.<span class="pl-smi">anisotropy</span>,<span class="pl-smi">e</span>.<span class="pl-en">getMaxAnisotropy</span>())),<span class="pl-smi">d</span>.<span class="pl-c1">get</span>(g).<span class="pl-smi">__currentAnisotropy</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">anisotropy</span>)}function p(b,e,g,h){var l=f.convert(e.texture.format),m=f.convert(e.texture.type);c.texImage2D(h,0,l,e.width,e.height,0,l,m,null);a.bindFramebuffer(a.FRAMEBUFFER,b);a.framebufferTexture2D(a.FRAMEBUFFER,</td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line">g,h,<span class="pl-smi">d</span>.<span class="pl-c1">get</span>(<span class="pl-smi">e</span>.<span class="pl-smi">texture</span>).<span class="pl-smi">__webglTexture</span>,<span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-en">bindFramebuffer</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FRAMEBUFFER</span>,<span class="pl-c1">null</span>)}function w(b,c){a.bindRenderbuffer(a.RENDERBUFFER,b);c.depthBuffer&amp;&amp;!c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,c.width,c.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,b)):c.depthBuffer&amp;&amp;c.stencilBuffer?(a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,c.width,c.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line">b))<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">renderbufferStorage</span>(<span class="pl-smi">a</span>.<span class="pl-c1">RENDERBUFFER</span>,<span class="pl-smi">a</span>.<span class="pl-c1">RGBA4</span>,<span class="pl-smi">c</span>.<span class="pl-c1">width</span>,<span class="pl-smi">c</span>.<span class="pl-c1">height</span>);<span class="pl-smi">a</span>.<span class="pl-en">bindRenderbuffer</span>(<span class="pl-smi">a</span>.<span class="pl-c1">RENDERBUFFER</span>,<span class="pl-c1">null</span>)}<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> WebGL2RenderingContext<span class="pl-k">&amp;&amp;</span>a <span class="pl-k">instanceof</span> WebGL2RenderingContext,<span class="pl-c1">A</span><span class="pl-k">=</span>{},<span class="pl-c1">C</span>;<span class="pl-c1">this</span>.<span class="pl-smi">setTexture2D</span><span class="pl-k">=</span>k;<span class="pl-c1">this</span>.<span class="pl-en">setTextureCube</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">get</span>(b);<span class="pl-k">if</span>(<span class="pl-c1">6</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">image</span>.<span class="pl-c1">length</span>)<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">version</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-smi">__version</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">version</span>){<span class="pl-smi">q</span>.<span class="pl-smi">__image__webglTextureCube</span><span class="pl-k">||</span>(<span class="pl-smi">b</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dispose<span class="pl-pds">&quot;</span></span>,t),<span class="pl-smi">q</span>.<span class="pl-smi">__image__webglTextureCube</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">createTexture</span>(),<span class="pl-smi">g</span>.<span class="pl-smi">memory</span>.<span class="pl-smi">textures</span><span class="pl-k">++</span>);<span class="pl-smi">c</span>.<span class="pl-en">activeTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE0</span><span class="pl-k">+</span>n);<span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span>,</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">q</span>.<span class="pl-smi">__image__webglTextureCube</span>);<span class="pl-smi">a</span>.<span class="pl-en">pixelStorei</span>(<span class="pl-smi">a</span>.<span class="pl-c1">UNPACK_FLIP_Y_WEBGL</span>,<span class="pl-smi">b</span>.<span class="pl-smi">flipY</span>);n<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">isCompressedTexture</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">image</span>[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">image</span>[<span class="pl-c1">0</span>].<span class="pl-smi">isDataTexture</span>,r<span class="pl-k">=</span>[],p<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">&gt;</span>p;p<span class="pl-k">++</span>)r[p]<span class="pl-k">=</span>n<span class="pl-k">||</span>k<span class="pl-k">?</span>k<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">image</span>[p].<span class="pl-smi">image</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">image</span>[p]<span class="pl-k">:</span><span class="pl-en">h</span>(<span class="pl-smi">b</span>.<span class="pl-smi">image</span>[p],<span class="pl-smi">e</span>.<span class="pl-smi">maxCubemapSize</span>);<span class="pl-k">var</span> x<span class="pl-k">=</span>r[<span class="pl-c1">0</span>],y<span class="pl-k">=</span><span class="pl-en">l</span>(x),<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">convert</span>(<span class="pl-smi">b</span>.<span class="pl-smi">format</span>),w<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">convert</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span>);<span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span>,b,y);<span class="pl-k">for</span>(p<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">&gt;</span>p;p<span class="pl-k">++</span>)<span class="pl-k">if</span>(n)<span class="pl-k">for</span>(<span class="pl-k">var</span> <span class="pl-c1">O</span>,<span class="pl-c1">Q</span><span class="pl-k">=</span>r[p].<span class="pl-smi">mipmaps</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">Q</span>.<span class="pl-c1">length</span>;<span class="pl-c1">A</span><span class="pl-k">&lt;</span><span class="pl-c1">B</span>;<span class="pl-c1">A</span><span class="pl-k">++</span>)<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-c1">Q</span>[<span class="pl-c1">A</span>],<span class="pl-c1">1023</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">format</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1022</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">format</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-en">getCompressedTextureFormats</span>().<span class="pl-c1">indexOf</span>(<span class="pl-c1">C</span>)<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-en">compressedTexImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line">p,<span class="pl-c1">A</span>,<span class="pl-c1">C</span>,<span class="pl-c1">O</span>.<span class="pl-c1">width</span>,<span class="pl-c1">O</span>.<span class="pl-c1">height</span>,<span class="pl-c1">0</span>,<span class="pl-c1">O</span>.<span class="pl-c1">data</span>)<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-en">texImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="pl-k">+</span>p,<span class="pl-c1">A</span>,<span class="pl-c1">C</span>,<span class="pl-c1">O</span>.<span class="pl-c1">width</span>,<span class="pl-c1">O</span>.<span class="pl-c1">height</span>,<span class="pl-c1">0</span>,<span class="pl-c1">C</span>,w,<span class="pl-c1">O</span>.<span class="pl-c1">data</span>);<span class="pl-k">else</span> k<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-en">texImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="pl-k">+</span>p,<span class="pl-c1">0</span>,<span class="pl-c1">C</span>,r[p].<span class="pl-c1">width</span>,r[p].<span class="pl-c1">height</span>,<span class="pl-c1">0</span>,<span class="pl-c1">C</span>,w,r[p].<span class="pl-c1">data</span>)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-en">texImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="pl-k">+</span>p,<span class="pl-c1">0</span>,<span class="pl-c1">C</span>,<span class="pl-c1">C</span>,w,r[p]);<span class="pl-smi">q</span>.<span class="pl-smi">__maxMipLevel</span><span class="pl-k">=</span>n<span class="pl-k">?</span><span class="pl-c1">Q</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-en">m</span>(b,y)<span class="pl-k">&amp;&amp;</span><span class="pl-en">v</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span>,b,<span class="pl-smi">x</span>.<span class="pl-c1">width</span>,<span class="pl-smi">x</span>.<span class="pl-c1">height</span>);<span class="pl-smi">q</span>.<span class="pl-smi">__version</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">version</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">onUpdate</span>)<span class="pl-smi">b</span>.<span class="pl-en">onUpdate</span>(b)}<span class="pl-k">else</span> <span class="pl-smi">c</span>.<span class="pl-en">activeTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE0</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line">n),<span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span>,<span class="pl-smi">q</span>.<span class="pl-smi">__image__webglTextureCube</span>)};<span class="pl-c1">this</span>.<span class="pl-en">setTextureCubeDynamic</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">e</span>){<span class="pl-smi">c</span>.<span class="pl-en">activeTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE0</span><span class="pl-k">+</span>e);<span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span>,<span class="pl-smi">d</span>.<span class="pl-c1">get</span>(b).<span class="pl-smi">__webglTexture</span>)};<span class="pl-c1">this</span>.<span class="pl-en">setupRenderTarget</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">get</span>(b),f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">get</span>(<span class="pl-smi">b</span>.<span class="pl-smi">texture</span>);<span class="pl-smi">b</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>dispose<span class="pl-pds">&quot;</span></span>,q);<span class="pl-smi">f</span>.<span class="pl-smi">__webglTexture</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">createTexture</span>();<span class="pl-smi">g</span>.<span class="pl-smi">memory</span>.<span class="pl-smi">textures</span><span class="pl-k">++</span>;<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">isWebGLRenderTargetCube</span>,n<span class="pl-k">=</span><span class="pl-en">l</span>(b);<span class="pl-k">if</span>(h){<span class="pl-smi">e</span>.<span class="pl-smi">__webglFramebuffer</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">&gt;</span>t;t<span class="pl-k">++</span>)<span class="pl-smi">e</span>.<span class="pl-smi">__webglFramebuffer</span>[t]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">createFramebuffer</span>()}<span class="pl-k">else</span> <span class="pl-smi">e</span>.<span class="pl-smi">__webglFramebuffer</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">createFramebuffer</span>();<span class="pl-k">if</span>(h){<span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span>,<span class="pl-smi">f</span>.<span class="pl-smi">__webglTexture</span>);<span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span>,<span class="pl-smi">b</span>.<span class="pl-smi">texture</span>,n);<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">&gt;</span>t;t<span class="pl-k">++</span>)<span class="pl-en">p</span>(<span class="pl-smi">e</span>.<span class="pl-smi">__webglFramebuffer</span>[t],b,<span class="pl-smi">a</span>.<span class="pl-c1">COLOR_ATTACHMENT0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="pl-k">+</span>t);<span class="pl-en">m</span>(<span class="pl-smi">b</span>.<span class="pl-smi">texture</span>,n)<span class="pl-k">&amp;&amp;</span><span class="pl-en">v</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span>,<span class="pl-smi">b</span>.<span class="pl-smi">texture</span>,<span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">b</span>.<span class="pl-c1">height</span>);<span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span>,<span class="pl-c1">null</span>)}<span class="pl-k">else</span> <span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">f</span>.<span class="pl-smi">__webglTexture</span>),<span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">b</span>.<span class="pl-smi">texture</span>,n),<span class="pl-en">p</span>(<span class="pl-smi">e</span>.<span class="pl-smi">__webglFramebuffer</span>,b,<span class="pl-smi">a</span>.<span class="pl-c1">COLOR_ATTACHMENT0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>),<span class="pl-en">m</span>(<span class="pl-smi">b</span>.<span class="pl-smi">texture</span>,n)<span class="pl-k">&amp;&amp;</span><span class="pl-en">v</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">b</span>.<span class="pl-smi">texture</span>,<span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">b</span>.<span class="pl-c1">height</span>),</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">null</span>);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">depthBuffer</span>){e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">get</span>(b);f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">isWebGLRenderTargetCube</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>){<span class="pl-k">if</span>(f)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>target.depthTexture not supported in Cube render targets<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">isWebGLRenderTargetCube</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Depth Texture with cube render targets is not supported<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-en">bindFramebuffer</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FRAMEBUFFER</span>,<span class="pl-smi">e</span>.<span class="pl-smi">__webglFramebuffer</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span><span class="pl-k">||!</span><span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>.<span class="pl-smi">isDepthTexture</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>renderTarget.depthTexture must be an instance of THREE.DepthTexture<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-c1">get</span>(<span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>).<span class="pl-smi">__webglTexture</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>.<span class="pl-smi">image</span>.<span class="pl-c1">width</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">width</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>.<span class="pl-smi">image</span>.<span class="pl-c1">height</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">height</span><span class="pl-k">||</span>(<span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>.<span class="pl-smi">image</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>.<span class="pl-smi">image</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">height</span>,<span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-en">k</span>(<span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>,<span class="pl-c1">0</span>);e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">get</span>(<span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>).<span class="pl-smi">__webglTexture</span>;<span class="pl-k">if</span>(<span class="pl-c1">1026</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>.<span class="pl-smi">format</span>)<span class="pl-smi">a</span>.<span class="pl-en">framebufferTexture2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FRAMEBUFFER</span>,<span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_ATTACHMENT</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,e,<span class="pl-c1">0</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">1027</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">depthTexture</span>.<span class="pl-smi">format</span>)<span class="pl-smi">a</span>.<span class="pl-en">framebufferTexture2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FRAMEBUFFER</span>,<span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_STENCIL_ATTACHMENT</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,e,<span class="pl-c1">0</span>);<span class="pl-k">else</span> <span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unknown depthTexture format<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line">}<span class="pl-k">else</span> <span class="pl-k">if</span>(f)<span class="pl-k">for</span>(<span class="pl-smi">e</span>.<span class="pl-smi">__webglDepthbuffer</span><span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">&gt;</span>f;f<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-en">bindFramebuffer</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FRAMEBUFFER</span>,<span class="pl-smi">e</span>.<span class="pl-smi">__webglFramebuffer</span>[f]),<span class="pl-smi">e</span>.<span class="pl-smi">__webglDepthbuffer</span>[f]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">createRenderbuffer</span>(),<span class="pl-en">w</span>(<span class="pl-smi">e</span>.<span class="pl-smi">__webglDepthbuffer</span>[f],b);<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-en">bindFramebuffer</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FRAMEBUFFER</span>,<span class="pl-smi">e</span>.<span class="pl-smi">__webglFramebuffer</span>),<span class="pl-smi">e</span>.<span class="pl-smi">__webglDepthbuffer</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">createRenderbuffer</span>(),<span class="pl-en">w</span>(<span class="pl-smi">e</span>.<span class="pl-smi">__webglDepthbuffer</span>,b);<span class="pl-smi">a</span>.<span class="pl-en">bindFramebuffer</span>(<span class="pl-smi">a</span>.<span class="pl-c1">FRAMEBUFFER</span>,<span class="pl-c1">null</span>)}};<span class="pl-c1">this</span>.<span class="pl-en">updateRenderTargetMipmap</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">texture</span>,f<span class="pl-k">=</span><span class="pl-en">l</span>(b);<span class="pl-k">if</span>(<span class="pl-en">m</span>(e,f)){f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">isWebGLRenderTargetCube</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_CUBE_MAP</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">get</span>(e).<span class="pl-smi">__webglTexture</span>;</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(f,g);<span class="pl-en">v</span>(f,e,<span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">b</span>.<span class="pl-c1">height</span>);<span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(f,<span class="pl-c1">null</span>)}}}function af(a,b){return{convert:function(c){if(1E3===c)return a.REPEAT;if(1001===c)return a.CLAMP_TO_EDGE;if(1002===c)return a.MIRRORED_REPEAT;if(1003===c)return a.NEAREST;if(1004===c)return a.NEAREST_MIPMAP_NEAREST;if(1005===c)return a.NEAREST_MIPMAP_LINEAR;if(1006===c)return a.LINEAR;if(1007===c)return a.LINEAR_MIPMAP_NEAREST;if(1008===c)return a.LINEAR_MIPMAP_LINEAR;if(1009===c)return a.UNSIGNED_BYTE;if(1017===c)return a.UNSIGNED_SHORT_4_4_4_4;</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">1018</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">UNSIGNED_SHORT_5_5_5_1</span>;<span class="pl-k">if</span>(<span class="pl-c1">1019</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">UNSIGNED_SHORT_5_6_5</span>;<span class="pl-k">if</span>(<span class="pl-c1">1010</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">BYTE</span>;<span class="pl-k">if</span>(<span class="pl-c1">1011</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">SHORT</span>;<span class="pl-k">if</span>(<span class="pl-c1">1012</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">UNSIGNED_SHORT</span>;<span class="pl-k">if</span>(<span class="pl-c1">1013</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">INT</span>;<span class="pl-k">if</span>(<span class="pl-c1">1014</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">UNSIGNED_INT</span>;<span class="pl-k">if</span>(<span class="pl-c1">1015</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">FLOAT</span>;<span class="pl-k">if</span>(<span class="pl-c1">1016</span><span class="pl-k">===</span>c){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_texture_half_float<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>d)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">HALF_FLOAT_OES</span>}<span class="pl-k">if</span>(<span class="pl-c1">1021</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">ALPHA</span>;<span class="pl-k">if</span>(<span class="pl-c1">1022</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">RGB</span>;<span class="pl-k">if</span>(<span class="pl-c1">1023</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">RGBA</span>;<span class="pl-k">if</span>(<span class="pl-c1">1024</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">LUMINANCE</span>;<span class="pl-k">if</span>(<span class="pl-c1">1025</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">LUMINANCE_ALPHA</span>;<span class="pl-k">if</span>(<span class="pl-c1">1026</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line">c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_COMPONENT</span>;<span class="pl-k">if</span>(<span class="pl-c1">1027</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">DEPTH_STENCIL</span>;<span class="pl-k">if</span>(<span class="pl-c1">100</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">FUNC_ADD</span>;<span class="pl-k">if</span>(<span class="pl-c1">101</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">FUNC_SUBTRACT</span>;<span class="pl-k">if</span>(<span class="pl-c1">102</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">FUNC_REVERSE_SUBTRACT</span>;<span class="pl-k">if</span>(<span class="pl-c1">200</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">ZERO</span>;<span class="pl-k">if</span>(<span class="pl-c1">201</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">ONE</span>;<span class="pl-k">if</span>(<span class="pl-c1">202</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">SRC_COLOR</span>;<span class="pl-k">if</span>(<span class="pl-c1">203</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">ONE_MINUS_SRC_COLOR</span>;<span class="pl-k">if</span>(<span class="pl-c1">204</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">SRC_ALPHA</span>;<span class="pl-k">if</span>(<span class="pl-c1">205</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">ONE_MINUS_SRC_ALPHA</span>;<span class="pl-k">if</span>(<span class="pl-c1">206</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">DST_ALPHA</span>;<span class="pl-k">if</span>(<span class="pl-c1">207</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">ONE_MINUS_DST_ALPHA</span>;<span class="pl-k">if</span>(<span class="pl-c1">208</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">DST_COLOR</span>;<span class="pl-k">if</span>(<span class="pl-c1">209</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">ONE_MINUS_DST_COLOR</span>;<span class="pl-k">if</span>(<span class="pl-c1">210</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line">c)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">SRC_ALPHA_SATURATE</span>;<span class="pl-k">if</span>(<span class="pl-c1">33776</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">33777</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">33778</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">33779</span><span class="pl-k">===</span>c)<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_s3tc<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">null</span><span class="pl-k">!==</span>d){<span class="pl-k">if</span>(<span class="pl-c1">33776</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">COMPRESSED_RGB_S3TC_DXT1_EXT</span>;<span class="pl-k">if</span>(<span class="pl-c1">33777</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">COMPRESSED_RGBA_S3TC_DXT1_EXT</span>;<span class="pl-k">if</span>(<span class="pl-c1">33778</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">COMPRESSED_RGBA_S3TC_DXT3_EXT</span>;<span class="pl-k">if</span>(<span class="pl-c1">33779</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">COMPRESSED_RGBA_S3TC_DXT5_EXT</span>}<span class="pl-k">if</span>(<span class="pl-c1">35840</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">35841</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">35842</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">35843</span><span class="pl-k">===</span>c)<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_pvrtc<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">null</span><span class="pl-k">!==</span>d){<span class="pl-k">if</span>(<span class="pl-c1">35840</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">COMPRESSED_RGB_PVRTC_4BPPV1_IMG</span>;<span class="pl-k">if</span>(<span class="pl-c1">35841</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line">c)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">COMPRESSED_RGB_PVRTC_2BPPV1_IMG</span>;<span class="pl-k">if</span>(<span class="pl-c1">35842</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">COMPRESSED_RGBA_PVRTC_4BPPV1_IMG</span>;<span class="pl-k">if</span>(<span class="pl-c1">35843</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">COMPRESSED_RGBA_PVRTC_2BPPV1_IMG</span>}<span class="pl-k">if</span>(<span class="pl-c1">36196</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_etc1<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">null</span><span class="pl-k">!==</span>d))<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">COMPRESSED_RGB_ETC1_WEBGL</span>;<span class="pl-k">if</span>(<span class="pl-c1">37808</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37809</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37810</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37811</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37812</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37813</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37814</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37815</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37816</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37817</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37818</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37819</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37820</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">37821</span><span class="pl-k">===</span>c)<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_astc<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">null</span><span class="pl-k">!==</span>d)<span class="pl-k">return</span> c;<span class="pl-k">if</span>(<span class="pl-c1">103</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">104</span><span class="pl-k">===</span>c)<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EXT_blend_minmax<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span>d){<span class="pl-k">if</span>(<span class="pl-c1">103</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">MIN_EXT</span>;<span class="pl-k">if</span>(<span class="pl-c1">104</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">MAX_EXT</span>}<span class="pl-k">return</span> <span class="pl-c1">1020</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_depth_texture<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">null</span><span class="pl-k">!==</span>d)<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">UNSIGNED_INT_24_8_WEBGL</span><span class="pl-k">:</span><span class="pl-c1">0</span>}}}function Ub(){H.call(this);this.type=&quot;Group&quot;}function Z(a,b,c,d){Ra.call(this);this.type=&quot;PerspectiveCamera&quot;;this.fov=void 0!==a?a:50;this.zoom=1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.focus=10;this.aspect=void 0!==b?b:1;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}function Hc(a){Z.call(this);</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">cameras</span><span class="pl-k">=</span>a<span class="pl-k">||</span>[]}function bf(a){function b(){return null!==e&amp;&amp;!0===e.isPresenting}function c(){if(b()){var c=e.getEyeParameters(&quot;left&quot;),f=c.renderWidth;c=c.renderHeight;w=a.getPixelRatio();y=a.getSize();a.setDrawingBufferSize(2*f,c,1);A.start()}else d.enabled&amp;&amp;(a.setDrawingBufferSize(y.width,y.height,w),A.stop())}var d=this,e=null,f=null,g=null,h=[],l=new R,m=new R;&quot;undefined&quot;!==typeof window&amp;&amp;&quot;VRFrameData&quot;in window&amp;&amp;(f=new window.VRFrameData,window.addEventListener(&quot;vrdisplaypresentchange&quot;,c,!1));</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>,n<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>,t<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,q<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Z</span>;<span class="pl-smi">q</span>.<span class="pl-smi">bounds</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">1</span>);<span class="pl-smi">q</span>.<span class="pl-c1">layers</span>.<span class="pl-en">enable</span>(<span class="pl-c1">1</span>);<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Z</span>;<span class="pl-smi">k</span>.<span class="pl-smi">bounds</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>(<span class="pl-c1">.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">1</span>);<span class="pl-smi">k</span>.<span class="pl-c1">layers</span>.<span class="pl-en">enable</span>(<span class="pl-c1">2</span>);<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Hc</span>([q,k]);<span class="pl-smi">u</span>.<span class="pl-c1">layers</span>.<span class="pl-en">enable</span>(<span class="pl-c1">1</span>);<span class="pl-smi">u</span>.<span class="pl-c1">layers</span>.<span class="pl-en">enable</span>(<span class="pl-c1">2</span>);<span class="pl-k">var</span> y,w,x<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">userHeight</span><span class="pl-k">=</span><span class="pl-c1">1.6</span>;<span class="pl-c1">this</span>.<span class="pl-en">getController</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>h[a];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ub</span>,<span class="pl-smi">b</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,h[a]<span class="pl-k">=</span>b);<span class="pl-k">return</span> b};<span class="pl-c1">this</span>.<span class="pl-en">getDevice</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> e};<span class="pl-c1">this</span>.<span class="pl-en">setDevice</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>a);<span class="pl-c1">A</span>.<span class="pl-en">setContext</span>(a)};<span class="pl-c1">this</span>.<span class="pl-en">setPoseTarget</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line">(g<span class="pl-k">=</span>a)};<span class="pl-c1">this</span>.<span class="pl-en">getCamera</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">position</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-smi">userHeight</span>,<span class="pl-c1">0</span>),a;<span class="pl-smi">e</span>.<span class="pl-smi">depthNear</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">near</span>;<span class="pl-smi">e</span>.<span class="pl-smi">depthFar</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">far</span>;<span class="pl-smi">e</span>.<span class="pl-en">getFrameData</span>(f);<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">stageParameters</span>;b<span class="pl-k">?</span><span class="pl-smi">l</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">sittingToStandingTransform</span>)<span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-en">makeTranslation</span>(<span class="pl-c1">0</span>,<span class="pl-smi">d</span>.<span class="pl-smi">userHeight</span>,<span class="pl-c1">0</span>);b<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">pose</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!==</span>g<span class="pl-k">?</span>g<span class="pl-k">:</span>a;<span class="pl-smi">c</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">copy</span>(l);<span class="pl-smi">c</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">decompose</span>(<span class="pl-smi">c</span>.<span class="pl-smi">position</span>,<span class="pl-smi">c</span>.<span class="pl-smi">quaternion</span>,<span class="pl-smi">c</span>.<span class="pl-smi">scale</span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">orientation</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">orientation</span>),<span class="pl-smi">c</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">multiply</span>(n));<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">position</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-en">setFromRotationMatrix</span>(l),<span class="pl-smi">t</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>),<span class="pl-smi">t</span>.<span class="pl-en">applyQuaternion</span>(n),</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">position</span>.<span class="pl-c1">add</span>(t));<span class="pl-smi">c</span>.<span class="pl-en">updateMatrixWorld</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">isPresenting</span>)<span class="pl-k">return</span> a;<span class="pl-smi">q</span>.<span class="pl-smi">near</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">near</span>;<span class="pl-smi">k</span>.<span class="pl-smi">near</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">near</span>;<span class="pl-smi">q</span>.<span class="pl-smi">far</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">far</span>;<span class="pl-smi">k</span>.<span class="pl-smi">far</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">far</span>;<span class="pl-smi">u</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-smi">u</span>.<span class="pl-smi">matrixWorldInverse</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorldInverse</span>);<span class="pl-smi">q</span>.<span class="pl-smi">matrixWorldInverse</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">f</span>.<span class="pl-smi">leftViewMatrix</span>);<span class="pl-smi">k</span>.<span class="pl-smi">matrixWorldInverse</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">f</span>.<span class="pl-smi">rightViewMatrix</span>);<span class="pl-smi">m</span>.<span class="pl-en">getInverse</span>(l);<span class="pl-smi">q</span>.<span class="pl-smi">matrixWorldInverse</span>.<span class="pl-en">multiply</span>(m);<span class="pl-smi">k</span>.<span class="pl-smi">matrixWorldInverse</span>.<span class="pl-en">multiply</span>(m);a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">parent</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">v</span>.<span class="pl-en">getInverse</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>),<span class="pl-smi">q</span>.<span class="pl-smi">matrixWorldInverse</span>.<span class="pl-en">multiply</span>(v),<span class="pl-smi">k</span>.<span class="pl-smi">matrixWorldInverse</span>.<span class="pl-en">multiply</span>(v));</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">q</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">getInverse</span>(<span class="pl-smi">q</span>.<span class="pl-smi">matrixWorldInverse</span>);<span class="pl-smi">k</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">getInverse</span>(<span class="pl-smi">k</span>.<span class="pl-smi">matrixWorldInverse</span>);<span class="pl-smi">q</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">f</span>.<span class="pl-smi">leftProjectionMatrix</span>);<span class="pl-smi">k</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">f</span>.<span class="pl-smi">rightProjectionMatrix</span>);<span class="pl-smi">u</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">copy</span>(<span class="pl-smi">q</span>.<span class="pl-smi">projectionMatrix</span>);a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">getLayers</span>();<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">leftBounds</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">4</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">leftBounds</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-smi">bounds</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">leftBounds</span>),<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">rightBounds</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">4</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">rightBounds</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-smi">bounds</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">rightBounds</span>));a<span class="pl-k">:</span><span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>;a<span class="pl-k">++</span>){b<span class="pl-k">=</span>h[a];b<span class="pl-k">:</span>{c<span class="pl-k">=</span>a;<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">navigator</span>.<span class="pl-smi">getGamepads</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">navigator</span>.<span class="pl-en">getGamepads</span>(),p<span class="pl-k">=</span><span class="pl-c1">0</span>,y<span class="pl-k">=</span><span class="pl-c1">0</span>,w<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>;p<span class="pl-k">&lt;</span>w;p<span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">C</span><span class="pl-k">=</span>r[p];<span class="pl-k">if</span>(<span class="pl-c1">C</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Daydream Controller<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">C</span>.<span class="pl-c1">id</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>Gear VR Controller<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">C</span>.<span class="pl-c1">id</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>Oculus Go Controller<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">C</span>.<span class="pl-c1">id</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>OpenVR Gamepad<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">C</span>.<span class="pl-c1">id</span><span class="pl-k">||</span><span class="pl-c1">C</span>.<span class="pl-c1">id</span>.<span class="pl-en">startsWith</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Oculus Touch<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-c1">C</span>.<span class="pl-c1">id</span>.<span class="pl-en">startsWith</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Spatial Controller<span class="pl-pds">&quot;</span></span>))){<span class="pl-k">if</span>(y<span class="pl-k">===</span>c){c<span class="pl-k">=</span><span class="pl-c1">C</span>;<span class="pl-k">break</span> b}y<span class="pl-k">++</span>}}c<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>}<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">pose</span>){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">pose</span>)<span class="pl-k">break</span> a;r<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">pose</span>;<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">r</span>.<span class="pl-smi">hasPosition</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">position</span>.<span class="pl-c1">set</span>(<span class="pl-c1">.2</span>,<span class="pl-k">-</span><span class="pl-c1">.6</span>,<span class="pl-k">-</span><span class="pl-c1">.05</span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-smi">position</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">position</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">r</span>.<span class="pl-smi">position</span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-smi">orientation</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">r</span>.<span class="pl-smi">orientation</span>);</td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">compose</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>,<span class="pl-smi">b</span>.<span class="pl-smi">quaternion</span>,<span class="pl-smi">b</span>.<span class="pl-smi">scale</span>);<span class="pl-smi">b</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">premultiply</span>(l);<span class="pl-smi">b</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">decompose</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>,<span class="pl-smi">b</span>.<span class="pl-smi">quaternion</span>,<span class="pl-smi">b</span>.<span class="pl-smi">scale</span>);<span class="pl-smi">b</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;r<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Daydream Controller<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">id</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>;x<span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">buttons</span>[r].<span class="pl-smi">pressed</span><span class="pl-k">&amp;&amp;</span>((x<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">buttons</span>[r].<span class="pl-smi">pressed</span>)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>selectstart<span class="pl-pds">&quot;</span></span>})<span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>selectend<span class="pl-pds">&quot;</span></span>}),<span class="pl-smi">b</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>})))}<span class="pl-k">else</span> <span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> u};<span class="pl-c1">this</span>.<span class="pl-en">getStandingMatrix</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> l};<span class="pl-c1">this</span>.<span class="pl-smi">isPresenting</span><span class="pl-k">=</span>b;<span class="pl-k">var</span> <span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Vd</span>;<span class="pl-c1">this</span>.<span class="pl-en">setAnimationLoop</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">A</span>.<span class="pl-en">setAnimationLoop</span>(a)};</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">submitFrame</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">b</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">submitFrame</span>()};<span class="pl-c1">this</span>.<span class="pl-en">dispose</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">window</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>vrdisplaypresentchange<span class="pl-pds">&quot;</span></span>,c)}}function Ng(a){function b(){return null!==h&amp;&amp;null!==l}function c(a){var b=v[n.indexOf(a.inputSource)];b&amp;&amp;b.dispatchEvent({type:a.type})}function d(){a.setFramebuffer(null);p.stop()}function e(a,b){null===b?a.matrixWorld.copy(a.matrix):a.matrixWorld.multiplyMatrices(b.matrixWorld,a.matrix);a.matrixWorldInverse.getInverse(a.matrixWorld)}var f=</td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">context</span>,g<span class="pl-k">=</span><span class="pl-c1">null</span>,h<span class="pl-k">=</span><span class="pl-c1">null</span>,l<span class="pl-k">=</span><span class="pl-c1">null</span>,m<span class="pl-k">=</span><span class="pl-c1">null</span>,v<span class="pl-k">=</span>[],n<span class="pl-k">=</span>[],t<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Z</span>;<span class="pl-smi">t</span>.<span class="pl-c1">layers</span>.<span class="pl-en">enable</span>(<span class="pl-c1">1</span>);<span class="pl-smi">t</span>.<span class="pl-smi">viewport</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>;<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Z</span>;<span class="pl-smi">q</span>.<span class="pl-c1">layers</span>.<span class="pl-en">enable</span>(<span class="pl-c1">2</span>);<span class="pl-smi">q</span>.<span class="pl-smi">viewport</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>;<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Hc</span>([t,q]);<span class="pl-smi">k</span>.<span class="pl-c1">layers</span>.<span class="pl-en">enable</span>(<span class="pl-c1">1</span>);<span class="pl-smi">k</span>.<span class="pl-c1">layers</span>.<span class="pl-en">enable</span>(<span class="pl-c1">2</span>);<span class="pl-c1">this</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">getController</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>v[a];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ub</span>,<span class="pl-smi">b</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">b</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,v[a]<span class="pl-k">=</span>b);<span class="pl-k">return</span> b};<span class="pl-c1">this</span>.<span class="pl-en">getDevice</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> g};<span class="pl-c1">this</span>.<span class="pl-en">setDevice</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>a);<span class="pl-smi">f</span>.<span class="pl-en">setCompatibleXRDevice</span>(a)};<span class="pl-c1">this</span>.<span class="pl-en">setSession</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">e</span>){h<span class="pl-k">=</span>b;<span class="pl-c1">null</span><span class="pl-k">!==</span>h<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>select<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line">c),<span class="pl-smi">h</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selectstart<span class="pl-pds">&quot;</span></span>,c),<span class="pl-smi">h</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selectend<span class="pl-pds">&quot;</span></span>,c),<span class="pl-smi">h</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>,d),<span class="pl-smi">h</span>.<span class="pl-smi">baseLayer</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">XRWebGLLayer</span>(h,f),<span class="pl-smi">h</span>.<span class="pl-en">requestFrameOfReference</span>(<span class="pl-smi">e</span>.<span class="pl-smi">frameOfReferenceType</span>).<span class="pl-c1">then</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){l<span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-en">setFramebuffer</span>(<span class="pl-smi">h</span>.<span class="pl-smi">baseLayer</span>.<span class="pl-smi">framebuffer</span>);<span class="pl-smi">p</span>.<span class="pl-en">setContext</span>(h);<span class="pl-smi">p</span>.<span class="pl-c1">start</span>()}),n<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">getInputSources</span>(),<span class="pl-smi">h</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>inputsourceschange<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){n<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">getInputSources</span>();<span class="pl-en">console</span>.<span class="pl-c1">log</span>(n)}))};<span class="pl-c1">this</span>.<span class="pl-en">getCamera</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-en">b</span>()){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">parent</span>,d<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">cameras</span>;<span class="pl-en">e</span>(k,c);<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)<span class="pl-en">e</span>(d[f],c);<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">copy</span>(<span class="pl-smi">k</span>.<span class="pl-smi">matrixWorld</span>);</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">children</span>;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>c;f<span class="pl-k">++</span>)a[f].<span class="pl-en">updateMatrixWorld</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> k}<span class="pl-k">return</span> a};<span class="pl-c1">this</span>.<span class="pl-smi">isPresenting</span><span class="pl-k">=</span>b;<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-c1">null</span>,p<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Vd</span>;<span class="pl-smi">p</span>.<span class="pl-en">setAnimationLoop</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getDevicePose</span>(l);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>m)<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">baseLayer</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">views</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d[e],g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getViewport</span>(f),t<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-en">getViewMatrix</span>(f),q<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">cameras</span>[e];<span class="pl-smi">q</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">fromArray</span>(t).<span class="pl-en">getInverse</span>(<span class="pl-smi">q</span>.<span class="pl-smi">matrix</span>);<span class="pl-smi">q</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">f</span>.<span class="pl-smi">projectionMatrix</span>);<span class="pl-smi">q</span>.<span class="pl-smi">viewport</span>.<span class="pl-c1">set</span>(<span class="pl-smi">g</span>.<span class="pl-c1">x</span>,<span class="pl-smi">g</span>.<span class="pl-c1">y</span>,<span class="pl-smi">g</span>.<span class="pl-c1">width</span>,<span class="pl-smi">g</span>.<span class="pl-c1">height</span>);<span class="pl-c1">0</span><span class="pl-k">===</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">copy</span>(<span class="pl-smi">q</span>.<span class="pl-smi">matrix</span>),<span class="pl-smi">k</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">copy</span>(<span class="pl-smi">q</span>.<span class="pl-smi">projectionMatrix</span>))}<span class="pl-k">for</span>(e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>){c<span class="pl-k">=</span>v[e];<span class="pl-k">if</span>(d<span class="pl-k">=</span>n[e])<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getInputPose</span>(d,l),<span class="pl-c1">null</span><span class="pl-k">!==</span>d){<span class="pl-smi">c</span>.<span class="pl-smi">matrix</span>.<span class="pl-c1">elements</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">pointerMatrix</span>;<span class="pl-smi">c</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">decompose</span>(<span class="pl-smi">c</span>.<span class="pl-smi">position</span>,<span class="pl-smi">c</span>.<span class="pl-smi">rotation</span>,<span class="pl-smi">c</span>.<span class="pl-smi">scale</span>);<span class="pl-smi">c</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">continue</span>}<span class="pl-smi">c</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}u<span class="pl-k">&amp;&amp;</span><span class="pl-en">u</span>(a)});<span class="pl-c1">this</span>.<span class="pl-en">setAnimationLoop</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){u<span class="pl-k">=</span>a};<span class="pl-c1">this</span>.<span class="pl-en">dispose</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-c1">this</span>.<span class="pl-en">getStandingMatrix</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebXRManager: getStandingMatrix() is no longer needed.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">THREE.Matrix4</span>};<span class="pl-c1">this</span>.<span class="pl-en">submitFrame</span><span class="pl-k">=</span><span class="pl-k">function</span>(){}}function ae(a){function b(){ma=new Pf(F);ma.get(&quot;WEBGL_depth_texture&quot;);</td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_texture_float<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_texture_float_linear<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_texture_half_float<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_texture_half_float_linear<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_standard_derivatives<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_element_index_uint<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ANGLE_instanced_arrays<span class="pl-pds">&quot;</span></span>);ia<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">af</span>(<span class="pl-c1">F</span>,ma);Sa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Nf</span>(<span class="pl-c1">F</span>,ma,a);aa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Lg</span>(<span class="pl-c1">F</span>,ma,ia);<span class="pl-smi">aa</span>.<span class="pl-en">scissor</span>(<span class="pl-c1">S</span>.<span class="pl-en">copy</span>(ba).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">V</span>));<span class="pl-smi">aa</span>.<span class="pl-en">viewport</span>(<span class="pl-smi">db</span>.<span class="pl-en">copy</span>(<span class="pl-c1">N</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">V</span>));hb<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Sf</span>(<span class="pl-c1">F</span>);Aa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ag</span>;<span class="pl-c1">Z</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Mg</span>(<span class="pl-c1">F</span>,ma,aa,Aa,Sa,ia,hb);ja<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Gf</span>(<span class="pl-c1">F</span>);qa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Qf</span>(<span class="pl-c1">F</span>,ja,hb);pa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Vf</span>(qa,hb);va<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uf</span>(<span class="pl-c1">F</span>);na<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">zg</span>(<span class="pl-c1">U</span>,ma,</td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line">Sa);ra<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Eg</span>;oa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Jg</span>;la<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Lf</span>(<span class="pl-c1">U</span>,aa,pa,<span class="pl-c1">O</span>);wa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Mf</span>(<span class="pl-c1">F</span>,ma,hb);xa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Rf</span>(<span class="pl-c1">F</span>,ma,hb);ya<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Kg</span>(<span class="pl-c1">U</span>,<span class="pl-c1">F</span>,aa,<span class="pl-c1">Z</span>,Sa);<span class="pl-smi">hb</span>.<span class="pl-smi">programs</span><span class="pl-k">=</span><span class="pl-smi">na</span>.<span class="pl-smi">programs</span>;<span class="pl-c1">U</span>.<span class="pl-smi">context</span><span class="pl-k">=</span><span class="pl-c1">F</span>;<span class="pl-c1">U</span>.<span class="pl-smi">capabilities</span><span class="pl-k">=</span>Sa;<span class="pl-c1">U</span>.<span class="pl-smi">extensions</span><span class="pl-k">=</span>ma;<span class="pl-c1">U</span>.<span class="pl-smi">properties</span><span class="pl-k">=</span>Aa;<span class="pl-c1">U</span>.<span class="pl-smi">renderLists</span><span class="pl-k">=</span>ra;<span class="pl-c1">U</span>.<span class="pl-smi">state</span><span class="pl-k">=</span>aa;<span class="pl-c1">U</span>.<span class="pl-smi">info</span><span class="pl-k">=</span>hb}function c(a){a.preventDefault();console.log(&quot;THREE.WebGLRenderer: Context Lost.&quot;);G=!0}function d(){console.log(&quot;THREE.WebGLRenderer: Context Restored.&quot;);G=!1;b()}function e(a){a=a.target;a.removeEventListener(&quot;dispose&quot;,e);f(a);Aa.remove(a)}function f(a){var b=Aa.get(a).program;</td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">program</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">na</span>.<span class="pl-en">releaseProgram</span>(b)}function g(a,b,c){a.render(function(a){U.renderBufferImmediate(a,b,c)})}function h(a,b,c){if(!1!==a.visible){if(a.layers.test(b.layers))if(a.isLight)z.pushLight(a),a.castShadow&amp;&amp;z.pushShadow(a);else if(a.isSprite)a.frustumCulled&amp;&amp;!da.intersectsSprite(a)||z.pushSprite(a);else if(a.isImmediateRenderObject)c&amp;&amp;Tb.setFromMatrixPosition(a.matrixWorld).applyMatrix4(ud),B.push(a,null,a.material,Tb.z,null);else if(a.isMesh||a.isLine||a.isPoints)if(a.isSkinnedMesh&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">skeleton</span>.<span class="pl-en">update</span>(),<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">frustumCulled</span><span class="pl-k">||</span><span class="pl-smi">da</span>.<span class="pl-en">intersectsObject</span>(a)){c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">Tb</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>).<span class="pl-en">applyMatrix4</span>(ud);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">pa</span>.<span class="pl-en">update</span>(a),e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">material</span>;<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(e))<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">groups</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>l;g<span class="pl-k">++</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span>f[g],n<span class="pl-k">=</span>e[<span class="pl-smi">m</span>.<span class="pl-smi">materialIndex</span>];n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">B</span>.<span class="pl-c1">push</span>(a,d,n,<span class="pl-smi">Tb</span>.<span class="pl-c1">z</span>,m)}<span class="pl-k">else</span> <span class="pl-smi">e</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">B</span>.<span class="pl-c1">push</span>(a,d,e,<span class="pl-smi">Tb</span>.<span class="pl-c1">z</span>,<span class="pl-c1">null</span>)}a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">children</span>;g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>l;g<span class="pl-k">++</span>)<span class="pl-en">h</span>(a[g],b,c)}}function l(a,b,c,d){for(var e=0,f=a.length;e&lt;f;e++){var g=a[e],h=g.object,l=g.geometry,n=void 0===d?g.material:d;g=g.group;if(c.isArrayCamera){Pb=</td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line">c;<span class="pl-k">for</span>(<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">cameras</span>,t<span class="pl-k">=</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span>;t<span class="pl-k">&lt;</span>q;t<span class="pl-k">++</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>v[t];<span class="pl-k">if</span>(<span class="pl-smi">h</span>.<span class="pl-c1">layers</span>.<span class="pl-c1">test</span>(<span class="pl-smi">k</span>.<span class="pl-c1">layers</span>)){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>viewport<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> k)<span class="pl-smi">aa</span>.<span class="pl-en">viewport</span>(<span class="pl-smi">db</span>.<span class="pl-en">copy</span>(<span class="pl-smi">k</span>.<span class="pl-smi">viewport</span>));<span class="pl-k">else</span>{<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">bounds</span>;<span class="pl-smi">aa</span>.<span class="pl-en">viewport</span>(<span class="pl-smi">db</span>.<span class="pl-c1">set</span>(<span class="pl-smi">r</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">Y</span>,<span class="pl-smi">r</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>fa,<span class="pl-smi">r</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-c1">Y</span>,<span class="pl-smi">r</span>.<span class="pl-smi">w</span><span class="pl-k">*</span>fa).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">V</span>))}<span class="pl-en">m</span>(h,b,k,l,n,g)}}}<span class="pl-k">else</span> Pb<span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-en">m</span>(h,b,c,l,n,g)}}function m(a,b,c,d,e,f){a.onBeforeRender(U,b,c,d,e,f);z=oa.get(b,Pb||c);a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld);a.normalMatrix.getNormalMatrix(a.modelViewMatrix);if(a.isImmediateRenderObject){var h=a.isMesh&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">determinant</span>();<span class="pl-smi">aa</span>.<span class="pl-en">setMaterial</span>(e,h);h<span class="pl-k">=</span><span class="pl-en">n</span>(c,<span class="pl-smi">b</span>.<span class="pl-smi">fog</span>,e,a);<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-en">g</span>(a,h,e)}<span class="pl-k">else</span> <span class="pl-c1">U</span>.<span class="pl-en">renderBufferDirect</span>(c,<span class="pl-smi">b</span>.<span class="pl-smi">fog</span>,d,e,a,f);<span class="pl-smi">a</span>.<span class="pl-en">onAfterRender</span>(<span class="pl-c1">U</span>,b,c,d,e,f);z<span class="pl-k">=</span><span class="pl-smi">oa</span>.<span class="pl-c1">get</span>(b,Pb<span class="pl-k">||</span>c)}function v(a,b,c){var d=Aa.get(a),g=z.state.lights;c=na.getParameters(a,g.state,z.state.shadowsArray,b,X.numPlanes,X.numIntersection,c);var h=na.getProgramCode(a,c),l=d.program,m=!0;if(void 0===l)a.addEventListener(&quot;dispose&quot;,e);else if(l.code!==h)f(a);else{if(d.lightsHash!==g.state.hash)Aa.update(a,&quot;lightsHash&quot;,g.state.hash);else if(void 0!==</td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">shaderID</span>)<span class="pl-k">return</span>;m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}m<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">shaderID</span><span class="pl-k">?</span>(l<span class="pl-k">=</span>tb[<span class="pl-smi">c</span>.<span class="pl-smi">shaderID</span>],<span class="pl-smi">d</span>.<span class="pl-smi">shader</span><span class="pl-k">=</span>{name<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>,uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">clone</span>(<span class="pl-smi">l</span>.<span class="pl-smi">uniforms</span>),vertexShader<span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-smi">vertexShader</span>,fragmentShader<span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-smi">fragmentShader</span>})<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">shader</span><span class="pl-k">=</span>{name<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>,uniforms<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">uniforms</span>,vertexShader<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexShader</span>,fragmentShader<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">fragmentShader</span>},<span class="pl-smi">a</span>.<span class="pl-en">onBeforeCompile</span>(<span class="pl-smi">d</span>.<span class="pl-smi">shader</span>,<span class="pl-c1">U</span>),l<span class="pl-k">=</span><span class="pl-smi">na</span>.<span class="pl-en">acquireProgram</span>(a,<span class="pl-smi">d</span>.<span class="pl-smi">shader</span>,c,h),<span class="pl-smi">d</span>.<span class="pl-smi">program</span><span class="pl-k">=</span>l,<span class="pl-smi">a</span>.<span class="pl-smi">program</span><span class="pl-k">=</span>l);c<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-en">getAttributes</span>();<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>)<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">numSupportedMorphTargets</span><span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-c1">U</span>.<span class="pl-smi">maxMorphTargets</span>;h<span class="pl-k">++</span>)<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c[<span class="pl-s"><span class="pl-pds">&quot;</span>morphTarget<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">numSupportedMorphTargets</span><span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">morphNormals</span>)<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">numSupportedMorphNormals</span><span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-c1">U</span>.<span class="pl-smi">maxMorphNormals</span>;h<span class="pl-k">++</span>)<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c[<span class="pl-s"><span class="pl-pds">&quot;</span>morphNormal<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">numSupportedMorphNormals</span><span class="pl-k">++</span>;c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">shader</span>.<span class="pl-smi">uniforms</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">isShaderMaterial</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-smi">isRawShaderMaterial</span><span class="pl-k">||!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">clipping</span>)<span class="pl-smi">d</span>.<span class="pl-smi">numClippingPlanes</span><span class="pl-k">=</span><span class="pl-c1">X</span>.<span class="pl-smi">numPlanes</span>,<span class="pl-smi">d</span>.<span class="pl-smi">numIntersection</span><span class="pl-k">=</span><span class="pl-c1">X</span>.<span class="pl-smi">numIntersection</span>,<span class="pl-smi">c</span>.<span class="pl-smi">clippingPlanes</span><span class="pl-k">=</span><span class="pl-c1">X</span>.<span class="pl-smi">uniform</span>;<span class="pl-smi">d</span>.<span class="pl-smi">fog</span><span class="pl-k">=</span>b;<span class="pl-smi">d</span>.<span class="pl-smi">lightsHash</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-c1">hash</span>;<span class="pl-smi">a</span>.<span class="pl-smi">lights</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">ambientLightColor</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">ambient</span>,<span class="pl-smi">c</span>.<span class="pl-smi">directionalLights</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">directional</span>,<span class="pl-smi">c</span>.<span class="pl-smi">spotLights</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">spot</span>,<span class="pl-smi">c</span>.<span class="pl-smi">rectAreaLights</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">rectArea</span>,</td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">pointLights</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">point</span>,<span class="pl-smi">c</span>.<span class="pl-smi">hemisphereLights</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">hemi</span>,<span class="pl-smi">c</span>.<span class="pl-smi">directionalShadowMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">directionalShadowMap</span>,<span class="pl-smi">c</span>.<span class="pl-smi">directionalShadowMatrix</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">directionalShadowMatrix</span>,<span class="pl-smi">c</span>.<span class="pl-smi">spotShadowMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">spotShadowMap</span>,<span class="pl-smi">c</span>.<span class="pl-smi">spotShadowMatrix</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">spotShadowMatrix</span>,<span class="pl-smi">c</span>.<span class="pl-smi">pointShadowMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">pointShadowMap</span>,<span class="pl-smi">c</span>.<span class="pl-smi">pointShadowMatrix</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">state</span>.<span class="pl-smi">pointShadowMatrix</span>);a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">program</span>.<span class="pl-en">getUniforms</span>();a<span class="pl-k">=</span><span class="pl-smi">eb</span>.<span class="pl-en">seqWithValue</span>(<span class="pl-smi">a</span>.<span class="pl-smi">seq</span>,c);<span class="pl-smi">d</span>.<span class="pl-smi">uniformsList</span><span class="pl-k">=</span>a}function n(a,b,c,d){$d=0;var e=Aa.get(c),f=z.state.lights;</td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line">ca<span class="pl-k">&amp;&amp;</span>(ha<span class="pl-k">||</span>a<span class="pl-k">!==</span><span class="pl-c1">L</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">X</span>.<span class="pl-en">setState</span>(<span class="pl-smi">c</span>.<span class="pl-smi">clippingPlanes</span>,<span class="pl-smi">c</span>.<span class="pl-smi">clipIntersection</span>,<span class="pl-smi">c</span>.<span class="pl-smi">clipShadows</span>,a,e,a<span class="pl-k">===</span><span class="pl-c1">L</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">id</span><span class="pl-k">===</span><span class="pl-c1">P</span>);<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">program</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">fog</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">fog</span><span class="pl-k">!==</span>b<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">lights</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">lightsHash</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">state</span>.<span class="pl-c1">hash</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">numClippingPlanes</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">numClippingPlanes</span><span class="pl-k">===</span><span class="pl-c1">X</span>.<span class="pl-smi">numPlanes</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">numIntersection</span><span class="pl-k">===</span><span class="pl-c1">X</span>.<span class="pl-smi">numIntersection</span><span class="pl-k">||</span>(<span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>));<span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">v</span>(c,b,d),<span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">program</span>;<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">getUniforms</span>(),n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">shader</span>.<span class="pl-smi">uniforms</span>;<span class="pl-smi">aa</span>.<span class="pl-en">useProgram</span>(<span class="pl-smi">f</span>.<span class="pl-smi">program</span>)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line">(l<span class="pl-k">=</span>h<span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">c</span>.<span class="pl-c1">id</span><span class="pl-k">!==</span><span class="pl-c1">P</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">id</span>,h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(g<span class="pl-k">||</span>a<span class="pl-k">!==</span><span class="pl-c1">L</span>){<span class="pl-smi">m</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">F</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>projectionMatrix<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">projectionMatrix</span>);<span class="pl-smi">Sa</span>.<span class="pl-smi">logarithmicDepthBuffer</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">F</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>logDepthBufFC<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">2</span><span class="pl-k">/</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">log</span>(<span class="pl-smi">a</span>.<span class="pl-smi">far</span><span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">LN2</span>));<span class="pl-c1">L</span><span class="pl-k">!==</span>(Pb<span class="pl-k">||</span>a)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">L</span><span class="pl-k">=</span>Pb<span class="pl-k">||</span>a,l<span class="pl-k">=</span>h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">isShaderMaterial</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshPhongMaterial</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshStandardMaterial</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">envMap</span>)g<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">map</span>.<span class="pl-smi">cameraPosition</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">F</span>,<span class="pl-smi">Tb</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>));(<span class="pl-smi">c</span>.<span class="pl-smi">isMeshPhongMaterial</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshLambertMaterial</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshBasicMaterial</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshStandardMaterial</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">isShaderMaterial</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">skinning</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">F</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>viewMatrix<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorldInverse</span>)}<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">skinning</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-en">setOptional</span>(<span class="pl-c1">F</span>,d,<span class="pl-s"><span class="pl-pds">&quot;</span>bindMatrix<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">m</span>.<span class="pl-en">setOptional</span>(<span class="pl-c1">F</span>,d,<span class="pl-s"><span class="pl-pds">&quot;</span>bindMatrixInverse<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">skeleton</span>))<span class="pl-k">if</span>(g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">bones</span>,<span class="pl-smi">Sa</span>.<span class="pl-smi">floatVertexTextures</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">boneTexture</span>){g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>);g<span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">ceilPowerOfTwo</span>(g);g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(g,<span class="pl-c1">4</span>);<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(g<span class="pl-k">*</span>g<span class="pl-k">*</span><span class="pl-c1">4</span>);<span class="pl-smi">r</span>.<span class="pl-c1">set</span>(<span class="pl-smi">a</span>.<span class="pl-smi">boneMatrices</span>);<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">lb</span>(r,g,g,<span class="pl-c1">1023</span>,<span class="pl-c1">1015</span>);<span class="pl-smi">u</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">boneMatrices</span><span class="pl-k">=</span>r;<span class="pl-smi">a</span>.<span class="pl-smi">boneTexture</span><span class="pl-k">=</span>u;<span class="pl-smi">a</span>.<span class="pl-smi">boneTextureSize</span><span class="pl-k">=</span>g}<span class="pl-smi">m</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">F</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>boneTexture<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-smi">boneTexture</span>);<span class="pl-smi">m</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">F</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>boneTextureSize<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">boneTextureSize</span>)}<span class="pl-k">else</span> <span class="pl-smi">m</span>.<span class="pl-en">setOptional</span>(<span class="pl-c1">F</span>,a,<span class="pl-s"><span class="pl-pds">&quot;</span>boneMatrices<span class="pl-pds">&quot;</span></span>);h<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">m</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">F</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>toneMappingExposure<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">U</span>.<span class="pl-smi">toneMappingExposure</span>),<span class="pl-smi">m</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">F</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>toneMappingWhitePoint<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">U</span>.<span class="pl-smi">toneMappingWhitePoint</span>),<span class="pl-smi">c</span>.<span class="pl-smi">lights</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>l,<span class="pl-smi">n</span>.<span class="pl-smi">ambientLightColor</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span>h,<span class="pl-smi">n</span>.<span class="pl-smi">directionalLights</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span>h,<span class="pl-smi">n</span>.<span class="pl-smi">pointLights</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span>h,<span class="pl-smi">n</span>.<span class="pl-smi">spotLights</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span>h,<span class="pl-smi">n</span>.<span class="pl-smi">rectAreaLights</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span>h,<span class="pl-smi">n</span>.<span class="pl-smi">hemisphereLights</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span>h),b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">fog</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">fogColor</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">color</span>,<span class="pl-smi">b</span>.<span class="pl-smi">isFog</span><span class="pl-k">?</span>(<span class="pl-smi">n</span>.<span class="pl-smi">fogNear</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">near</span>,<span class="pl-smi">n</span>.<span class="pl-smi">fogFar</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">far</span>)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">isFogExp2</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">fogDensity</span>.<span class="pl-c1">value</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">density</span>)),<span class="pl-smi">c</span>.<span class="pl-smi">isMeshBasicMaterial</span><span class="pl-k">?</span><span class="pl-en">t</span>(n,c)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshLambertMaterial</span><span class="pl-k">?</span>(<span class="pl-en">t</span>(n,c),<span class="pl-smi">c</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">emissiveMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">emissiveMap</span>))<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshPhongMaterial</span><span class="pl-k">?</span>(<span class="pl-en">t</span>(n,c),<span class="pl-smi">c</span>.<span class="pl-smi">isMeshToonMaterial</span><span class="pl-k">?</span>(<span class="pl-en">q</span>(n,c),<span class="pl-smi">c</span>.<span class="pl-smi">gradientMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">gradientMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">gradientMap</span>))<span class="pl-k">:</span><span class="pl-en">q</span>(n,c))<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshStandardMaterial</span><span class="pl-k">?</span>(<span class="pl-en">t</span>(n,c),<span class="pl-smi">c</span>.<span class="pl-smi">isMeshPhysicalMaterial</span><span class="pl-k">?</span>(<span class="pl-en">k</span>(n,c),<span class="pl-smi">n</span>.<span class="pl-smi">reflectivity</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">reflectivity</span>,<span class="pl-smi">n</span>.<span class="pl-smi">clearCoat</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">clearCoat</span>,<span class="pl-smi">n</span>.<span class="pl-smi">clearCoatRoughness</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">clearCoatRoughness</span>)<span class="pl-k">:</span><span class="pl-en">k</span>(n,c))<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshDepthMaterial</span><span class="pl-k">?</span>(<span class="pl-en">t</span>(n,c),<span class="pl-smi">c</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">displacementMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">displacementMap</span>,<span class="pl-smi">n</span>.<span class="pl-smi">displacementScale</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">displacementScale</span>,<span class="pl-smi">n</span>.<span class="pl-smi">displacementBias</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">displacementBias</span>))<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshDistanceMaterial</span><span class="pl-k">?</span>(<span class="pl-en">t</span>(n,c),<span class="pl-smi">c</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">displacementMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">displacementMap</span>,<span class="pl-smi">n</span>.<span class="pl-smi">displacementScale</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">displacementScale</span>,<span class="pl-smi">n</span>.<span class="pl-smi">displacementBias</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">displacementBias</span>),<span class="pl-smi">n</span>.<span class="pl-smi">referencePosition</span>.<span class="pl-c1">value</span>.<span class="pl-en">copy</span>(<span class="pl-smi">c</span>.<span class="pl-smi">referencePosition</span>),<span class="pl-smi">n</span>.<span class="pl-smi">nearDistance</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">nearDistance</span>,<span class="pl-smi">n</span>.<span class="pl-smi">farDistance</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">farDistance</span>)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshNormalMaterial</span><span class="pl-k">?</span>(<span class="pl-en">t</span>(n,c),<span class="pl-smi">c</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">bumpMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">bumpMap</span>,<span class="pl-smi">n</span>.<span class="pl-smi">bumpScale</span>.<span class="pl-c1">value</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">bumpScale</span>,<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">side</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">bumpScale</span>.<span class="pl-c1">value</span><span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>)),<span class="pl-smi">c</span>.<span class="pl-smi">normalMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">normalMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">normalMap</span>,<span class="pl-smi">n</span>.<span class="pl-smi">normalScale</span>.<span class="pl-c1">value</span>.<span class="pl-en">copy</span>(<span class="pl-smi">c</span>.<span class="pl-smi">normalScale</span>),<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">side</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-smi">normalScale</span>.<span class="pl-c1">value</span>.<span class="pl-en">negate</span>()),<span class="pl-smi">c</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">displacementMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">displacementMap</span>,<span class="pl-smi">n</span>.<span class="pl-smi">displacementScale</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">displacementScale</span>,<span class="pl-smi">n</span>.<span class="pl-smi">displacementBias</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">displacementBias</span>))<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">isLineBasicMaterial</span><span class="pl-k">?</span>(<span class="pl-smi">n</span>.<span class="pl-smi">diffuse</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">color</span>,<span class="pl-smi">n</span>.<span class="pl-smi">opacity</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">opacity</span>,<span class="pl-smi">c</span>.<span class="pl-smi">isLineDashedMaterial</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">dashSize</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dashSize</span>,<span class="pl-smi">n</span>.<span class="pl-smi">totalSize</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">dashSize</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">gapSize</span>,<span class="pl-smi">n</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">value</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">scale</span>))<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">isPointsMaterial</span><span class="pl-k">?</span>(<span class="pl-smi">n</span>.<span class="pl-smi">diffuse</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">color</span>,<span class="pl-smi">n</span>.<span class="pl-smi">opacity</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">opacity</span>,<span class="pl-smi">n</span>.<span class="pl-c1">size</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">size</span><span class="pl-k">*</span><span class="pl-c1">V</span>,<span class="pl-smi">n</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span>fa,<span class="pl-smi">n</span>.<span class="pl-smi">map</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">map</span>,<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">map</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">map</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">map</span>.<span class="pl-en">updateMatrix</span>(),<span class="pl-smi">n</span>.<span class="pl-smi">uvTransform</span>.<span class="pl-c1">value</span>.<span class="pl-en">copy</span>(<span class="pl-smi">c</span>.<span class="pl-smi">map</span>.<span class="pl-smi">matrix</span>)))<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">isShadowMaterial</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-c1">color</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">color</span>,<span class="pl-smi">n</span>.<span class="pl-smi">opacity</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">opacity</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">n</span>.<span class="pl-smi">ltc_1</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">ltc_1</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-c1">LTC_1</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">n</span>.<span class="pl-smi">ltc_2</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">ltc_2</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-c1">LTC_2</span>),<span class="pl-smi">eb</span>.<span class="pl-en">upload</span>(<span class="pl-c1">F</span>,<span class="pl-smi">e</span>.<span class="pl-smi">uniformsList</span>,n,<span class="pl-c1">U</span>));<span class="pl-smi">c</span>.<span class="pl-smi">isShaderMaterial</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">uniformsNeedUpdate</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">eb</span>.<span class="pl-en">upload</span>(<span class="pl-c1">F</span>,<span class="pl-smi">e</span>.<span class="pl-smi">uniformsList</span>,</td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line">n,<span class="pl-c1">U</span>),<span class="pl-smi">c</span>.<span class="pl-smi">uniformsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">m</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">F</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>modelViewMatrix<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-smi">modelViewMatrix</span>);<span class="pl-smi">m</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">F</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>normalMatrix<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-smi">normalMatrix</span>);<span class="pl-smi">m</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">F</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>modelMatrix<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-k">return</span> f}function t(a,b){a.opacity.value=b.opacity;b.color&amp;&amp;(a.diffuse.value=b.color);b.emissive&amp;&amp;a.emissive.value.copy(b.emissive).multiplyScalar(b.emissiveIntensity);b.map&amp;&amp;(a.map.value=b.map);b.alphaMap&amp;&amp;(a.alphaMap.value=b.alphaMap);b.specularMap&amp;&amp;(a.specularMap.value=b.specularMap);b.envMap&amp;&amp;(a.envMap.value=b.envMap,a.flipEnvMap.value=</td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">envMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">envMap</span>.<span class="pl-smi">isCubeTexture</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-smi">reflectivity</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">reflectivity</span>,<span class="pl-smi">a</span>.<span class="pl-smi">refractionRatio</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">refractionRatio</span>,<span class="pl-smi">a</span>.<span class="pl-smi">maxMipLevel</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">Aa</span>.<span class="pl-c1">get</span>(<span class="pl-smi">b</span>.<span class="pl-smi">envMap</span>).<span class="pl-smi">__maxMipLevel</span>);<span class="pl-smi">b</span>.<span class="pl-smi">lightMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">lightMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">lightMap</span>,<span class="pl-smi">a</span>.<span class="pl-smi">lightMapIntensity</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">lightMapIntensity</span>);<span class="pl-smi">b</span>.<span class="pl-smi">aoMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">aoMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">aoMap</span>,<span class="pl-smi">a</span>.<span class="pl-smi">aoMapIntensity</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">aoMapIntensity</span>);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">map</span>)<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">map</span>;<span class="pl-k">else</span> <span class="pl-smi">b</span>.<span class="pl-smi">specularMap</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">specularMap</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">normalMap</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">normalMap</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">roughnessMap</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">roughnessMap</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">metalnessMap</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">metalnessMap</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">emissiveMap</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">isWebGLRenderTarget</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">texture</span>),<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">updateMatrix</span>(),<span class="pl-smi">a</span>.<span class="pl-smi">uvTransform</span>.<span class="pl-c1">value</span>.<span class="pl-en">copy</span>(<span class="pl-smi">c</span>.<span class="pl-smi">matrix</span>))}function q(a,b){a.specular.value=b.specular;a.shininess.value=Math.max(b.shininess,1E-4);b.emissiveMap&amp;&amp;(a.emissiveMap.value=b.emissiveMap);b.bumpMap&amp;&amp;(a.bumpMap.value=b.bumpMap,a.bumpScale.value=b.bumpScale,1===b.side&amp;&amp;(a.bumpScale.value*=-1));b.normalMap&amp;&amp;(a.normalMap.value=b.normalMap,</td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">normalScale</span>.<span class="pl-c1">value</span>.<span class="pl-en">copy</span>(<span class="pl-smi">b</span>.<span class="pl-smi">normalScale</span>),<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">side</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">normalScale</span>.<span class="pl-c1">value</span>.<span class="pl-en">negate</span>());<span class="pl-smi">b</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">displacementMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">displacementMap</span>,<span class="pl-smi">a</span>.<span class="pl-smi">displacementScale</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">displacementScale</span>,<span class="pl-smi">a</span>.<span class="pl-smi">displacementBias</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">displacementBias</span>)}function k(a,b){a.roughness.value=b.roughness;a.metalness.value=b.metalness;b.roughnessMap&amp;&amp;(a.roughnessMap.value=b.roughnessMap);b.metalnessMap&amp;&amp;(a.metalnessMap.value=b.metalnessMap);b.emissiveMap&amp;&amp;(a.emissiveMap.value=b.emissiveMap);b.bumpMap&amp;&amp;(a.bumpMap.value=b.bumpMap,</td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">bumpScale</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">bumpScale</span>,<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">side</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">bumpScale</span>.<span class="pl-c1">value</span><span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>));<span class="pl-smi">b</span>.<span class="pl-smi">normalMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">normalMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">normalMap</span>,<span class="pl-smi">a</span>.<span class="pl-smi">normalScale</span>.<span class="pl-c1">value</span>.<span class="pl-en">copy</span>(<span class="pl-smi">b</span>.<span class="pl-smi">normalScale</span>),<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">side</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">normalScale</span>.<span class="pl-c1">value</span>.<span class="pl-en">negate</span>());<span class="pl-smi">b</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">displacementMap</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">displacementMap</span>,<span class="pl-smi">a</span>.<span class="pl-smi">displacementScale</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">displacementScale</span>,<span class="pl-smi">a</span>.<span class="pl-smi">displacementBias</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">displacementBias</span>);<span class="pl-smi">b</span>.<span class="pl-smi">envMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">envMapIntensity</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">envMapIntensity</span>)}<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>94<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">=</span>a<span class="pl-k">||</span>{};<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">canvas</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">canvas</span><span class="pl-k">:</span><span class="pl-c1">document</span>.<span class="pl-c1">createElementNS</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>),y<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">context</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">context</span><span class="pl-k">:</span><span class="pl-c1">null</span>,w<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">alpha</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">alpha</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,x<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">depth</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">depth</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">stencil</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">stencil</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">antialias</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">antialias</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">premultipliedAlpha</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">premultipliedAlpha</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">preserveDrawingBuffer</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">preserveDrawingBuffer</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">powerPreference</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">powerPreference</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">null</span>,z<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">domElement</span><span class="pl-k">=</span>u;<span class="pl-c1">this</span>.<span class="pl-smi">context</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">sortObjects</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">autoClearStencil</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">autoClearDepth</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">autoClearColor</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">autoClear</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">clippingPlanes</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line">[];<span class="pl-c1">this</span>.<span class="pl-smi">localClippingEnabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">gammaFactor</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-c1">this</span>.<span class="pl-smi">physicallyCorrectLights</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">gammaOutput</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">gammaInput</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">toneMappingWhitePoint</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">toneMappingExposure</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">toneMapping</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">maxMorphTargets</span><span class="pl-k">=</span><span class="pl-c1">8</span>;<span class="pl-c1">this</span>.<span class="pl-smi">maxMorphNormals</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-k">var</span> <span class="pl-c1">U</span><span class="pl-k">=</span><span class="pl-c1">this</span>,<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">null</span>,Pb<span class="pl-k">=</span><span class="pl-c1">null</span>,db<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>,<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>,<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">null</span>,$d<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">width</span>,fa<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">height</span>,<span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">Y</span>,fa),ba<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">Y</span>,fa),ea<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,da<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">td</span>,<span class="pl-c1">X</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Of</span>,ca<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,ha<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,ud<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>,Tb<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">try</span>{w<span class="pl-k">=</span>{alpha<span class="pl-k">:</span>w,depth<span class="pl-k">:</span>x,stencil<span class="pl-k">:</span><span class="pl-c1">A</span>,antialias<span class="pl-k">:</span><span class="pl-c1">C</span>,premultipliedAlpha<span class="pl-k">:</span><span class="pl-c1">O</span>,</td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line">preserveDrawingBuffer<span class="pl-k">:</span><span class="pl-c1">Q</span>,powerPreference<span class="pl-k">:</span><span class="pl-c1">M</span>};<span class="pl-smi">u</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>webglcontextlost<span class="pl-pds">&quot;</span></span>,c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">u</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>webglcontextrestored<span class="pl-pds">&quot;</span></span>,d,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> <span class="pl-c1">F</span><span class="pl-k">=</span>y<span class="pl-k">||</span><span class="pl-smi">u</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>webgl<span class="pl-pds">&quot;</span></span>,w)<span class="pl-k">||</span><span class="pl-smi">u</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>experimental-webgl<span class="pl-pds">&quot;</span></span>,w);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">F</span>){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">u</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>webgl<span class="pl-pds">&quot;</span></span>))<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Error creating WebGL context with your selected attributes.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Error creating WebGL context.<span class="pl-pds">&quot;</span></span>);}<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">F</span>.<span class="pl-smi">getShaderPrecisionFormat</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">F</span>.<span class="pl-en">getShaderPrecisionFormat</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{rangeMin<span class="pl-k">:</span><span class="pl-c1">1</span>,rangeMax<span class="pl-k">:</span><span class="pl-c1">1</span>,precision<span class="pl-k">:</span><span class="pl-c1">1</span>}})}<span class="pl-k">catch</span>(Og){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Og</span>.<span class="pl-smi">message</span>)}<span class="pl-k">var</span> ma,Sa,aa,hb,Aa,<span class="pl-c1">Z</span>,ja,qa,pa,na,ra,oa,la,va,wa,xa,ya,ia;<span class="pl-en">b</span>();<span class="pl-k">var</span> ka<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>xr<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> <span class="pl-c1">navigator</span><span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Ng</span>(<span class="pl-c1">U</span>)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">bf</span>(<span class="pl-c1">U</span>);<span class="pl-c1">this</span>.<span class="pl-smi">vr</span><span class="pl-k">=</span>ka;<span class="pl-k">var</span> za<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">$e</span>(<span class="pl-c1">U</span>,pa,<span class="pl-smi">Sa</span>.<span class="pl-smi">maxTextureSize</span>);<span class="pl-c1">this</span>.<span class="pl-smi">shadowMap</span><span class="pl-k">=</span>za;<span class="pl-c1">this</span>.<span class="pl-en">getContext</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">F</span>};<span class="pl-c1">this</span>.<span class="pl-en">getContextAttributes</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">F</span>.<span class="pl-en">getContextAttributes</span>()};<span class="pl-c1">this</span>.<span class="pl-en">forceContextLoss</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_lose_context<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">loseContext</span>()};<span class="pl-c1">this</span>.<span class="pl-en">forceContextRestore</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_lose_context<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">restoreContext</span>()};<span class="pl-c1">this</span>.<span class="pl-en">getPixelRatio</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">V</span>};</td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">setPixelRatio</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">V</span><span class="pl-k">=</span>a,<span class="pl-c1">this</span>.<span class="pl-en">setSize</span>(<span class="pl-c1">Y</span>,fa,<span class="pl-k">!</span><span class="pl-c1">1</span>))};<span class="pl-c1">this</span>.<span class="pl-en">getSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{width<span class="pl-k">:</span><span class="pl-c1">Y</span>,height<span class="pl-k">:</span>fa}};<span class="pl-c1">this</span>.<span class="pl-en">setSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">ka</span>.<span class="pl-en">isPresenting</span>()<span class="pl-k">?</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: Can&#39;t change size while VR device is presenting.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>(<span class="pl-c1">Y</span><span class="pl-k">=</span>a,fa<span class="pl-k">=</span>b,<span class="pl-smi">u</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">V</span>,<span class="pl-smi">u</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>b<span class="pl-k">*</span><span class="pl-c1">V</span>,<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">u</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">u</span>.<span class="pl-c1">style</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">setViewport</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,a,b))};<span class="pl-c1">this</span>.<span class="pl-en">getDrawingBufferSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{width<span class="pl-k">:</span><span class="pl-c1">Y</span><span class="pl-k">*</span><span class="pl-c1">V</span>,height<span class="pl-k">:</span>fa<span class="pl-k">*</span><span class="pl-c1">V</span>}};<span class="pl-c1">this</span>.<span class="pl-en">setDrawingBufferSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">Y</span><span class="pl-k">=</span>a;fa<span class="pl-k">=</span>b;<span class="pl-c1">V</span><span class="pl-k">=</span>c;<span class="pl-smi">u</span>.<span class="pl-c1">width</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">*</span>c;<span class="pl-smi">u</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>b<span class="pl-k">*</span>c;<span class="pl-c1">this</span>.<span class="pl-en">setViewport</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,a,b)};<span class="pl-c1">this</span>.<span class="pl-en">getCurrentViewport</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> db};<span class="pl-c1">this</span>.<span class="pl-en">setViewport</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">N</span>.<span class="pl-c1">set</span>(a,fa<span class="pl-k">-</span>b<span class="pl-k">-</span>d,c,d);<span class="pl-smi">aa</span>.<span class="pl-en">viewport</span>(<span class="pl-smi">db</span>.<span class="pl-en">copy</span>(<span class="pl-c1">N</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">V</span>))};<span class="pl-c1">this</span>.<span class="pl-en">setScissor</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">ba</span>.<span class="pl-c1">set</span>(a,fa<span class="pl-k">-</span>b<span class="pl-k">-</span>d,c,d);<span class="pl-smi">aa</span>.<span class="pl-en">scissor</span>(<span class="pl-c1">S</span>.<span class="pl-en">copy</span>(ba).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">V</span>))};<span class="pl-c1">this</span>.<span class="pl-en">setScissorTest</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">aa</span>.<span class="pl-en">setScissorTest</span>(ea<span class="pl-k">=</span>a)};<span class="pl-c1">this</span>.<span class="pl-en">getClearColor</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">la</span>.<span class="pl-en">getClearColor</span>()};<span class="pl-c1">this</span>.<span class="pl-en">setClearColor</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">la</span>.<span class="pl-smi">setClearColor</span>.<span class="pl-c1">apply</span>(la,<span class="pl-c1">arguments</span>)};<span class="pl-c1">this</span>.<span class="pl-en">getClearAlpha</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">la</span>.<span class="pl-en">getClearAlpha</span>()};</td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">setClearAlpha</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">la</span>.<span class="pl-smi">setClearAlpha</span>.<span class="pl-c1">apply</span>(la,<span class="pl-c1">arguments</span>)};<span class="pl-c1">this</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">||</span>a)d<span class="pl-k">|=</span><span class="pl-c1">F</span>.<span class="pl-c1">COLOR_BUFFER_BIT</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">||</span>b)d<span class="pl-k">|=</span><span class="pl-c1">F</span>.<span class="pl-c1">DEPTH_BUFFER_BIT</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">||</span>c)d<span class="pl-k">|=</span><span class="pl-c1">F</span>.<span class="pl-c1">STENCIL_BUFFER_BIT</span>;<span class="pl-c1">F</span>.<span class="pl-c1">clear</span>(d)};<span class="pl-c1">this</span>.<span class="pl-en">clearColor</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">clear</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>)};<span class="pl-c1">this</span>.<span class="pl-en">clearDepth</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">clear</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>)};<span class="pl-c1">this</span>.<span class="pl-en">clearStencil</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">clear</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)};<span class="pl-c1">this</span>.<span class="pl-en">clearTarget</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-en">setRenderTarget</span>(a);<span class="pl-c1">this</span>.<span class="pl-c1">clear</span>(b,c,d)};<span class="pl-c1">this</span>.<span class="pl-en">dispose</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">u</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>webglcontextlost<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line">c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">u</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>webglcontextrestored<span class="pl-pds">&quot;</span></span>,d,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">ra</span>.<span class="pl-en">dispose</span>();<span class="pl-smi">oa</span>.<span class="pl-en">dispose</span>();<span class="pl-smi">Aa</span>.<span class="pl-en">dispose</span>();<span class="pl-smi">pa</span>.<span class="pl-en">dispose</span>();<span class="pl-smi">ka</span>.<span class="pl-en">dispose</span>();<span class="pl-smi">ta</span>.<span class="pl-c1">stop</span>()};<span class="pl-c1">this</span>.<span class="pl-en">renderBufferImmediate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">aa</span>.<span class="pl-en">initAttributes</span>();<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">Aa</span>.<span class="pl-c1">get</span>(a);<span class="pl-smi">a</span>.<span class="pl-smi">hasPositions</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-smi">position</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">position</span><span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-en">createBuffer</span>());<span class="pl-smi">a</span>.<span class="pl-smi">hasNormals</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-smi">normal</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">normal</span><span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-en">createBuffer</span>());<span class="pl-smi">a</span>.<span class="pl-smi">hasUvs</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-smi">uv</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">uv</span><span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-en">createBuffer</span>());<span class="pl-smi">a</span>.<span class="pl-smi">hasColors</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-c1">color</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-c1">F</span>.<span class="pl-en">createBuffer</span>());b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getAttributes</span>();<span class="pl-smi">a</span>.<span class="pl-smi">hasPositions</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">F</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-c1">F</span>.<span class="pl-c1">ARRAY_BUFFER</span>,<span class="pl-smi">d</span>.<span class="pl-smi">position</span>),<span class="pl-c1">F</span>.<span class="pl-en">bufferData</span>(<span class="pl-c1">F</span>.<span class="pl-c1">ARRAY_BUFFER</span>,</td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">positionArray</span>,<span class="pl-c1">F</span>.<span class="pl-c1">DYNAMIC_DRAW</span>),<span class="pl-smi">aa</span>.<span class="pl-en">enableAttribute</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>),<span class="pl-c1">F</span>.<span class="pl-en">vertexAttribPointer</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>,<span class="pl-c1">3</span>,<span class="pl-c1">F</span>.<span class="pl-c1">FLOAT</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>));<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">hasNormals</span>){<span class="pl-c1">F</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-c1">F</span>.<span class="pl-c1">ARRAY_BUFFER</span>,<span class="pl-smi">d</span>.<span class="pl-smi">normal</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshPhongMaterial</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshStandardMaterial</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">c</span>.<span class="pl-smi">isMeshNormalMaterial</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">flatShading</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">count</span>;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">+=</span><span class="pl-c1">9</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalArray</span>,h<span class="pl-k">=</span>(g[e<span class="pl-k">+</span><span class="pl-c1">0</span>]<span class="pl-k">+</span>g[e<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">+</span>g[e<span class="pl-k">+</span><span class="pl-c1">6</span>])<span class="pl-k">/</span><span class="pl-c1">3</span>,l<span class="pl-k">=</span>(g[e<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">+</span>g[e<span class="pl-k">+</span><span class="pl-c1">4</span>]<span class="pl-k">+</span>g[e<span class="pl-k">+</span><span class="pl-c1">7</span>])<span class="pl-k">/</span><span class="pl-c1">3</span>,m<span class="pl-k">=</span>(g[e<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">+</span>g[e<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">+</span>g[e<span class="pl-k">+</span><span class="pl-c1">8</span>])<span class="pl-k">/</span><span class="pl-c1">3</span>;g[e<span class="pl-k">+</span><span class="pl-c1">0</span>]<span class="pl-k">=</span>h;g[e<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>l;g[e<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>m;g[e<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span>h;g[e<span class="pl-k">+</span><span class="pl-c1">4</span>]<span class="pl-k">=</span>l;g[e<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">=</span>m;g[e<span class="pl-k">+</span><span class="pl-c1">6</span>]<span class="pl-k">=</span>h;g[e<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">=</span>l;g[e<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">=</span>m}<span class="pl-c1">F</span>.<span class="pl-en">bufferData</span>(<span class="pl-c1">F</span>.<span class="pl-c1">ARRAY_BUFFER</span>,</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">normalArray</span>,<span class="pl-c1">F</span>.<span class="pl-c1">DYNAMIC_DRAW</span>);<span class="pl-smi">aa</span>.<span class="pl-en">enableAttribute</span>(<span class="pl-smi">b</span>.<span class="pl-smi">normal</span>);<span class="pl-c1">F</span>.<span class="pl-en">vertexAttribPointer</span>(<span class="pl-smi">b</span>.<span class="pl-smi">normal</span>,<span class="pl-c1">3</span>,<span class="pl-c1">F</span>.<span class="pl-c1">FLOAT</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)}<span class="pl-smi">a</span>.<span class="pl-smi">hasUvs</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">map</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">F</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-c1">F</span>.<span class="pl-c1">ARRAY_BUFFER</span>,<span class="pl-smi">d</span>.<span class="pl-smi">uv</span>),<span class="pl-c1">F</span>.<span class="pl-en">bufferData</span>(<span class="pl-c1">F</span>.<span class="pl-c1">ARRAY_BUFFER</span>,<span class="pl-smi">a</span>.<span class="pl-smi">uvArray</span>,<span class="pl-c1">F</span>.<span class="pl-c1">DYNAMIC_DRAW</span>),<span class="pl-smi">aa</span>.<span class="pl-en">enableAttribute</span>(<span class="pl-smi">b</span>.<span class="pl-smi">uv</span>),<span class="pl-c1">F</span>.<span class="pl-en">vertexAttribPointer</span>(<span class="pl-smi">b</span>.<span class="pl-smi">uv</span>,<span class="pl-c1">2</span>,<span class="pl-c1">F</span>.<span class="pl-c1">FLOAT</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>));<span class="pl-smi">a</span>.<span class="pl-smi">hasColors</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">vertexColors</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">F</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-c1">F</span>.<span class="pl-c1">ARRAY_BUFFER</span>,<span class="pl-smi">d</span>.<span class="pl-c1">color</span>),<span class="pl-c1">F</span>.<span class="pl-en">bufferData</span>(<span class="pl-c1">F</span>.<span class="pl-c1">ARRAY_BUFFER</span>,<span class="pl-smi">a</span>.<span class="pl-smi">colorArray</span>,<span class="pl-c1">F</span>.<span class="pl-c1">DYNAMIC_DRAW</span>),<span class="pl-smi">aa</span>.<span class="pl-en">enableAttribute</span>(<span class="pl-smi">b</span>.<span class="pl-c1">color</span>),<span class="pl-c1">F</span>.<span class="pl-en">vertexAttribPointer</span>(<span class="pl-smi">b</span>.<span class="pl-c1">color</span>,<span class="pl-c1">3</span>,<span class="pl-c1">F</span>.<span class="pl-c1">FLOAT</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>));<span class="pl-smi">aa</span>.<span class="pl-en">disableUnusedAttributes</span>();</td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span>.<span class="pl-en">drawArrays</span>(<span class="pl-c1">F</span>.<span class="pl-c1">TRIANGLES</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">count</span>);<span class="pl-smi">a</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-c1">0</span>};<span class="pl-c1">this</span>.<span class="pl-en">renderBufferDirect</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">isMesh</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">e</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">determinant</span>();<span class="pl-smi">aa</span>.<span class="pl-en">setMaterial</span>(d,g);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">n</span>(a,b,d,e);a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">h</span>.<span class="pl-c1">id</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-smi">wireframe</span>);<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;a<span class="pl-k">!==</span><span class="pl-c1">I</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">I</span><span class="pl-k">=</span>a,l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">e</span>.<span class="pl-smi">morphTargetInfluences</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">va</span>.<span class="pl-en">update</span>(e,c,d,h),l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">index</span>;<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>;b<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-smi">wireframe</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-smi">qa</span>.<span class="pl-en">getWireframeAttribute</span>(c),b<span class="pl-k">=</span><span class="pl-c1">2</span>);a<span class="pl-k">=</span>wa;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>g){<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-smi">ja</span>.<span class="pl-c1">get</span>(g);a<span class="pl-k">=</span>xa;<span class="pl-smi">a</span>.<span class="pl-en">setIndex</span>(v)}<span class="pl-k">if</span>(l){<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">isInstancedBufferGeometry</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ANGLE_instanced_arrays<span class="pl-pds">&quot;</span></span>))<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span>{<span class="pl-smi">aa</span>.<span class="pl-en">initAttributes</span>();l<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">attributes</span>;h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">getAttributes</span>();<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">defaultAttributeValues</span>;<span class="pl-k">for</span>(<span class="pl-c1">A</span> <span class="pl-k">in</span> h){<span class="pl-k">var</span> q<span class="pl-k">=</span>h[<span class="pl-c1">A</span>];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>q){<span class="pl-k">var</span> k<span class="pl-k">=</span>l[<span class="pl-c1">A</span>];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>k){<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">normalized</span>,u<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">itemSize</span>,p<span class="pl-k">=</span><span class="pl-smi">ja</span>.<span class="pl-c1">get</span>(k);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>p){<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">buffer</span>,x<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-c1">type</span>;p<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">bytesPerElement</span>;<span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-smi">isInterleavedBufferAttribute</span>){<span class="pl-k">var</span> w<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">data</span>,<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-smi">stride</span>;k<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">offset</span>;w<span class="pl-k">&amp;&amp;</span><span class="pl-smi">w</span>.<span class="pl-smi">isInstancedInterleavedBuffer</span><span class="pl-k">?</span>(<span class="pl-smi">aa</span>.<span class="pl-en">enableAttributeAndDivisor</span>(q,<span class="pl-smi">w</span>.<span class="pl-smi">meshPerAttribute</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">maxInstancedCount</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">maxInstancedCount</span><span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-smi">meshPerAttribute</span><span class="pl-k">*</span><span class="pl-smi">w</span>.<span class="pl-smi">count</span>))<span class="pl-k">:</span><span class="pl-smi">aa</span>.<span class="pl-en">enableAttribute</span>(q);</td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-c1">F</span>.<span class="pl-c1">ARRAY_BUFFER</span>,y);<span class="pl-c1">F</span>.<span class="pl-en">vertexAttribPointer</span>(q,u,x,r,<span class="pl-c1">C</span><span class="pl-k">*</span>p,k<span class="pl-k">*</span>p)}<span class="pl-k">else</span> <span class="pl-smi">k</span>.<span class="pl-smi">isInstancedBufferAttribute</span><span class="pl-k">?</span>(<span class="pl-smi">aa</span>.<span class="pl-en">enableAttributeAndDivisor</span>(q,<span class="pl-smi">k</span>.<span class="pl-smi">meshPerAttribute</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">maxInstancedCount</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">maxInstancedCount</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">meshPerAttribute</span><span class="pl-k">*</span><span class="pl-smi">k</span>.<span class="pl-smi">count</span>))<span class="pl-k">:</span><span class="pl-smi">aa</span>.<span class="pl-en">enableAttribute</span>(q),<span class="pl-c1">F</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-c1">F</span>.<span class="pl-c1">ARRAY_BUFFER</span>,y),<span class="pl-c1">F</span>.<span class="pl-en">vertexAttribPointer</span>(q,u,x,r,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)}}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>t<span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span>t[<span class="pl-c1">A</span>],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>r))<span class="pl-k">switch</span>(<span class="pl-smi">r</span>.<span class="pl-c1">length</span>){<span class="pl-k">case</span> <span class="pl-c1">2</span>:<span class="pl-c1">F</span>.<span class="pl-en">vertexAttrib2fv</span>(q,r);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span>:<span class="pl-c1">F</span>.<span class="pl-en">vertexAttrib3fv</span>(q,r);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span>:<span class="pl-c1">F</span>.<span class="pl-en">vertexAttrib4fv</span>(q,r);<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-c1">F</span>.<span class="pl-en">vertexAttrib1fv</span>(q,</td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line">r)}}}<span class="pl-smi">aa</span>.<span class="pl-en">disableUnusedAttributes</span>()}<span class="pl-c1">null</span><span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-c1">F</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-c1">F</span>.<span class="pl-c1">ELEMENT_ARRAY_BUFFER</span>,<span class="pl-smi">v</span>.<span class="pl-smi">buffer</span>)}v<span class="pl-k">=</span><span class="pl-c1">Infinity</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>g<span class="pl-k">?</span>v<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">count</span><span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>m<span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">count</span>);g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">drawRange</span>.<span class="pl-c1">start</span><span class="pl-k">*</span>b;m<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!==</span>f<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">start</span><span class="pl-k">*</span>b<span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> <span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(g,m);f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(v,g<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">drawRange</span>.<span class="pl-smi">count</span><span class="pl-k">*</span>b,m<span class="pl-k">+</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>f<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-smi">count</span><span class="pl-k">*</span>b<span class="pl-k">:</span><span class="pl-c1">Infinity</span>))<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">A</span><span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span>f){<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">isMesh</span>)<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-smi">wireframe</span>)<span class="pl-smi">aa</span>.<span class="pl-en">setLineWidth</span>(<span class="pl-smi">d</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">*</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">D</span><span class="pl-k">?</span><span class="pl-c1">V</span><span class="pl-k">:</span><span class="pl-c1">1</span>)),<span class="pl-smi">a</span>.<span class="pl-en">setMode</span>(<span class="pl-c1">F</span>.<span class="pl-c1">LINES</span>);<span class="pl-k">else</span> <span class="pl-k">switch</span>(<span class="pl-smi">e</span>.<span class="pl-smi">drawMode</span>){<span class="pl-k">case</span> <span class="pl-c1">0</span>:<span class="pl-smi">a</span>.<span class="pl-en">setMode</span>(<span class="pl-c1">F</span>.<span class="pl-c1">TRIANGLES</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-smi">a</span>.<span class="pl-en">setMode</span>(<span class="pl-c1">F</span>.<span class="pl-c1">TRIANGLE_STRIP</span>);</td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:<span class="pl-smi">a</span>.<span class="pl-en">setMode</span>(<span class="pl-c1">F</span>.<span class="pl-c1">TRIANGLE_FAN</span>)}<span class="pl-k">else</span> <span class="pl-smi">e</span>.<span class="pl-smi">isLine</span><span class="pl-k">?</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">linewidth</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">1</span>),<span class="pl-smi">aa</span>.<span class="pl-en">setLineWidth</span>(d<span class="pl-k">*</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">D</span><span class="pl-k">?</span><span class="pl-c1">V</span><span class="pl-k">:</span><span class="pl-c1">1</span>)),<span class="pl-smi">e</span>.<span class="pl-smi">isLineSegments</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">setMode</span>(<span class="pl-c1">F</span>.<span class="pl-c1">LINES</span>)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">isLineLoop</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">setMode</span>(<span class="pl-c1">F</span>.<span class="pl-c1">LINE_LOOP</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">setMode</span>(<span class="pl-c1">F</span>.<span class="pl-c1">LINE_STRIP</span>))<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">isPoints</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">setMode</span>(<span class="pl-c1">F</span>.<span class="pl-c1">POINTS</span>);c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">isInstancedBufferGeometry</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-smi">maxInstancedCount</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">renderInstances</span>(c,<span class="pl-c1">A</span>,f)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">render</span>(<span class="pl-c1">A</span>,f)}};<span class="pl-c1">this</span>.<span class="pl-en">compile</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){z<span class="pl-k">=</span><span class="pl-smi">oa</span>.<span class="pl-c1">get</span>(a,b);<span class="pl-smi">z</span>.<span class="pl-en">init</span>();<span class="pl-smi">a</span>.<span class="pl-en">traverse</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">isLight</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">z</span>.<span class="pl-en">pushLight</span>(a),<span class="pl-smi">a</span>.<span class="pl-smi">castShadow</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">z</span>.<span class="pl-en">pushShadow</span>(a))});<span class="pl-smi">z</span>.<span class="pl-en">setupLights</span>(b);<span class="pl-smi">a</span>.<span class="pl-en">traverse</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">material</span>)<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">material</span>))<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">material</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-en">v</span>(<span class="pl-smi">b</span>.<span class="pl-smi">material</span>[c],<span class="pl-smi">a</span>.<span class="pl-smi">fog</span>,b);<span class="pl-k">else</span> <span class="pl-en">v</span>(<span class="pl-smi">b</span>.<span class="pl-smi">material</span>,<span class="pl-smi">a</span>.<span class="pl-smi">fog</span>,b)})};<span class="pl-k">var</span> ua<span class="pl-k">=</span><span class="pl-c1">null</span>,ta<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Vd</span>;<span class="pl-smi">ta</span>.<span class="pl-en">setAnimationLoop</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">ka</span>.<span class="pl-en">isPresenting</span>()<span class="pl-k">||</span>ua<span class="pl-k">&amp;&amp;</span><span class="pl-en">ua</span>(a)});<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">ta</span>.<span class="pl-en">setContext</span>(<span class="pl-c1">window</span>);<span class="pl-c1">this</span>.<span class="pl-en">setAnimationLoop</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){ua<span class="pl-k">=</span>a;<span class="pl-smi">ka</span>.<span class="pl-en">setAnimationLoop</span>(a);<span class="pl-smi">ta</span>.<span class="pl-c1">start</span>()};<span class="pl-c1">this</span>.<span class="pl-en">render</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">||!</span><span class="pl-smi">b</span>.<span class="pl-smi">isCamera</span>)<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">G</span>){<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">autoUpdate</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">updateMatrixWorld</span>();<span class="pl-c1">null</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">parent</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">updateMatrixWorld</span>();<span class="pl-smi">ka</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">ka</span>.<span class="pl-en">getCamera</span>(b));z<span class="pl-k">=</span><span class="pl-smi">oa</span>.<span class="pl-c1">get</span>(a,b);<span class="pl-smi">z</span>.<span class="pl-en">init</span>();<span class="pl-smi">a</span>.<span class="pl-en">onBeforeRender</span>(<span class="pl-c1">U</span>,a,b,c);<span class="pl-smi">ud</span>.<span class="pl-en">multiplyMatrices</span>(<span class="pl-smi">b</span>.<span class="pl-smi">projectionMatrix</span>,<span class="pl-smi">b</span>.<span class="pl-smi">matrixWorldInverse</span>);<span class="pl-smi">da</span>.<span class="pl-en">setFromMatrix</span>(ud);ha<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">localClippingEnabled</span>;ca<span class="pl-k">=</span><span class="pl-c1">X</span>.<span class="pl-en">init</span>(<span class="pl-c1">this</span>.<span class="pl-smi">clippingPlanes</span>,ha,b);<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">ra</span>.<span class="pl-c1">get</span>(a,b);<span class="pl-c1">B</span>.<span class="pl-en">init</span>();<span class="pl-en">h</span>(a,b,<span class="pl-c1">U</span>.<span class="pl-smi">sortObjects</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">U</span>.<span class="pl-smi">sortObjects</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">B</span>.<span class="pl-c1">sort</span>();ca<span class="pl-k">&amp;&amp;</span><span class="pl-c1">X</span>.<span class="pl-en">beginShadows</span>();<span class="pl-smi">za</span>.<span class="pl-en">render</span>(<span class="pl-smi">z</span>.<span class="pl-smi">state</span>.<span class="pl-smi">shadowsArray</span>,a,b);<span class="pl-smi">z</span>.<span class="pl-en">setupLights</span>(b);ca<span class="pl-k">&amp;&amp;</span><span class="pl-c1">X</span>.<span class="pl-en">endShadows</span>();<span class="pl-c1">this</span>.<span class="pl-smi">info</span>.<span class="pl-smi">autoReset</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">info</span>.<span class="pl-c1">reset</span>();<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-c1">this</span>.<span class="pl-en">setRenderTarget</span>(c);</td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">la</span>.<span class="pl-en">render</span>(<span class="pl-c1">B</span>,a,b,d);d<span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-smi">opaque</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">B</span>.<span class="pl-smi">transparent</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">overrideMaterial</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">overrideMaterial</span>;<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>(d,a,b,f);<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>(e,a,b,f)}<span class="pl-k">else</span> <span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>(d,a,b),<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>(e,a,b);<span class="pl-smi">ya</span>.<span class="pl-en">render</span>(<span class="pl-smi">z</span>.<span class="pl-smi">state</span>.<span class="pl-smi">spritesArray</span>,a,b);c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">Z</span>.<span class="pl-en">updateRenderTargetMipmap</span>(c);<span class="pl-smi">aa</span>.<span class="pl-smi">buffers</span>.<span class="pl-smi">depth</span>.<span class="pl-en">setTest</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">aa</span>.<span class="pl-smi">buffers</span>.<span class="pl-smi">depth</span>.<span class="pl-en">setMask</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">aa</span>.<span class="pl-smi">buffers</span>.<span class="pl-c1">color</span>.<span class="pl-en">setMask</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">aa</span>.<span class="pl-en">setPolygonOffset</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">a</span>.<span class="pl-en">onAfterRender</span>(<span class="pl-c1">U</span>,a,b);<span class="pl-smi">ka</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">ka</span>.<span class="pl-en">submitFrame</span>();z<span class="pl-k">=</span><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-c1">null</span>}};<span class="pl-c1">this</span>.<span class="pl-en">allocTextureUnit</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>$d;a<span class="pl-k">&gt;=</span><span class="pl-smi">Sa</span>.<span class="pl-smi">maxTextures</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: Trying to use <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> texture units while this GPU supports only <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">Sa</span>.<span class="pl-smi">maxTextures</span>);$d<span class="pl-k">+=</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> a};<span class="pl-c1">this</span>.<span class="pl-en">setTexture2D</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">isWebGLRenderTarget</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">||</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer.setTexture2D: don&#39;t use render targets as textures. Use their .texture property instead.<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">texture</span>);<span class="pl-c1">Z</span>.<span class="pl-en">setTexture2D</span>(b,c)}}();<span class="pl-c1">this</span>.<span class="pl-en">setTexture</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">||</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Z</span>.<span class="pl-en">setTexture2D</span>(b,</td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line">c)}}();<span class="pl-c1">this</span>.<span class="pl-en">setTextureCube</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">isWebGLRenderTargetCube</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">||</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer.setTextureCube: don&#39;t use cube render targets as textures. Use their .texture property instead.<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">texture</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">isCubeTexture</span><span class="pl-k">||</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">image</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">6</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">image</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">Z</span>.<span class="pl-en">setTextureCube</span>(b,c)<span class="pl-k">:</span><span class="pl-c1">Z</span>.<span class="pl-en">setTextureCubeDynamic</span>(b,c)}}();<span class="pl-c1">this</span>.<span class="pl-en">setFramebuffer</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">H</span><span class="pl-k">=</span>a};<span class="pl-c1">this</span>.<span class="pl-en">getRenderTarget</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">D</span>};<span class="pl-c1">this</span>.<span class="pl-en">setRenderTarget</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){(<span class="pl-c1">D</span><span class="pl-k">=</span>a)<span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">Aa</span>.<span class="pl-c1">get</span>(a).<span class="pl-smi">__webglFramebuffer</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Z</span>.<span class="pl-en">setupRenderTarget</span>(a);<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">H</span>,c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;a<span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-smi">Aa</span>.<span class="pl-c1">get</span>(a).<span class="pl-smi">__webglFramebuffer</span>,<span class="pl-smi">a</span>.<span class="pl-smi">isWebGLRenderTargetCube</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>b[<span class="pl-smi">a</span>.<span class="pl-smi">activeCubeFace</span>],c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">db</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">viewport</span>),<span class="pl-c1">S</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">scissor</span>),<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scissorTest</span>)<span class="pl-k">:</span>(<span class="pl-smi">db</span>.<span class="pl-en">copy</span>(<span class="pl-c1">N</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">V</span>),<span class="pl-c1">S</span>.<span class="pl-en">copy</span>(ba).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">V</span>),<span class="pl-c1">T</span><span class="pl-k">=</span>ea);<span class="pl-c1">E</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">F</span>.<span class="pl-en">bindFramebuffer</span>(<span class="pl-c1">F</span>.<span class="pl-c1">FRAMEBUFFER</span>,b),<span class="pl-c1">E</span><span class="pl-k">=</span>b);<span class="pl-smi">aa</span>.<span class="pl-en">viewport</span>(db);<span class="pl-smi">aa</span>.<span class="pl-en">scissor</span>(<span class="pl-c1">S</span>);<span class="pl-smi">aa</span>.<span class="pl-en">setScissorTest</span>(<span class="pl-c1">T</span>);c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">Aa</span>.<span class="pl-c1">get</span>(<span class="pl-smi">a</span>.<span class="pl-smi">texture</span>),<span class="pl-c1">F</span>.<span class="pl-en">framebufferTexture2D</span>(<span class="pl-c1">F</span>.<span class="pl-c1">FRAMEBUFFER</span>,<span class="pl-c1">F</span>.<span class="pl-c1">COLOR_ATTACHMENT0</span>,<span class="pl-c1">F</span>.<span class="pl-c1">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">activeCubeFace</span>,<span class="pl-smi">c</span>.<span class="pl-smi">__webglTexture</span>,<span class="pl-smi">a</span>.<span class="pl-smi">activeMipMapLevel</span>))};</td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">readRenderTargetPixels</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">isWebGLRenderTarget</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">Aa</span>.<span class="pl-c1">get</span>(a).<span class="pl-smi">__webglFramebuffer</span>;<span class="pl-k">if</span>(g){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;g<span class="pl-k">!==</span><span class="pl-c1">E</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">F</span>.<span class="pl-en">bindFramebuffer</span>(<span class="pl-c1">F</span>.<span class="pl-c1">FRAMEBUFFER</span>,g),h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">try</span>{<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">texture</span>,m<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">format</span>,n<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">type</span>;<span class="pl-c1">1023</span><span class="pl-k">!==</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-smi">ia</span>.<span class="pl-en">convert</span>(m)<span class="pl-k">!==</span><span class="pl-c1">F</span>.<span class="pl-en">getParameter</span>(<span class="pl-c1">F</span>.<span class="pl-c1">IMPLEMENTATION_COLOR_READ_FORMAT</span>)<span class="pl-k">?</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-c1">1009</span><span class="pl-k">===</span>n<span class="pl-k">||</span><span class="pl-smi">ia</span>.<span class="pl-en">convert</span>(n)<span class="pl-k">===</span><span class="pl-c1">F</span>.<span class="pl-en">getParameter</span>(<span class="pl-c1">F</span>.<span class="pl-c1">IMPLEMENTATION_COLOR_READ_TYPE</span>)<span class="pl-k">||</span><span class="pl-c1">1015</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_texture_float<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_color_buffer_float<span class="pl-pds">&quot;</span></span>))<span class="pl-k">||</span><span class="pl-c1">1016</span><span class="pl-k">===</span>n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">ma</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EXT_color_buffer_half_float<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-c1">F</span>.<span class="pl-en">checkFramebufferStatus</span>(<span class="pl-c1">F</span>.<span class="pl-c1">FRAMEBUFFER</span>)<span class="pl-k">===</span><span class="pl-c1">F</span>.<span class="pl-c1">FRAMEBUFFER_COMPLETE</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>b<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">-</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-c1">F</span>.<span class="pl-en">readPixels</span>(b,c,d,e,<span class="pl-smi">ia</span>.<span class="pl-en">convert</span>(m),<span class="pl-smi">ia</span>.<span class="pl-en">convert</span>(n),f)<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">finally</span>{h<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">F</span>.<span class="pl-en">bindFramebuffer</span>(<span class="pl-c1">F</span>.<span class="pl-c1">FRAMEBUFFER</span>,<span class="pl-c1">E</span>)}}}<span class="pl-k">else</span> <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.<span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">this</span>.<span class="pl-en">copyFramebufferToTexture</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">image</span>.<span class="pl-c1">width</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">image</span>.<span class="pl-c1">height</span>,f<span class="pl-k">=</span><span class="pl-smi">ia</span>.<span class="pl-en">convert</span>(<span class="pl-smi">b</span>.<span class="pl-smi">format</span>);<span class="pl-c1">this</span>.<span class="pl-en">setTexture2D</span>(b,<span class="pl-c1">0</span>);<span class="pl-c1">F</span>.<span class="pl-en">copyTexImage2D</span>(<span class="pl-c1">F</span>.<span class="pl-c1">TEXTURE_2D</span>,c<span class="pl-k">||</span><span class="pl-c1">0</span>,f,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,d,e,<span class="pl-c1">0</span>)};<span class="pl-c1">this</span>.<span class="pl-en">copyTextureToTexture</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">image</span>.<span class="pl-c1">width</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">image</span>.<span class="pl-c1">height</span>,g<span class="pl-k">=</span><span class="pl-smi">ia</span>.<span class="pl-en">convert</span>(<span class="pl-smi">c</span>.<span class="pl-smi">format</span>),h<span class="pl-k">=</span><span class="pl-smi">ia</span>.<span class="pl-en">convert</span>(<span class="pl-smi">c</span>.<span class="pl-c1">type</span>);<span class="pl-c1">this</span>.<span class="pl-en">setTexture2D</span>(c,<span class="pl-c1">0</span>);<span class="pl-smi">b</span>.<span class="pl-smi">isDataTexture</span><span class="pl-k">?</span><span class="pl-c1">F</span>.<span class="pl-en">texSubImage2D</span>(<span class="pl-c1">F</span>.<span class="pl-c1">TEXTURE_2D</span>,</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,e,f,g,h,<span class="pl-smi">b</span>.<span class="pl-smi">image</span>.<span class="pl-c1">data</span>)<span class="pl-k">:</span><span class="pl-c1">F</span>.<span class="pl-en">texSubImage2D</span>(<span class="pl-c1">F</span>.<span class="pl-c1">TEXTURE_2D</span>,d<span class="pl-k">||</span><span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,g,h,<span class="pl-smi">b</span>.<span class="pl-smi">image</span>)}}function Vb(a,b){this.name=&quot;&quot;;this.color=new G(a);this.density=void 0!==b?b:2.5E-4}function Wb(a,b,c){this.name=&quot;&quot;;this.color=new G(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3}function vd(){H.call(this);this.type=&quot;Scene&quot;;this.overrideMaterial=this.fog=this.background=null;this.autoUpdate=!0}function ib(a){I.call(this);this.type=&quot;SpriteMaterial&quot;;this.color=new G(16777215);this.map=null;this.rotation=</td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lights</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">fog</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a)}function Ic(a){H.call(this);this.type=&quot;Sprite&quot;;this.material=void 0!==a?a:new ib;this.center=new B(.5,.5)}function Jc(){H.call(this);this.type=&quot;LOD&quot;;Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function Kc(a,b){a=a||[];this.bones=a.slice(0);this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn(&quot;THREE.Skeleton boneInverses is the wrong length.&quot;),</td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">boneInverses</span><span class="pl-k">=</span>[],a<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bones</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>b;a<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">boneInverses</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">R</span>)}function wd(){H.call(this);this.type=&quot;Bone&quot;}function xd(a,b){va.call(this,a,b);this.type=&quot;SkinnedMesh&quot;;this.bindMode=&quot;attached&quot;;this.bindMatrix=new R;this.bindMatrixInverse=new R;a=this.initBones();a=new Kc(a);this.bind(a,this.matrixWorld);this.normalizeSkinWeights()}function T(a){I.call(this);this.type=&quot;LineBasicMaterial&quot;;this.color=new G(16777215);this.linewidth=1;this.linejoin=this.linecap=&quot;round&quot;;this.lights=!1;</td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a)}function wa(a,b,c){if(1===c)return console.warn(&quot;THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.&quot;),new Y(a,b);H.call(this);this.type=&quot;Line&quot;;this.geometry=void 0!==a?a:new D;this.material=void 0!==b?b:new T({color:16777215*Math.random()})}function Y(a,b){wa.call(this,a,b);this.type=&quot;LineSegments&quot;}function yd(a,b){wa.call(this,a,b);this.type=&quot;LineLoop&quot;}function Ja(a){I.call(this);this.type=&quot;PointsMaterial&quot;;this.color=new G(16777215);</td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">sizeAttenuation</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lights</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a)}function Xb(a,b){H.call(this);this.type=&quot;Points&quot;;this.geometry=void 0!==a?a:new D;this.material=void 0!==b?b:new Ja({color:16777215*Math.random()})}function be(a,b,c,d,e,f,g,h,l){ea.call(this,a,b,c,d,e,f,g,h,l);this.generateMipmaps=!1}function Yb(a,b,c,d,e,f,g,h,l,m,v,n){ea.call(this,null,f,g,h,l,m,d,e,v,n);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1}function Lc(a,</td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line">b,c,d,e,f,g,h,l,m){m<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>m<span class="pl-k">?</span>m<span class="pl-k">:</span><span class="pl-c1">1026</span>;<span class="pl-k">if</span>(<span class="pl-c1">1026</span><span class="pl-k">!==</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1027</span><span class="pl-k">!==</span>m)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat<span class="pl-pds">&quot;</span></span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1026</span><span class="pl-k">===</span>m<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">1012</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1027</span><span class="pl-k">===</span>m<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">1020</span>);<span class="pl-smi">ea</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,<span class="pl-c1">null</span>,d,e,f,g,h,m,c,l);<span class="pl-c1">this</span>.<span class="pl-smi">image</span><span class="pl-k">=</span>{width<span class="pl-k">:</span>a,height<span class="pl-k">:</span>b};<span class="pl-c1">this</span>.<span class="pl-smi">magFilter</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>g<span class="pl-k">?</span>g<span class="pl-k">:</span><span class="pl-c1">1003</span>;<span class="pl-c1">this</span>.<span class="pl-smi">minFilter</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>h<span class="pl-k">?</span>h<span class="pl-k">:</span><span class="pl-c1">1003</span>;<span class="pl-c1">this</span>.<span class="pl-smi">generateMipmaps</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">flipY</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}function Zb(a){D.call(this);this.type=&quot;WireframeGeometry&quot;;var b=[],c,d,e,f=[0,0],g={},h=[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;];if(a&amp;&amp;a.isGeometry){var l=</td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">faces</span>;<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;m<span class="pl-k">&lt;</span>d;m<span class="pl-k">++</span>){<span class="pl-k">var</span> v<span class="pl-k">=</span>l[m];<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>v[h[c]];<span class="pl-k">var</span> t<span class="pl-k">=</span>v[h[(c<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">3</span>]];f[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(n,t);f[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(n,t);n<span class="pl-k">=</span>f[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f[<span class="pl-c1">1</span>];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>g[n]<span class="pl-k">&amp;&amp;</span>(g[n]<span class="pl-k">=</span>{index1<span class="pl-k">:</span>f[<span class="pl-c1">0</span>],index2<span class="pl-k">:</span>f[<span class="pl-c1">1</span>]})}}<span class="pl-k">for</span>(n <span class="pl-k">in</span> g)m<span class="pl-k">=</span>g[n],h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">m</span>.<span class="pl-smi">index1</span>],<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,<span class="pl-smi">h</span>.<span class="pl-c1">z</span>),h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">m</span>.<span class="pl-smi">index2</span>],<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,<span class="pl-smi">h</span>.<span class="pl-c1">z</span>)}<span class="pl-k">else</span> <span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">isBufferGeometry</span>)<span class="pl-k">if</span>(h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">index</span>){l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>;v<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">index</span>;<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">groups</span>;<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">q</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span>[{start<span class="pl-k">:</span><span class="pl-c1">0</span>,count<span class="pl-k">:</span><span class="pl-smi">v</span>.<span class="pl-smi">count</span>,materialIndex<span class="pl-k">:</span><span class="pl-c1">0</span>}]);a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>e;<span class="pl-k">++</span>a)<span class="pl-k">for</span>(m<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line">q[a],c<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">start</span>,d<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">count</span>,m<span class="pl-k">=</span>c,d<span class="pl-k">=</span>c<span class="pl-k">+</span>d;m<span class="pl-k">&lt;</span>d;m<span class="pl-k">+=</span><span class="pl-c1">3</span>)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)n<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">getX</span>(m<span class="pl-k">+</span>c),t<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-en">getX</span>(m<span class="pl-k">+</span>(c<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">3</span>),f[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(n,t),f[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(n,t),n<span class="pl-k">=</span>f[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>f[<span class="pl-c1">1</span>],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>g[n]<span class="pl-k">&amp;&amp;</span>(g[n]<span class="pl-k">=</span>{index1<span class="pl-k">:</span>f[<span class="pl-c1">0</span>],index2<span class="pl-k">:</span>f[<span class="pl-c1">1</span>]});<span class="pl-k">for</span>(n <span class="pl-k">in</span> g)m<span class="pl-k">=</span>g[n],<span class="pl-smi">h</span>.<span class="pl-en">fromBufferAttribute</span>(l,<span class="pl-smi">m</span>.<span class="pl-smi">index1</span>),<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,<span class="pl-smi">h</span>.<span class="pl-c1">z</span>),<span class="pl-smi">h</span>.<span class="pl-en">fromBufferAttribute</span>(l,<span class="pl-smi">m</span>.<span class="pl-smi">index2</span>),<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,<span class="pl-smi">h</span>.<span class="pl-c1">z</span>)}<span class="pl-k">else</span> <span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>,m<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">count</span><span class="pl-k">/</span><span class="pl-c1">3</span>;m<span class="pl-k">&lt;</span>d;m<span class="pl-k">++</span>)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)g<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span>m<span class="pl-k">+</span>c,<span class="pl-smi">h</span>.<span class="pl-en">fromBufferAttribute</span>(l,g),<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,<span class="pl-smi">h</span>.<span class="pl-c1">z</span>),g<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span>m<span class="pl-k">+</span>(c<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">3</span>,<span class="pl-smi">h</span>.<span class="pl-en">fromBufferAttribute</span>(l,g),<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,</td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-c1">y</span>,<span class="pl-smi">h</span>.<span class="pl-c1">z</span>);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(b,<span class="pl-c1">3</span>))}function Mc(a,b,c){P.call(this);this.type=&quot;ParametricGeometry&quot;;this.parameters={func:a,slices:b,stacks:c};this.fromBufferGeometry(new $b(a,b,c));this.mergeVertices()}function $b(a,b,c){D.call(this);this.type=&quot;ParametricBufferGeometry&quot;;this.parameters={func:a,slices:b,stacks:c};var d=[],e=[],f=[],g=[],h=new p,l=new p,m=new p,v=new p,n=new p,t,q;3&gt;a.length&amp;&amp;console.error(&quot;THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.&quot;);</td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> k<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;=</span>c;t<span class="pl-k">++</span>){<span class="pl-k">var</span> u<span class="pl-k">=</span>t<span class="pl-k">/</span>c;<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-c1">0</span>;q<span class="pl-k">&lt;=</span>b;q<span class="pl-k">++</span>){<span class="pl-k">var</span> y<span class="pl-k">=</span>q<span class="pl-k">/</span>b;<span class="pl-en">a</span>(y,u,l);<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-smi">l</span>.<span class="pl-c1">x</span>,<span class="pl-smi">l</span>.<span class="pl-c1">y</span>,<span class="pl-smi">l</span>.<span class="pl-c1">z</span>);<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>y<span class="pl-k">-</span><span class="pl-c1">1E-5</span><span class="pl-k">?</span>(<span class="pl-en">a</span>(y<span class="pl-k">-</span><span class="pl-c1">1E-5</span>,u,m),<span class="pl-smi">v</span>.<span class="pl-en">subVectors</span>(l,m))<span class="pl-k">:</span>(<span class="pl-en">a</span>(y<span class="pl-k">+</span><span class="pl-c1">1E-5</span>,u,m),<span class="pl-smi">v</span>.<span class="pl-en">subVectors</span>(m,l));<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>u<span class="pl-k">-</span><span class="pl-c1">1E-5</span><span class="pl-k">?</span>(<span class="pl-en">a</span>(y,u<span class="pl-k">-</span><span class="pl-c1">1E-5</span>,m),<span class="pl-smi">n</span>.<span class="pl-en">subVectors</span>(l,m))<span class="pl-k">:</span>(<span class="pl-en">a</span>(y,u<span class="pl-k">+</span><span class="pl-c1">1E-5</span>,m),<span class="pl-smi">n</span>.<span class="pl-en">subVectors</span>(m,l));<span class="pl-smi">h</span>.<span class="pl-en">crossVectors</span>(v,n).<span class="pl-c1">normalize</span>();<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,<span class="pl-smi">h</span>.<span class="pl-c1">z</span>);<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(y,u)}}<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span>c;t<span class="pl-k">++</span>)<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-c1">0</span>;q<span class="pl-k">&lt;</span>b;q<span class="pl-k">++</span>)a<span class="pl-k">=</span>t<span class="pl-k">*</span>k<span class="pl-k">+</span>q<span class="pl-k">+</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span>(t<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>k<span class="pl-k">+</span>q<span class="pl-k">+</span><span class="pl-c1">1</span>,l<span class="pl-k">=</span>(t<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>k<span class="pl-k">+</span>q,<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(t<span class="pl-k">*</span>k<span class="pl-k">+</span>q,a,l),<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(a,h,l);<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(d);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(e,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">z</span>(f,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(g,<span class="pl-c1">2</span>))}function Nc(a,b,c,d){P.call(this);this.type=&quot;PolyhedronGeometry&quot;;this.parameters={vertices:a,indices:b,radius:c,detail:d};this.fromBufferGeometry(new xa(a,b,c,d));this.mergeVertices()}function xa(a,b,c,d){function e(a){h.push(a.x,a.y,a.z)}function f(b,c){b*=3;c.x=a[b+0];c.y=a[b+1];c.z=a[b+2]}function g(a,b,c,d){0&gt;d&amp;&amp;1===a.x&amp;&amp;(l[b]=a.x-1);0===c.x&amp;&amp;0===c.z&amp;&amp;(l[b]=d/2/Math.PI+.5)}D.call(this);this.type=&quot;PolyhedronBufferGeometry&quot;;this.parameters={vertices:a,</td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code blob-code-inner js-file-line">indices<span class="pl-k">:</span>b,radius<span class="pl-k">:</span>c,detail<span class="pl-k">:</span>d};c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">1</span>;d<span class="pl-k">=</span>d<span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> h<span class="pl-k">=</span>[],l<span class="pl-k">=</span>[];(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;h<span class="pl-k">+=</span><span class="pl-c1">3</span>){<span class="pl-en">f</span>(b[h<span class="pl-k">+</span><span class="pl-c1">0</span>],c);<span class="pl-en">f</span>(b[h<span class="pl-k">+</span><span class="pl-c1">1</span>],d);<span class="pl-en">f</span>(b[h<span class="pl-k">+</span><span class="pl-c1">2</span>],g);<span class="pl-k">var</span> l,m,k<span class="pl-k">=</span>c,w<span class="pl-k">=</span>d,x<span class="pl-k">=</span>g,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>,a),<span class="pl-c1">C</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;=</span><span class="pl-c1">A</span>;m<span class="pl-k">++</span>){<span class="pl-c1">C</span>[m]<span class="pl-k">=</span>[];<span class="pl-k">var</span> <span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">clone</span>().<span class="pl-en">lerp</span>(x,m<span class="pl-k">/</span><span class="pl-c1">A</span>),<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-en">clone</span>().<span class="pl-en">lerp</span>(x,m<span class="pl-k">/</span><span class="pl-c1">A</span>),<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-c1">A</span><span class="pl-k">-</span>m;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;=</span><span class="pl-c1">M</span>;l<span class="pl-k">++</span>)<span class="pl-c1">C</span>[m][l]<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">===</span>l<span class="pl-k">&amp;&amp;</span>m<span class="pl-k">===</span><span class="pl-c1">A</span><span class="pl-k">?</span><span class="pl-c1">O</span><span class="pl-k">:</span><span class="pl-c1">O</span>.<span class="pl-en">clone</span>().<span class="pl-en">lerp</span>(<span class="pl-c1">Q</span>,l<span class="pl-k">/</span><span class="pl-c1">M</span>)}<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-c1">A</span>;m<span class="pl-k">++</span>)<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">*</span>(<span class="pl-c1">A</span><span class="pl-k">-</span>m)<span class="pl-k">-</span><span class="pl-c1">1</span>;l<span class="pl-k">++</span>)k<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(l<span class="pl-k">/</span><span class="pl-c1">2</span>),<span class="pl-c1">0</span><span class="pl-k">===</span>l<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">?</span>(<span class="pl-en">e</span>(<span class="pl-c1">C</span>[m][k<span class="pl-k">+</span><span class="pl-c1">1</span>]),<span class="pl-en">e</span>(<span class="pl-c1">C</span>[m<span class="pl-k">+</span><span class="pl-c1">1</span>][k]),<span class="pl-en">e</span>(<span class="pl-c1">C</span>[m][k]))<span class="pl-k">:</span>(<span class="pl-en">e</span>(<span class="pl-c1">C</span>[m][k<span class="pl-k">+</span><span class="pl-c1">1</span>]),<span class="pl-en">e</span>(<span class="pl-c1">C</span>[m<span class="pl-k">+</span><span class="pl-c1">1</span>][k<span class="pl-k">+</span><span class="pl-c1">1</span>]),<span class="pl-en">e</span>(<span class="pl-c1">C</span>[m<span class="pl-k">+</span><span class="pl-c1">1</span>][k]))}})(d);(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>;c<span class="pl-k">+=</span><span class="pl-c1">3</span>)<span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>h[c<span class="pl-k">+</span><span class="pl-c1">0</span>],<span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>h[c<span class="pl-k">+</span><span class="pl-c1">1</span>],<span class="pl-smi">b</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>h[c<span class="pl-k">+</span><span class="pl-c1">2</span>],<span class="pl-smi">b</span>.<span class="pl-c1">normalize</span>().<span class="pl-en">multiplyScalar</span>(a),h[c<span class="pl-k">+</span><span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>,h[c<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>,h[c<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>})(c);(<span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>;b<span class="pl-k">+=</span><span class="pl-c1">3</span>)<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>h[b<span class="pl-k">+</span><span class="pl-c1">0</span>],<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>h[b<span class="pl-k">+</span><span class="pl-c1">1</span>],<span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>h[b<span class="pl-k">+</span><span class="pl-c1">2</span>],<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-smi">a</span>.<span class="pl-c1">z</span>,<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">+</span><span class="pl-c1">.5</span>,<span class="pl-c1">1</span><span class="pl-k">-</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>))<span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">+</span><span class="pl-c1">.5</span>));a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,y<span class="pl-k">=</span><span class="pl-c1">0</span>,w<span class="pl-k">=</span><span class="pl-c1">0</span>;y<span class="pl-k">&lt;</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>;y<span class="pl-k">+=</span><span class="pl-c1">9</span>,w<span class="pl-k">+=</span><span class="pl-c1">6</span>){<span class="pl-smi">a</span>.<span class="pl-c1">set</span>(h[y<span class="pl-k">+</span><span class="pl-c1">0</span>],h[y<span class="pl-k">+</span><span class="pl-c1">1</span>],h[y<span class="pl-k">+</span><span class="pl-c1">2</span>]);<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(h[y<span class="pl-k">+</span><span class="pl-c1">3</span>],h[y<span class="pl-k">+</span><span class="pl-c1">4</span>],h[y<span class="pl-k">+</span><span class="pl-c1">5</span>]);<span class="pl-smi">c</span>.<span class="pl-c1">set</span>(h[y<span class="pl-k">+</span><span class="pl-c1">6</span>],h[y<span class="pl-k">+</span><span class="pl-c1">7</span>],h[y<span class="pl-k">+</span><span class="pl-c1">8</span>]);<span class="pl-smi">e</span>.<span class="pl-c1">set</span>(l[w<span class="pl-k">+</span><span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code blob-code-inner js-file-line">l[w<span class="pl-k">+</span><span class="pl-c1">1</span>]);<span class="pl-smi">f</span>.<span class="pl-c1">set</span>(l[w<span class="pl-k">+</span><span class="pl-c1">2</span>],l[w<span class="pl-k">+</span><span class="pl-c1">3</span>]);<span class="pl-smi">k</span>.<span class="pl-c1">set</span>(l[w<span class="pl-k">+</span><span class="pl-c1">4</span>],l[w<span class="pl-k">+</span><span class="pl-c1">5</span>]);<span class="pl-smi">d</span>.<span class="pl-en">copy</span>(a).<span class="pl-c1">add</span>(b).<span class="pl-c1">add</span>(c).<span class="pl-en">divideScalar</span>(<span class="pl-c1">3</span>);<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-smi">d</span>.<span class="pl-c1">z</span>,<span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span>);<span class="pl-en">g</span>(e,w<span class="pl-k">+</span><span class="pl-c1">0</span>,a,x);<span class="pl-en">g</span>(f,w<span class="pl-k">+</span><span class="pl-c1">2</span>,b,x);<span class="pl-en">g</span>(k,w<span class="pl-k">+</span><span class="pl-c1">4</span>,c,x)}<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;a<span class="pl-k">+=</span><span class="pl-c1">6</span>)b<span class="pl-k">=</span>l[a<span class="pl-k">+</span><span class="pl-c1">0</span>],c<span class="pl-k">=</span>l[a<span class="pl-k">+</span><span class="pl-c1">2</span>],d<span class="pl-k">=</span>l[a<span class="pl-k">+</span><span class="pl-c1">4</span>],e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(b,c,d),<span class="pl-c1">.9</span><span class="pl-k">&lt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(b,c,d)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">.1</span><span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">.2</span><span class="pl-k">&gt;</span>b<span class="pl-k">&amp;&amp;</span>(l[a<span class="pl-k">+</span><span class="pl-c1">0</span>]<span class="pl-k">+=</span><span class="pl-c1">1</span>),<span class="pl-c1">.2</span><span class="pl-k">&gt;</span>c<span class="pl-k">&amp;&amp;</span>(l[a<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">+=</span><span class="pl-c1">1</span>),<span class="pl-c1">.2</span><span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(l[a<span class="pl-k">+</span><span class="pl-c1">4</span>]<span class="pl-k">+=</span><span class="pl-c1">1</span>))})();<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(h,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(<span class="pl-smi">h</span>.<span class="pl-c1">slice</span>(),<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(l,<span class="pl-c1">2</span>));<span class="pl-c1">0</span><span class="pl-k">===</span>d<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">computeVertexNormals</span>()<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">normalizeNormals</span>()}function Oc(a,</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code blob-code-inner js-file-line">b){<span class="pl-c1">P</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>TetrahedronGeometry<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span><span class="pl-k">=</span>{radius<span class="pl-k">:</span>a,detail<span class="pl-k">:</span>b};<span class="pl-c1">this</span>.<span class="pl-en">fromBufferGeometry</span>(<span class="pl-k">new</span> <span class="pl-en">ac</span>(a,b));<span class="pl-c1">this</span>.<span class="pl-en">mergeVertices</span>()}function ac(a,b){xa.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type=&quot;TetrahedronBufferGeometry&quot;;this.parameters={radius:a,detail:b}}function Pc(a,b){P.call(this);this.type=&quot;OctahedronGeometry&quot;;this.parameters={radius:a,detail:b};this.fromBufferGeometry(new ub(a,b));this.mergeVertices()}function ub(a,b){xa.call(this,[1,0,0,</td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code blob-code-inner js-file-line"><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>],[<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">0</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>,<span class="pl-c1">0</span>,<span class="pl-c1">3</span>,<span class="pl-c1">5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">5</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">5</span>,<span class="pl-c1">1</span>,<span class="pl-c1">5</span>,<span class="pl-c1">3</span>,<span class="pl-c1">1</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">1</span>,<span class="pl-c1">4</span>,<span class="pl-c1">2</span>],a,b);<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>OctahedronBufferGeometry<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span><span class="pl-k">=</span>{radius<span class="pl-k">:</span>a,detail<span class="pl-k">:</span>b}}function Qc(a,b){P.call(this);this.type=&quot;IcosahedronGeometry&quot;;this.parameters={radius:a,detail:b};this.fromBufferGeometry(new bc(a,b));this.mergeVertices()}function bc(a,b){var c=(1+Math.sqrt(5))/2;xa.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,</td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">11</span>,<span class="pl-c1">4</span>,<span class="pl-c1">11</span>,<span class="pl-c1">10</span>,<span class="pl-c1">2</span>,<span class="pl-c1">10</span>,<span class="pl-c1">7</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">1</span>,<span class="pl-c1">8</span>,<span class="pl-c1">3</span>,<span class="pl-c1">9</span>,<span class="pl-c1">4</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">2</span>,<span class="pl-c1">6</span>,<span class="pl-c1">3</span>,<span class="pl-c1">6</span>,<span class="pl-c1">8</span>,<span class="pl-c1">3</span>,<span class="pl-c1">8</span>,<span class="pl-c1">9</span>,<span class="pl-c1">4</span>,<span class="pl-c1">9</span>,<span class="pl-c1">5</span>,<span class="pl-c1">2</span>,<span class="pl-c1">4</span>,<span class="pl-c1">11</span>,<span class="pl-c1">6</span>,<span class="pl-c1">2</span>,<span class="pl-c1">10</span>,<span class="pl-c1">8</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">9</span>,<span class="pl-c1">8</span>,<span class="pl-c1">1</span>],a,b);<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>IcosahedronBufferGeometry<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span><span class="pl-k">=</span>{radius<span class="pl-k">:</span>a,detail<span class="pl-k">:</span>b}}function Rc(a,b){P.call(this);this.type=&quot;DodecahedronGeometry&quot;;this.parameters={radius:a,detail:b};this.fromBufferGeometry(new cc(a,b));this.mergeVertices()}function cc(a,b){var c=(1+Math.sqrt(5))/2,d=1/c;xa.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,</td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,<span class="pl-k">-</span>c,<span class="pl-c1">0</span>,<span class="pl-k">-</span>d,c,<span class="pl-c1">0</span>,<span class="pl-k">-</span>d,<span class="pl-k">-</span>c,<span class="pl-c1">0</span>,d,c,<span class="pl-c1">0</span>,d],[<span class="pl-c1">3</span>,<span class="pl-c1">11</span>,<span class="pl-c1">7</span>,<span class="pl-c1">3</span>,<span class="pl-c1">7</span>,<span class="pl-c1">15</span>,<span class="pl-c1">3</span>,<span class="pl-c1">15</span>,<span class="pl-c1">13</span>,<span class="pl-c1">7</span>,<span class="pl-c1">19</span>,<span class="pl-c1">17</span>,<span class="pl-c1">7</span>,<span class="pl-c1">17</span>,<span class="pl-c1">6</span>,<span class="pl-c1">7</span>,<span class="pl-c1">6</span>,<span class="pl-c1">15</span>,<span class="pl-c1">17</span>,<span class="pl-c1">4</span>,<span class="pl-c1">8</span>,<span class="pl-c1">17</span>,<span class="pl-c1">8</span>,<span class="pl-c1">10</span>,<span class="pl-c1">17</span>,<span class="pl-c1">10</span>,<span class="pl-c1">6</span>,<span class="pl-c1">8</span>,<span class="pl-c1">0</span>,<span class="pl-c1">16</span>,<span class="pl-c1">8</span>,<span class="pl-c1">16</span>,<span class="pl-c1">2</span>,<span class="pl-c1">8</span>,<span class="pl-c1">2</span>,<span class="pl-c1">10</span>,<span class="pl-c1">0</span>,<span class="pl-c1">12</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">18</span>,<span class="pl-c1">0</span>,<span class="pl-c1">18</span>,<span class="pl-c1">16</span>,<span class="pl-c1">6</span>,<span class="pl-c1">10</span>,<span class="pl-c1">2</span>,<span class="pl-c1">6</span>,<span class="pl-c1">2</span>,<span class="pl-c1">13</span>,<span class="pl-c1">6</span>,<span class="pl-c1">13</span>,<span class="pl-c1">15</span>,<span class="pl-c1">2</span>,<span class="pl-c1">16</span>,<span class="pl-c1">18</span>,<span class="pl-c1">2</span>,<span class="pl-c1">18</span>,<span class="pl-c1">3</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">13</span>,<span class="pl-c1">18</span>,<span class="pl-c1">1</span>,<span class="pl-c1">9</span>,<span class="pl-c1">18</span>,<span class="pl-c1">9</span>,<span class="pl-c1">11</span>,<span class="pl-c1">18</span>,<span class="pl-c1">11</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>,<span class="pl-c1">14</span>,<span class="pl-c1">12</span>,<span class="pl-c1">4</span>,<span class="pl-c1">12</span>,<span class="pl-c1">0</span>,<span class="pl-c1">4</span>,<span class="pl-c1">0</span>,<span class="pl-c1">8</span>,<span class="pl-c1">11</span>,<span class="pl-c1">9</span>,<span class="pl-c1">5</span>,<span class="pl-c1">11</span>,<span class="pl-c1">5</span>,<span class="pl-c1">19</span>,<span class="pl-c1">11</span>,<span class="pl-c1">19</span>,<span class="pl-c1">7</span>,<span class="pl-c1">19</span>,<span class="pl-c1">5</span>,<span class="pl-c1">14</span>,<span class="pl-c1">19</span>,<span class="pl-c1">14</span>,<span class="pl-c1">4</span>,<span class="pl-c1">19</span>,<span class="pl-c1">4</span>,<span class="pl-c1">17</span>,<span class="pl-c1">1</span>,<span class="pl-c1">12</span>,<span class="pl-c1">14</span>,<span class="pl-c1">1</span>,<span class="pl-c1">14</span>,<span class="pl-c1">5</span>,<span class="pl-c1">1</span>,<span class="pl-c1">5</span>,<span class="pl-c1">9</span>],a,b);<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>DodecahedronBufferGeometry<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span><span class="pl-k">=</span>{radius<span class="pl-k">:</span>a,detail<span class="pl-k">:</span>b}}function Sc(a,b,c,d,e,f){P.call(this);this.type=&quot;TubeGeometry&quot;;this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,</td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code blob-code-inner js-file-line">closed<span class="pl-k">:</span>e};<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.TubeGeometry: taper has been removed.<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">dc</span>(a,b,c,d,e);<span class="pl-c1">this</span>.<span class="pl-smi">tangents</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tangents</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normals</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normals</span>;<span class="pl-c1">this</span>.<span class="pl-smi">binormals</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">binormals</span>;<span class="pl-c1">this</span>.<span class="pl-en">fromBufferGeometry</span>(a);<span class="pl-c1">this</span>.<span class="pl-en">mergeVertices</span>()}function dc(a,b,c,d,e){function f(e){v=a.getPointAt(e/b,v);var f=g.normals[e];e=g.binormals[e];for(k=0;k&lt;=d;k++){var m=k/d*Math.PI*2,n=Math.sin(m);m=-Math.cos(m);l.x=m*f.x+n*e.x;l.y=m*f.y+n*e.y;l.z=m*f.z+n*e.z;l.normalize();r.push(l.x,l.y,l.z);h.x=v.x+c*l.x;h.y=v.y+c*l.y;h.z=</td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">v</span>.<span class="pl-c1">z</span><span class="pl-k">+</span>c<span class="pl-k">*</span><span class="pl-smi">l</span>.<span class="pl-c1">z</span>;<span class="pl-smi">q</span>.<span class="pl-c1">push</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,<span class="pl-smi">h</span>.<span class="pl-c1">z</span>)}}<span class="pl-c1">D</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>TubeBufferGeometry<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span><span class="pl-k">=</span>{path<span class="pl-k">:</span>a,tubularSegments<span class="pl-k">:</span>b,radius<span class="pl-k">:</span>c,radialSegments<span class="pl-k">:</span>d,closed<span class="pl-k">:</span>e};b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">64</span>;c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">1</span>;d<span class="pl-k">=</span>d<span class="pl-k">||</span><span class="pl-c1">8</span>;e<span class="pl-k">=</span>e<span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">computeFrenetFrames</span>(b,e);<span class="pl-c1">this</span>.<span class="pl-smi">tangents</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">tangents</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normals</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">normals</span>;<span class="pl-c1">this</span>.<span class="pl-smi">binormals</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">binormals</span>;<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,v<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,n,k,q<span class="pl-k">=</span>[],r<span class="pl-k">=</span>[],u<span class="pl-k">=</span>[],y<span class="pl-k">=</span>[];<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span>b;n<span class="pl-k">++</span>)<span class="pl-en">f</span>(n);<span class="pl-en">f</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span>e<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;=</span>b;n<span class="pl-k">++</span>)<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;=</span>d;k<span class="pl-k">++</span>)<span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>n<span class="pl-k">/</span>b,<span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>k<span class="pl-k">/</span>d,<span class="pl-smi">u</span>.<span class="pl-c1">push</span>(<span class="pl-smi">m</span>.<span class="pl-c1">x</span>,<span class="pl-smi">m</span>.<span class="pl-c1">y</span>);(<span class="pl-k">function</span>(){<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">1</span>;k<span class="pl-k">&lt;=</span>b;k<span class="pl-k">++</span>)<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">1</span>;n<span class="pl-k">&lt;=</span>d;n<span class="pl-k">++</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code blob-code-inner js-file-line">(d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>k<span class="pl-k">+</span>(n<span class="pl-k">-</span><span class="pl-c1">1</span>),c<span class="pl-k">=</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>k<span class="pl-k">+</span>n,e<span class="pl-k">=</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(k<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>n;<span class="pl-smi">y</span>.<span class="pl-c1">push</span>((d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(k<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>(n<span class="pl-k">-</span><span class="pl-c1">1</span>),a,e);<span class="pl-smi">y</span>.<span class="pl-c1">push</span>(a,c,e)}})();<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(y);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(q,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(r,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(u,<span class="pl-c1">2</span>))}function Tc(a,b,c,d,e,f,g){P.call(this);this.type=&quot;TorusKnotGeometry&quot;;this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};void 0!==g&amp;&amp;console.warn(&quot;THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.&quot;);this.fromBufferGeometry(new ec(a,</td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code blob-code-inner js-file-line">b,c,d,e,f));<span class="pl-c1">this</span>.<span class="pl-en">mergeVertices</span>()}function ec(a,b,c,d,e,f){function g(a,b,c,d,e){var f=Math.sin(a);b=c/b*a;c=Math.cos(b);e.x=d*(2+c)*.5*Math.cos(a);e.y=d*(2+c)*f*.5;e.z=d*Math.sin(b)*.5}D.call(this);this.type=&quot;TorusKnotBufferGeometry&quot;;this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f};a=a||1;b=b||.4;c=Math.floor(c)||64;d=Math.floor(d)||8;e=e||2;f=f||3;var h=[],l=[],m=[],v=[],n,k=new p,q=new p,r=new p,u=new p,y=new p,w=new p,x=new p;for(n=0;n&lt;=c;++n){var A=n/c*e*Math.PI*2;</td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code blob-code-inner js-file-line"><span class="pl-en">g</span>(<span class="pl-c1">A</span>,e,f,a,r);<span class="pl-en">g</span>(<span class="pl-c1">A</span><span class="pl-k">+</span><span class="pl-c1">.01</span>,e,f,a,u);<span class="pl-smi">w</span>.<span class="pl-en">subVectors</span>(u,r);<span class="pl-smi">x</span>.<span class="pl-en">addVectors</span>(u,r);<span class="pl-smi">y</span>.<span class="pl-en">crossVectors</span>(w,x);<span class="pl-smi">x</span>.<span class="pl-en">crossVectors</span>(y,w);<span class="pl-smi">y</span>.<span class="pl-c1">normalize</span>();<span class="pl-smi">x</span>.<span class="pl-c1">normalize</span>();<span class="pl-k">for</span>(<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">A</span><span class="pl-k">&lt;=</span>d;<span class="pl-k">++</span><span class="pl-c1">A</span>){<span class="pl-k">var</span> <span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">A</span><span class="pl-k">/</span>d<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">*</span><span class="pl-c1">2</span>,<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-k">-</span>b<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-c1">C</span>);<span class="pl-c1">C</span><span class="pl-k">=</span>b<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-c1">C</span>);<span class="pl-smi">k</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>(<span class="pl-c1">O</span><span class="pl-k">*</span><span class="pl-smi">x</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">C</span><span class="pl-k">*</span><span class="pl-smi">y</span>.<span class="pl-c1">x</span>);<span class="pl-smi">k</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>(<span class="pl-c1">O</span><span class="pl-k">*</span><span class="pl-smi">x</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">C</span><span class="pl-k">*</span><span class="pl-smi">y</span>.<span class="pl-c1">y</span>);<span class="pl-smi">k</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">z</span><span class="pl-k">+</span>(<span class="pl-c1">O</span><span class="pl-k">*</span><span class="pl-smi">x</span>.<span class="pl-c1">z</span><span class="pl-k">+</span><span class="pl-c1">C</span><span class="pl-k">*</span><span class="pl-smi">y</span>.<span class="pl-c1">z</span>);<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(<span class="pl-smi">k</span>.<span class="pl-c1">x</span>,<span class="pl-smi">k</span>.<span class="pl-c1">y</span>,<span class="pl-smi">k</span>.<span class="pl-c1">z</span>);<span class="pl-smi">q</span>.<span class="pl-en">subVectors</span>(k,r).<span class="pl-c1">normalize</span>();<span class="pl-smi">m</span>.<span class="pl-c1">push</span>(<span class="pl-smi">q</span>.<span class="pl-c1">x</span>,<span class="pl-smi">q</span>.<span class="pl-c1">y</span>,<span class="pl-smi">q</span>.<span class="pl-c1">z</span>);<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(n<span class="pl-k">/</span>c);<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(<span class="pl-c1">A</span><span class="pl-k">/</span>d)}}<span class="pl-k">for</span>(<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">A</span><span class="pl-k">&lt;=</span>c;<span class="pl-c1">A</span><span class="pl-k">++</span>)<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">1</span>;n<span class="pl-k">&lt;=</span>d;n<span class="pl-k">++</span>)a<span class="pl-k">=</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-c1">A</span><span class="pl-k">+</span>(n<span class="pl-k">-</span><span class="pl-c1">1</span>),b<span class="pl-k">=</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-c1">A</span><span class="pl-k">+</span>n,e<span class="pl-k">=</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(<span class="pl-c1">A</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>n,<span class="pl-smi">h</span>.<span class="pl-c1">push</span>((d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(<span class="pl-c1">A</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>(n<span class="pl-k">-</span><span class="pl-c1">1</span>),a,e),<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(a,b,e);<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(h);</td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(l,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(m,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(v,<span class="pl-c1">2</span>))}function Uc(a,b,c,d,e){P.call(this);this.type=&quot;TorusGeometry&quot;;this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};this.fromBufferGeometry(new fc(a,b,c,d,e));this.mergeVertices()}function fc(a,b,c,d,e){D.call(this);this.type=&quot;TorusBufferGeometry&quot;;this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||1;b=b||.4;c=Math.floor(c)||8;d=Math.floor(d)||</td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">6</span>;e<span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span>[],g<span class="pl-k">=</span>[],h<span class="pl-k">=</span>[],l<span class="pl-k">=</span>[],m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,v<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,n<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,k,q;<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;=</span>c;k<span class="pl-k">++</span>)<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-c1">0</span>;q<span class="pl-k">&lt;=</span>d;q<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>q<span class="pl-k">/</span>d<span class="pl-k">*</span>e,u<span class="pl-k">=</span>k<span class="pl-k">/</span>c<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">*</span><span class="pl-c1">2</span>;<span class="pl-smi">v</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>(a<span class="pl-k">+</span>b<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(u))<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(r);<span class="pl-smi">v</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>(a<span class="pl-k">+</span>b<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(u))<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(r);<span class="pl-smi">v</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>b<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(u);<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-smi">v</span>.<span class="pl-c1">x</span>,<span class="pl-smi">v</span>.<span class="pl-c1">y</span>,<span class="pl-smi">v</span>.<span class="pl-c1">z</span>);<span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(r);<span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(r);<span class="pl-smi">n</span>.<span class="pl-en">subVectors</span>(v,m).<span class="pl-c1">normalize</span>();<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-smi">n</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-c1">y</span>,<span class="pl-smi">n</span>.<span class="pl-c1">z</span>);<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(q<span class="pl-k">/</span>d);<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(k<span class="pl-k">/</span>c)}<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">1</span>;k<span class="pl-k">&lt;=</span>c;k<span class="pl-k">++</span>)<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-c1">1</span>;q<span class="pl-k">&lt;=</span>d;q<span class="pl-k">++</span>)a<span class="pl-k">=</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(k<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>q<span class="pl-k">-</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>(k<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>q,e<span class="pl-k">=</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>k<span class="pl-k">+</span>q,<span class="pl-smi">f</span>.<span class="pl-c1">push</span>((d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>k<span class="pl-k">+</span>q<span class="pl-k">-</span><span class="pl-c1">1</span>,a,e),<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(a,b,e);<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(f);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">z</span>(g,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(h,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(l,<span class="pl-c1">2</span>))}function cf(a,b,c,d,e){for(var f,g=0,h=b,l=c-d;h&lt;c;h+=d)g+=(a[l]-a[h])*(a[h+1]+a[l+1]),l=h;if(e===0&lt;g)for(e=b;e&lt;c;e+=d)f=df(e,a[e],a[e+1],f);else for(e=c-d;e&gt;=b;e-=d)f=df(e,a[e],a[e+1],f);f&amp;&amp;vb(f,f.next)&amp;&amp;(Vc(f),f=f.next);return f}function Wc(a,b){if(!a)return a;b||(b=a);do{var c=!1;if(a.steiner||!vb(a,a.next)&amp;&amp;0!==oa(a.prev,a,a.next))a=a.next;else{Vc(a);a=b=a.prev;if(a===a.next)break;c=!0}}while(c||a!==b);return b}</td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Xc</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-k">if</span>(a){<span class="pl-k">if</span>(<span class="pl-k">!</span>g<span class="pl-k">&amp;&amp;</span>f){<span class="pl-k">var</span> h<span class="pl-k">=</span>a,l<span class="pl-k">=</span>h;<span class="pl-k">do</span> <span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">l</span>.<span class="pl-c1">z</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">l</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-en">ce</span>(<span class="pl-smi">l</span>.<span class="pl-c1">x</span>,<span class="pl-smi">l</span>.<span class="pl-c1">y</span>,d,e,f)),<span class="pl-smi">l</span>.<span class="pl-smi">prevZ</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">prev</span>,l<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">nextZ</span><span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">next</span>;<span class="pl-k">while</span>(l<span class="pl-k">!==</span>h);<span class="pl-smi">l</span>.<span class="pl-smi">prevZ</span>.<span class="pl-smi">nextZ</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">l</span>.<span class="pl-smi">prevZ</span><span class="pl-k">=</span><span class="pl-c1">null</span>;h<span class="pl-k">=</span>l;<span class="pl-k">var</span> m,v,n,k,q<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">do</span>{l<span class="pl-k">=</span>h;<span class="pl-k">var</span> r<span class="pl-k">=</span>h<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">for</span>(v<span class="pl-k">=</span><span class="pl-c1">0</span>;l;){v<span class="pl-k">++</span>;<span class="pl-k">var</span> p<span class="pl-k">=</span>l;<span class="pl-k">for</span>(m<span class="pl-k">=</span>n<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>q<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">++</span>,p<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">nextZ</span>,p);m<span class="pl-k">++</span>);<span class="pl-k">for</span>(k<span class="pl-k">=</span>q;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>n<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>k<span class="pl-k">&amp;&amp;</span>p;)<span class="pl-c1">0</span><span class="pl-k">!==</span>n<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>k<span class="pl-k">||!</span>p<span class="pl-k">||</span><span class="pl-smi">l</span>.<span class="pl-c1">z</span><span class="pl-k">&lt;=</span><span class="pl-smi">p</span>.<span class="pl-c1">z</span>)<span class="pl-k">?</span>(m<span class="pl-k">=</span>l,l<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">nextZ</span>,n<span class="pl-k">--</span>)<span class="pl-k">:</span>(m<span class="pl-k">=</span>p,p<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">nextZ</span>,k<span class="pl-k">--</span>),r<span class="pl-k">?</span><span class="pl-smi">r</span>.<span class="pl-smi">nextZ</span><span class="pl-k">=</span>m<span class="pl-k">:</span>h<span class="pl-k">=</span>m,<span class="pl-smi">m</span>.<span class="pl-smi">prevZ</span><span class="pl-k">=</span>r,r<span class="pl-k">=</span>m;l<span class="pl-k">=</span>p}<span class="pl-smi">r</span>.<span class="pl-smi">nextZ</span><span class="pl-k">=</span><span class="pl-c1">null</span>;q<span class="pl-k">*=</span><span class="pl-c1">2</span>}<span class="pl-k">while</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span>v)}<span class="pl-k">for</span>(h<span class="pl-k">=</span>a;<span class="pl-smi">a</span>.<span class="pl-smi">prev</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">next</span>;){l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">prev</span>;p<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">next</span>;<span class="pl-k">if</span>(f)a<span class="pl-k">:</span>{r<span class="pl-k">=</span>a;k<span class="pl-k">=</span>d;<span class="pl-k">var</span> y<span class="pl-k">=</span>e,w<span class="pl-k">=</span>f;v<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">prev</span>;</td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">=</span>r;q<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">next</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-en">oa</span>(v,n,q))r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-smi">v</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-smi">v</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-smi">v</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-smi">v</span>.<span class="pl-c1">y</span><span class="pl-k">:</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span><span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">:</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span>;m<span class="pl-k">=</span><span class="pl-en">ce</span>(<span class="pl-smi">v</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-smi">v</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-smi">v</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span>,<span class="pl-smi">v</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-smi">v</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-smi">v</span>.<span class="pl-c1">y</span><span class="pl-k">:</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span><span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">:</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span>,k,y,w);k<span class="pl-k">=</span><span class="pl-en">ce</span>(x,<span class="pl-c1">A</span>,k,y,w);<span class="pl-k">for</span>(y<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">nextZ</span>;y<span class="pl-k">&amp;&amp;</span><span class="pl-smi">y</span>.<span class="pl-c1">z</span><span class="pl-k">&lt;=</span>k;){<span class="pl-k">if</span>(y<span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-smi">prev</span><span class="pl-k">&amp;&amp;</span>y<span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-c1">next</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">zd</span>(<span class="pl-smi">v</span>.<span class="pl-c1">x</span>,<span class="pl-smi">v</span>.<span class="pl-c1">y</span>,<span class="pl-smi">n</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-c1">y</span>,<span class="pl-smi">q</span>.<span class="pl-c1">x</span>,<span class="pl-smi">q</span>.<span class="pl-c1">y</span>,<span class="pl-smi">y</span>.<span class="pl-c1">x</span>,<span class="pl-smi">y</span>.<span class="pl-c1">y</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-en">oa</span>(<span class="pl-smi">y</span>.<span class="pl-smi">prev</span>,y,<span class="pl-smi">y</span>.<span class="pl-c1">next</span>)){r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">break</span> a}y<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-smi">nextZ</span>}<span class="pl-k">for</span>(y<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">prevZ</span>;y<span class="pl-k">&amp;&amp;</span><span class="pl-smi">y</span>.<span class="pl-c1">z</span><span class="pl-k">&gt;=</span>m;){<span class="pl-k">if</span>(y<span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-smi">prev</span><span class="pl-k">&amp;&amp;</span>y<span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-c1">next</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">zd</span>(<span class="pl-smi">v</span>.<span class="pl-c1">x</span>,<span class="pl-smi">v</span>.<span class="pl-c1">y</span>,<span class="pl-smi">n</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-c1">y</span>,<span class="pl-smi">q</span>.<span class="pl-c1">x</span>,<span class="pl-smi">q</span>.<span class="pl-c1">y</span>,<span class="pl-smi">y</span>.<span class="pl-c1">x</span>,<span class="pl-smi">y</span>.<span class="pl-c1">y</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-en">oa</span>(<span class="pl-smi">y</span>.<span class="pl-smi">prev</span>,y,<span class="pl-smi">y</span>.<span class="pl-c1">next</span>)){r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">break</span> a}y<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">y</span>.<span class="pl-smi">prevZ</span>}r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}<span class="pl-k">else</span> a<span class="pl-k">:</span><span class="pl-k">if</span>(r<span class="pl-k">=</span>a,v<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">prev</span>,n<span class="pl-k">=</span>r,q<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">next</span>,<span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-en">oa</span>(v,n,q))r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span>{<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">next</span>.<span class="pl-c1">next</span>;m<span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-smi">prev</span>;){<span class="pl-k">if</span>(<span class="pl-en">zd</span>(<span class="pl-smi">v</span>.<span class="pl-c1">x</span>,<span class="pl-smi">v</span>.<span class="pl-c1">y</span>,<span class="pl-smi">n</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-c1">y</span>,<span class="pl-smi">q</span>.<span class="pl-c1">x</span>,<span class="pl-smi">q</span>.<span class="pl-c1">y</span>,<span class="pl-smi">m</span>.<span class="pl-c1">x</span>,<span class="pl-smi">m</span>.<span class="pl-c1">y</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-en">oa</span>(<span class="pl-smi">m</span>.<span class="pl-smi">prev</span>,m,<span class="pl-smi">m</span>.<span class="pl-c1">next</span>)){r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">break</span> a}m<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">next</span>}r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">if</span>(r)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">l</span>.<span class="pl-smi">i</span><span class="pl-k">/</span>c),<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">i</span><span class="pl-k">/</span>c),<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">p</span>.<span class="pl-smi">i</span><span class="pl-k">/</span>c),<span class="pl-en">Vc</span>(a),h<span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-c1">next</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(a<span class="pl-k">=</span>p,a<span class="pl-k">===</span>h){<span class="pl-k">if</span>(<span class="pl-k">!</span>g)<span class="pl-en">Xc</span>(<span class="pl-en">Wc</span>(a),b,c,d,e,f,<span class="pl-c1">1</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span>g){g<span class="pl-k">=</span>b;h<span class="pl-k">=</span>c;l<span class="pl-k">=</span>a;<span class="pl-k">do</span> p<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">prev</span>,r<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">next</span>.<span class="pl-c1">next</span>,<span class="pl-k">!</span><span class="pl-en">vb</span>(p,r)<span class="pl-k">&amp;&amp;</span><span class="pl-en">ef</span>(p,l,<span class="pl-smi">l</span>.<span class="pl-c1">next</span>,r)<span class="pl-k">&amp;&amp;</span><span class="pl-en">Yc</span>(p,r)<span class="pl-k">&amp;&amp;</span><span class="pl-en">Yc</span>(r,p)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-smi">p</span>.<span class="pl-smi">i</span><span class="pl-k">/</span>h),<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-smi">l</span>.<span class="pl-smi">i</span><span class="pl-k">/</span>h),<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-smi">r</span>.<span class="pl-smi">i</span><span class="pl-k">/</span>h),<span class="pl-en">Vc</span>(l),<span class="pl-en">Vc</span>(<span class="pl-smi">l</span>.<span class="pl-c1">next</span>),l<span class="pl-k">=</span>a<span class="pl-k">=</span>r),l<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">next</span>;<span class="pl-k">while</span>(l<span class="pl-k">!==</span>a);a<span class="pl-k">=</span>l;<span class="pl-en">Xc</span>(a,</td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code blob-code-inner js-file-line">b,c,d,e,f,<span class="pl-c1">2</span>)}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">2</span><span class="pl-k">===</span>g)a<span class="pl-k">:</span>{g<span class="pl-k">=</span>a;<span class="pl-k">do</span>{<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">next</span>.<span class="pl-c1">next</span>;h<span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">prev</span>;){<span class="pl-k">if</span>(l<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">i</span><span class="pl-k">!==</span><span class="pl-smi">h</span>.<span class="pl-smi">i</span>){l<span class="pl-k">=</span>g;p<span class="pl-k">=</span>h;<span class="pl-k">if</span>(r<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">next</span>.<span class="pl-smi">i</span><span class="pl-k">!==</span><span class="pl-smi">p</span>.<span class="pl-smi">i</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">prev</span>.<span class="pl-smi">i</span><span class="pl-k">!==</span><span class="pl-smi">p</span>.<span class="pl-smi">i</span>){b<span class="pl-k">:</span>{r<span class="pl-k">=</span>l;<span class="pl-k">do</span>{<span class="pl-k">if</span>(<span class="pl-smi">r</span>.<span class="pl-smi">i</span><span class="pl-k">!==</span><span class="pl-smi">l</span>.<span class="pl-smi">i</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-c1">next</span>.<span class="pl-smi">i</span><span class="pl-k">!==</span><span class="pl-smi">l</span>.<span class="pl-smi">i</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-smi">i</span><span class="pl-k">!==</span><span class="pl-smi">p</span>.<span class="pl-smi">i</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-c1">next</span>.<span class="pl-smi">i</span><span class="pl-k">!==</span><span class="pl-smi">p</span>.<span class="pl-smi">i</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">ef</span>(r,<span class="pl-smi">r</span>.<span class="pl-c1">next</span>,l,p)){r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span> b}r<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">next</span>}<span class="pl-k">while</span>(r<span class="pl-k">!==</span>l);r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}r<span class="pl-k">=</span><span class="pl-k">!</span>r}<span class="pl-k">if</span>(r<span class="pl-k">=</span>r<span class="pl-k">&amp;&amp;</span><span class="pl-en">Yc</span>(l,p)<span class="pl-k">&amp;&amp;</span><span class="pl-en">Yc</span>(p,l)){r<span class="pl-k">=</span>l;v<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;n<span class="pl-k">=</span>(<span class="pl-smi">l</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-c1">x</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>;p<span class="pl-k">=</span>(<span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-c1">y</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-k">do</span> <span class="pl-smi">r</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span>p<span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-c1">next</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span>p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-c1">next</span>.<span class="pl-c1">y</span><span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span>n<span class="pl-k">&lt;</span>(<span class="pl-smi">r</span>.<span class="pl-c1">next</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">r</span>.<span class="pl-c1">x</span>)<span class="pl-k">*</span>(p<span class="pl-k">-</span><span class="pl-smi">r</span>.<span class="pl-c1">y</span>)<span class="pl-k">/</span>(<span class="pl-smi">r</span>.<span class="pl-c1">next</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">r</span>.<span class="pl-c1">y</span>)<span class="pl-k">+</span><span class="pl-smi">r</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">=</span><span class="pl-k">!</span>v),r<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">next</span>;<span class="pl-k">while</span>(r<span class="pl-k">!==</span>l);r<span class="pl-k">=</span>v}l<span class="pl-k">=</span>r}<span class="pl-k">if</span>(l){a<span class="pl-k">=</span><span class="pl-en">ff</span>(g,h);g<span class="pl-k">=</span><span class="pl-en">Wc</span>(g,<span class="pl-smi">g</span>.<span class="pl-c1">next</span>);a<span class="pl-k">=</span><span class="pl-en">Wc</span>(a,<span class="pl-smi">a</span>.<span class="pl-c1">next</span>);<span class="pl-en">Xc</span>(g,b,c,d,e,</td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code blob-code-inner js-file-line">f);<span class="pl-en">Xc</span>(a,b,c,d,e,f);<span class="pl-k">break</span> a}h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">next</span>}g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">next</span>}<span class="pl-k">while</span>(g<span class="pl-k">!==</span>a)}<span class="pl-k">break</span>}}}}function Pg(a,b){return a.x-b.x}function Qg(a,b){var c=b,d=a.x,e=a.y,f=-Infinity;do{if(e&lt;=c.y&amp;&amp;e&gt;=c.next.y&amp;&amp;c.next.y!==c.y){var g=c.x+(e-c.y)*(c.next.x-c.x)/(c.next.y-c.y);if(g&lt;=d&amp;&amp;g&gt;f){f=g;if(g===d){if(e===c.y)return c;if(e===c.next.y)return c.next}var h=c.x&lt;c.next.x?c:c.next}}c=c.next}while(c!==b);if(!h)return null;if(d===f)return h.prev;b=h;g=h.x;var l=h.y,m=Infinity;for(c=h.next;c!==b;){if(d&gt;=c.x&amp;&amp;c.x&gt;=g&amp;&amp;d!==c.x&amp;&amp;zd(e&lt;l?d:f,e,</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code blob-code-inner js-file-line">g,l,e<span class="pl-k">&lt;</span>l<span class="pl-k">?</span>f<span class="pl-k">:</span>d,e,<span class="pl-smi">c</span>.<span class="pl-c1">x</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span>)){<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>)<span class="pl-k">/</span>(d<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>);(v<span class="pl-k">&lt;</span>m<span class="pl-k">||</span>v<span class="pl-k">===</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-smi">h</span>.<span class="pl-c1">x</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">Yc</span>(c,a)<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>c,m<span class="pl-k">=</span>v)}c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">next</span>}<span class="pl-k">return</span> h}function ce(a,b,c,d,e){a=32767*(a-c)*e;b=32767*(b-d)*e;a=(a|a&lt;&lt;8)&amp;16711935;a=(a|a&lt;&lt;4)&amp;252645135;a=(a|a&lt;&lt;2)&amp;858993459;b=(b|b&lt;&lt;8)&amp;16711935;b=(b|b&lt;&lt;4)&amp;252645135;b=(b|b&lt;&lt;2)&amp;858993459;return(a|a&lt;&lt;1)&amp;1431655765|((b|b&lt;&lt;1)&amp;1431655765)&lt;&lt;1}function Rg(a){var b=a,c=a;do b.x&lt;c.x&amp;&amp;(c=b),b=b.next;while(b!==a);return c}function zd(a,b,c,d,e,f,g,h){return 0&lt;=(e-g)*(b-h)-(a-g)*(f-h)&amp;&amp;0&lt;=(a-g)*(d-h)-(c-</td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code blob-code-inner js-file-line">g)<span class="pl-k">*</span>(b<span class="pl-k">-</span>h)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>(c<span class="pl-k">-</span>g)<span class="pl-k">*</span>(f<span class="pl-k">-</span>h)<span class="pl-k">-</span>(e<span class="pl-k">-</span>g)<span class="pl-k">*</span>(d<span class="pl-k">-</span>h)}function oa(a,b,c){return(b.y-a.y)*(c.x-b.x)-(b.x-a.x)*(c.y-b.y)}function vb(a,b){return a.x===b.x&amp;&amp;a.y===b.y}function ef(a,b,c,d){return vb(a,b)&amp;&amp;vb(c,d)||vb(a,d)&amp;&amp;vb(c,b)?!0:0&lt;oa(a,b,c)!==0&lt;oa(a,b,d)&amp;&amp;0&lt;oa(c,d,a)!==0&lt;oa(c,d,b)}function Yc(a,b){return 0&gt;oa(a.prev,a,a.next)?0&lt;=oa(a,b,a.next)&amp;&amp;0&lt;=oa(a,a.prev,b):0&gt;oa(a,b,a.prev)||0&gt;oa(a,a.next,b)}function ff(a,b){var c=new de(a.i,a.x,a.y),d=new de(b.i,b.x,b.y),e=a.next,f=b.prev;a.next=b;b.prev=a;c.next=e;e.prev=</td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code blob-code-inner js-file-line">c;<span class="pl-smi">d</span>.<span class="pl-c1">next</span><span class="pl-k">=</span>c;<span class="pl-smi">c</span>.<span class="pl-smi">prev</span><span class="pl-k">=</span>d;<span class="pl-smi">f</span>.<span class="pl-c1">next</span><span class="pl-k">=</span>d;<span class="pl-smi">d</span>.<span class="pl-smi">prev</span><span class="pl-k">=</span>f;<span class="pl-k">return</span> d}function df(a,b,c,d){a=new de(a,b,c);d?(a.next=d.next,a.prev=d,d.next.prev=a,d.next=a):(a.prev=a,a.next=a);return a}function Vc(a){a.next.prev=a.prev;a.prev.next=a.next;a.prevZ&amp;&amp;(a.prevZ.nextZ=a.nextZ);a.nextZ&amp;&amp;(a.nextZ.prevZ=a.prevZ)}function de(a,b,c){this.i=a;this.x=b;this.y=c;this.nextZ=this.prevZ=this.z=this.next=this.prev=null;this.steiner=!1}function gf(a){var b=a.length;2&lt;b&amp;&amp;a[b-1].equals(a[0])&amp;&amp;a.pop()}function hf(a,b){for(var c=0;c&lt;b.length;c++)a.push(b[c].x),</td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(b[c].<span class="pl-c1">y</span>)}function wb(a,b){P.call(this);this.type=&quot;ExtrudeGeometry&quot;;this.parameters={shapes:a,options:b};this.fromBufferGeometry(new Ta(a,b));this.mergeVertices()}function Ta(a,b){function c(a){function c(a,b,c){b||console.error(&quot;THREE.ExtrudeGeometry: vec does not exist&quot;);return b.clone().multiplyScalar(c).add(a)}function g(a,b,c){var d=a.x-b.x;var e=a.y-b.y;var f=c.x-a.x;var g=c.y-a.y,h=d*d+e*e;if(Math.abs(d*g-e*f)&gt;Number.EPSILON){var l=Math.sqrt(h),m=Math.sqrt(f*f+g*g);h=b.x-e/l;b=b.y+d/l;</td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span>((<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">-</span>g<span class="pl-k">/</span>m<span class="pl-k">-</span>h)<span class="pl-k">*</span>g<span class="pl-k">-</span>(<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">+</span>f<span class="pl-k">/</span>m<span class="pl-k">-</span>b)<span class="pl-k">*</span>f)<span class="pl-k">/</span>(d<span class="pl-k">*</span>g<span class="pl-k">-</span>e<span class="pl-k">*</span>f);f<span class="pl-k">=</span>h<span class="pl-k">+</span>d<span class="pl-k">*</span>g<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;d<span class="pl-k">=</span>b<span class="pl-k">+</span>e<span class="pl-k">*</span>g<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;e<span class="pl-k">=</span>f<span class="pl-k">*</span>f<span class="pl-k">+</span>d<span class="pl-k">*</span>d;<span class="pl-k">if</span>(<span class="pl-c1">2</span><span class="pl-k">&gt;=</span>e)<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">B</span>(f,d);e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(e<span class="pl-k">/</span><span class="pl-c1">2</span>)}<span class="pl-k">else</span> a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,d<span class="pl-k">&gt;</span><span class="pl-c1">Number</span>.<span class="pl-c1">EPSILON</span><span class="pl-k">?</span>f<span class="pl-k">&gt;</span><span class="pl-c1">Number</span>.<span class="pl-c1">EPSILON</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>d<span class="pl-k">&lt;</span><span class="pl-k">-</span><span class="pl-c1">Number</span>.<span class="pl-c1">EPSILON</span><span class="pl-k">?</span>f<span class="pl-k">&lt;</span><span class="pl-k">-</span><span class="pl-c1">Number</span>.<span class="pl-c1">EPSILON</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">sign</span>(e)<span class="pl-k">===</span><span class="pl-c1">Math</span>.<span class="pl-c1">sign</span>(g)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),a<span class="pl-k">?</span>(f<span class="pl-k">=</span><span class="pl-k">-</span>e,e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(h))<span class="pl-k">:</span>(f<span class="pl-k">=</span>d,d<span class="pl-k">=</span>e,e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(h<span class="pl-k">/</span><span class="pl-c1">2</span>));<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">B</span>(f<span class="pl-k">/</span>e,d<span class="pl-k">/</span>e)}function h(a,b){for(N=a.length;0&lt;=--N;){var c=N;var f=N-1;0&gt;f&amp;&amp;(f=a.length-1);var g,h=x+2*M;for(g=0;g&lt;h;g++){var l=Z*g,m=Z*(g+1),n=b+f+l,v=b+f+m;m=b+c+m;r(b+c+l);r(n);r(m);r(n);</td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code blob-code-inner js-file-line"><span class="pl-en">r</span>(v);<span class="pl-en">r</span>(m);l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">3</span>;l<span class="pl-k">=</span><span class="pl-c1">G</span>.<span class="pl-en">generateSideWallUV</span>(d,e,l<span class="pl-k">-</span><span class="pl-c1">6</span>,l<span class="pl-k">-</span><span class="pl-c1">3</span>,l<span class="pl-k">-</span><span class="pl-c1">2</span>,l<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">u</span>(l[<span class="pl-c1">0</span>]);<span class="pl-en">u</span>(l[<span class="pl-c1">1</span>]);<span class="pl-en">u</span>(l[<span class="pl-c1">3</span>]);<span class="pl-en">u</span>(l[<span class="pl-c1">1</span>]);<span class="pl-en">u</span>(l[<span class="pl-c1">2</span>]);<span class="pl-en">u</span>(l[<span class="pl-c1">3</span>])}}}function l(a,b,c){y.push(a);y.push(b);y.push(c)}function k(a,b,c){r(a);r(b);r(c);a=e.length/3;a=G.generateTopUV(d,e,a-3,a-2,a-1);u(a[0]);u(a[1]);u(a[2])}function r(a){e.push(y[3*a]);e.push(y[3*a+1]);e.push(y[3*a+2])}function u(a){f.push(a.x);f.push(a.y)}var y=[],w=void 0!==b.curveSegments?b.curveSegments:12,x=void 0!==b.steps?b.steps:1,A=void 0!==b.depth?b.depth:100,C=void 0!==b.bevelEnabled?</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">bevelEnabled</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">bevelThickness</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">bevelThickness</span><span class="pl-k">:</span><span class="pl-c1">6</span>,<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">bevelSize</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">bevelSize</span><span class="pl-k">:</span><span class="pl-c1">O</span><span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">bevelSegments</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">bevelSegments</span><span class="pl-k">:</span><span class="pl-c1">3</span>,z<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">extrudePath</span>,<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">UVGenerator</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">UVGenerator</span><span class="pl-k">:</span>Sg;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">amount</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ExtrudeBufferGeometry: amount has been renamed to depth.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">amount</span>);<span class="pl-k">var</span> <span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(z){<span class="pl-k">var</span> <span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-en">getSpacedPoints</span>(x);<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> <span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-smi">z</span>.<span class="pl-en">computeFrenetFrames</span>(x,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> <span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">var</span> <span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">var</span> <span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>}<span class="pl-c1">C</span><span class="pl-k">||</span>(<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> <span class="pl-c1">I</span>;w<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">extractPoints</span>(w);a<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">shape</span>;<span class="pl-k">var</span> <span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-smi">holes</span>;</td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">$a</span>.<span class="pl-en">isClockWise</span>(a)){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">reverse</span>();<span class="pl-k">var</span> <span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-c1">length</span>;<span class="pl-c1">J</span><span class="pl-k">&lt;</span><span class="pl-c1">I</span>;<span class="pl-c1">J</span><span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-c1">L</span>[<span class="pl-c1">J</span>];<span class="pl-smi">$a</span>.<span class="pl-en">isClockWise</span>(<span class="pl-c1">S</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">L</span>[<span class="pl-c1">J</span>]<span class="pl-k">=</span><span class="pl-c1">S</span>.<span class="pl-c1">reverse</span>())}}<span class="pl-k">var</span> <span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-smi">$a</span>.<span class="pl-en">triangulateShape</span>(a,<span class="pl-c1">L</span>),<span class="pl-c1">X</span><span class="pl-k">=</span>a;<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-c1">length</span>;<span class="pl-c1">J</span><span class="pl-k">&lt;</span><span class="pl-c1">I</span>;<span class="pl-c1">J</span><span class="pl-k">++</span>)<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-c1">L</span>[<span class="pl-c1">J</span>],a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">concat</span>(<span class="pl-c1">S</span>);<span class="pl-k">var</span> <span class="pl-c1">T</span>,<span class="pl-c1">Z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,fa,<span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-c1">Y</span>.<span class="pl-c1">length</span>;w<span class="pl-k">=</span>[];<span class="pl-k">var</span> <span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> ba<span class="pl-k">=</span><span class="pl-c1">X</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> <span class="pl-c1">W</span><span class="pl-k">=</span>ba<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">N</span><span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span>ba;<span class="pl-c1">N</span><span class="pl-k">++</span>,<span class="pl-c1">W</span><span class="pl-k">++</span>,<span class="pl-c1">T</span><span class="pl-k">++</span>)<span class="pl-c1">W</span><span class="pl-k">===</span>ba<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-c1">0</span>),<span class="pl-c1">T</span><span class="pl-k">===</span>ba<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">0</span>),w[<span class="pl-c1">N</span>]<span class="pl-k">=</span><span class="pl-en">g</span>(<span class="pl-c1">X</span>[<span class="pl-c1">N</span>],<span class="pl-c1">X</span>[<span class="pl-c1">W</span>],<span class="pl-c1">X</span>[<span class="pl-c1">T</span>]);z<span class="pl-k">=</span>[];<span class="pl-k">var</span> ea<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">concat</span>();<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-c1">length</span>;<span class="pl-c1">J</span><span class="pl-k">&lt;</span><span class="pl-c1">I</span>;<span class="pl-c1">J</span><span class="pl-k">++</span>){<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-c1">L</span>[<span class="pl-c1">J</span>];<span class="pl-k">var</span> ca<span class="pl-k">=</span>[];<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;ba<span class="pl-k">=</span><span class="pl-c1">S</span>.<span class="pl-c1">length</span>;<span class="pl-c1">W</span><span class="pl-k">=</span>ba<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">N</span><span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span>ba;<span class="pl-c1">N</span><span class="pl-k">++</span>,<span class="pl-c1">W</span><span class="pl-k">++</span>,<span class="pl-c1">T</span><span class="pl-k">++</span>)<span class="pl-c1">W</span><span class="pl-k">===</span>ba<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-c1">0</span>),<span class="pl-c1">T</span><span class="pl-k">===</span>ba<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">0</span>),ca[<span class="pl-c1">N</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code blob-code-inner js-file-line"><span class="pl-en">g</span>(<span class="pl-c1">S</span>[<span class="pl-c1">N</span>],<span class="pl-c1">S</span>[<span class="pl-c1">W</span>],<span class="pl-c1">S</span>[<span class="pl-c1">T</span>]);<span class="pl-smi">z</span>.<span class="pl-c1">push</span>(ca);ea<span class="pl-k">=</span><span class="pl-smi">ea</span>.<span class="pl-c1">concat</span>(ca)}<span class="pl-k">for</span>(<span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">W</span><span class="pl-k">&lt;</span><span class="pl-c1">M</span>;<span class="pl-c1">W</span><span class="pl-k">++</span>){ba<span class="pl-k">=</span><span class="pl-c1">W</span><span class="pl-k">/</span><span class="pl-c1">M</span>;<span class="pl-k">var</span> da<span class="pl-k">=</span><span class="pl-c1">O</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(ba<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">Q</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(ba<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(ba<span class="pl-k">=</span><span class="pl-c1">X</span>.<span class="pl-c1">length</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span>ba;<span class="pl-c1">N</span><span class="pl-k">++</span>){<span class="pl-k">var</span> ha<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-c1">X</span>[<span class="pl-c1">N</span>],w[<span class="pl-c1">N</span>],<span class="pl-c1">T</span>);<span class="pl-en">l</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">x</span>,<span class="pl-smi">ha</span>.<span class="pl-c1">y</span>,<span class="pl-k">-</span>da)}<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-c1">length</span>;<span class="pl-c1">J</span><span class="pl-k">&lt;</span><span class="pl-c1">I</span>;<span class="pl-c1">J</span><span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-c1">L</span>[<span class="pl-c1">J</span>],ca<span class="pl-k">=</span>z[<span class="pl-c1">J</span>],<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>,ba<span class="pl-k">=</span><span class="pl-c1">S</span>.<span class="pl-c1">length</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span>ba;<span class="pl-c1">N</span><span class="pl-k">++</span>)ha<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-c1">S</span>[<span class="pl-c1">N</span>],ca[<span class="pl-c1">N</span>],<span class="pl-c1">T</span>),<span class="pl-en">l</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">x</span>,<span class="pl-smi">ha</span>.<span class="pl-c1">y</span>,<span class="pl-k">-</span>da)}<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">Q</span>;<span class="pl-k">for</span>(<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span><span class="pl-c1">Z</span>;<span class="pl-c1">N</span><span class="pl-k">++</span>)ha<span class="pl-k">=</span><span class="pl-c1">C</span><span class="pl-k">?</span><span class="pl-en">c</span>(a[<span class="pl-c1">N</span>],ea[<span class="pl-c1">N</span>],<span class="pl-c1">T</span>)<span class="pl-k">:</span>a[<span class="pl-c1">N</span>],<span class="pl-c1">H</span><span class="pl-k">?</span>(<span class="pl-c1">P</span>.<span class="pl-en">copy</span>(<span class="pl-c1">E</span>.<span class="pl-smi">normals</span>[<span class="pl-c1">0</span>]).<span class="pl-en">multiplyScalar</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">x</span>),<span class="pl-c1">K</span>.<span class="pl-en">copy</span>(<span class="pl-c1">E</span>.<span class="pl-smi">binormals</span>[<span class="pl-c1">0</span>]).<span class="pl-en">multiplyScalar</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">y</span>),<span class="pl-c1">R</span>.<span class="pl-en">copy</span>(<span class="pl-c1">D</span>[<span class="pl-c1">0</span>]).<span class="pl-c1">add</span>(<span class="pl-c1">P</span>).<span class="pl-c1">add</span>(<span class="pl-c1">K</span>),<span class="pl-en">l</span>(<span class="pl-c1">R</span>.<span class="pl-c1">x</span>,<span class="pl-c1">R</span>.<span class="pl-c1">y</span>,<span class="pl-c1">R</span>.<span class="pl-c1">z</span>))<span class="pl-k">:</span><span class="pl-en">l</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">x</span>,<span class="pl-smi">ha</span>.<span class="pl-c1">y</span>,<span class="pl-c1">0</span>);<span class="pl-k">for</span>(ba<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>;ba<span class="pl-k">&lt;=</span>x;ba<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span><span class="pl-c1">Z</span>;<span class="pl-c1">N</span><span class="pl-k">++</span>)ha<span class="pl-k">=</span><span class="pl-c1">C</span><span class="pl-k">?</span><span class="pl-en">c</span>(a[<span class="pl-c1">N</span>],ea[<span class="pl-c1">N</span>],<span class="pl-c1">T</span>)<span class="pl-k">:</span>a[<span class="pl-c1">N</span>],<span class="pl-c1">H</span><span class="pl-k">?</span>(<span class="pl-c1">P</span>.<span class="pl-en">copy</span>(<span class="pl-c1">E</span>.<span class="pl-smi">normals</span>[ba]).<span class="pl-en">multiplyScalar</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">x</span>),<span class="pl-c1">K</span>.<span class="pl-en">copy</span>(<span class="pl-c1">E</span>.<span class="pl-smi">binormals</span>[ba]).<span class="pl-en">multiplyScalar</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">y</span>),<span class="pl-c1">R</span>.<span class="pl-en">copy</span>(<span class="pl-c1">D</span>[ba]).<span class="pl-c1">add</span>(<span class="pl-c1">P</span>).<span class="pl-c1">add</span>(<span class="pl-c1">K</span>),<span class="pl-en">l</span>(<span class="pl-c1">R</span>.<span class="pl-c1">x</span>,<span class="pl-c1">R</span>.<span class="pl-c1">y</span>,<span class="pl-c1">R</span>.<span class="pl-c1">z</span>))<span class="pl-k">:</span><span class="pl-en">l</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">x</span>,<span class="pl-smi">ha</span>.<span class="pl-c1">y</span>,<span class="pl-c1">A</span><span class="pl-k">/</span>x<span class="pl-k">*</span>ba);<span class="pl-k">for</span>(<span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-c1">M</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-c1">W</span>;<span class="pl-c1">W</span><span class="pl-k">--</span>){ba<span class="pl-k">=</span><span class="pl-c1">W</span><span class="pl-k">/</span><span class="pl-c1">M</span>;da<span class="pl-k">=</span><span class="pl-c1">O</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(ba<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">Q</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(ba<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(ba<span class="pl-k">=</span><span class="pl-c1">X</span>.<span class="pl-c1">length</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span>ba;<span class="pl-c1">N</span><span class="pl-k">++</span>)ha<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-c1">X</span>[<span class="pl-c1">N</span>],w[<span class="pl-c1">N</span>],<span class="pl-c1">T</span>),<span class="pl-en">l</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">x</span>,<span class="pl-smi">ha</span>.<span class="pl-c1">y</span>,<span class="pl-c1">A</span><span class="pl-k">+</span>da);<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-c1">length</span>;<span class="pl-c1">J</span><span class="pl-k">&lt;</span><span class="pl-c1">I</span>;<span class="pl-c1">J</span><span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-c1">L</span>[<span class="pl-c1">J</span>],ca<span class="pl-k">=</span>z[<span class="pl-c1">J</span>],<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>,ba<span class="pl-k">=</span><span class="pl-c1">S</span>.<span class="pl-c1">length</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span>ba;<span class="pl-c1">N</span><span class="pl-k">++</span>)ha<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-c1">S</span>[<span class="pl-c1">N</span>],ca[<span class="pl-c1">N</span>],<span class="pl-c1">T</span>),<span class="pl-c1">H</span><span class="pl-k">?</span><span class="pl-en">l</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">x</span>,<span class="pl-smi">ha</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">D</span>[x<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">y</span>,<span class="pl-c1">D</span>[x<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">x</span><span class="pl-k">+</span>da)<span class="pl-k">:</span><span class="pl-en">l</span>(<span class="pl-smi">ha</span>.<span class="pl-c1">x</span>,<span class="pl-smi">ha</span>.<span class="pl-c1">y</span>,<span class="pl-c1">A</span><span class="pl-k">+</span>da)}(<span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">3</span>;<span class="pl-k">if</span>(<span class="pl-c1">C</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">*</span><span class="pl-c1">Z</span>;<span class="pl-k">for</span>(<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span><span class="pl-c1">V</span>;<span class="pl-c1">N</span><span class="pl-k">++</span>)fa<span class="pl-k">=</span><span class="pl-c1">Y</span>[<span class="pl-c1">N</span>],<span class="pl-en">k</span>(fa[<span class="pl-c1">2</span>]<span class="pl-k">+</span>b,fa[<span class="pl-c1">1</span>]<span class="pl-k">+</span>b,fa[<span class="pl-c1">0</span>]<span class="pl-k">+</span>b);b<span class="pl-k">=</span><span class="pl-c1">Z</span><span class="pl-k">*</span>(x<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">M</span>);<span class="pl-k">for</span>(<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span><span class="pl-c1">V</span>;<span class="pl-c1">N</span><span class="pl-k">++</span>)fa<span class="pl-k">=</span><span class="pl-c1">Y</span>[<span class="pl-c1">N</span>],<span class="pl-en">k</span>(fa[<span class="pl-c1">0</span>]<span class="pl-k">+</span>b,fa[<span class="pl-c1">1</span>]<span class="pl-k">+</span>b,fa[<span class="pl-c1">2</span>]<span class="pl-k">+</span>b)}<span class="pl-k">else</span>{<span class="pl-k">for</span>(<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span><span class="pl-c1">V</span>;<span class="pl-c1">N</span><span class="pl-k">++</span>)fa<span class="pl-k">=</span><span class="pl-c1">Y</span>[<span class="pl-c1">N</span>],<span class="pl-en">k</span>(fa[<span class="pl-c1">2</span>],fa[<span class="pl-c1">1</span>],fa[<span class="pl-c1">0</span>]);<span class="pl-k">for</span>(<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">N</span><span class="pl-k">&lt;</span><span class="pl-c1">V</span>;<span class="pl-c1">N</span><span class="pl-k">++</span>)fa<span class="pl-k">=</span><span class="pl-c1">Y</span>[<span class="pl-c1">N</span>],<span class="pl-en">k</span>(fa[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-c1">Z</span><span class="pl-k">*</span>x,fa[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">Z</span><span class="pl-k">*</span>x,fa[<span class="pl-c1">2</span>]<span class="pl-k">+</span><span class="pl-c1">Z</span><span class="pl-k">*</span>x)}<span class="pl-smi">d</span>.<span class="pl-en">addGroup</span>(a,<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">-</span>a,<span class="pl-c1">0</span>)})();(<span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">3</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-en">h</span>(<span class="pl-c1">X</span>,b);b<span class="pl-k">+=</span><span class="pl-c1">X</span>.<span class="pl-c1">length</span>;<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-c1">length</span>;<span class="pl-c1">J</span><span class="pl-k">&lt;</span><span class="pl-c1">I</span>;<span class="pl-c1">J</span><span class="pl-k">++</span>)<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-c1">L</span>[<span class="pl-c1">J</span>],<span class="pl-en">h</span>(<span class="pl-c1">S</span>,b),b<span class="pl-k">+=</span><span class="pl-c1">S</span>.<span class="pl-c1">length</span>;<span class="pl-smi">d</span>.<span class="pl-en">addGroup</span>(a,<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">-</span>a,<span class="pl-c1">1</span>)})()}<span class="pl-c1">D</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ExtrudeBufferGeometry<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span><span class="pl-k">=</span>{shapes<span class="pl-k">:</span>a,options<span class="pl-k">:</span>b};</td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">?</span>a<span class="pl-k">:</span>[a];<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>,e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>h;g<span class="pl-k">++</span>)<span class="pl-en">c</span>(a[g]);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(e,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(f,<span class="pl-c1">2</span>));<span class="pl-c1">this</span>.<span class="pl-en">computeVertexNormals</span>()}function jf(a,b,c){c.shapes=[];if(Array.isArray(a))for(var d=0,e=a.length;d&lt;e;d++)c.shapes.push(a[d].uuid);else c.shapes.push(a.uuid);void 0!==b.extrudePath&amp;&amp;(c.options.extrudePath=b.extrudePath.toJSON());return c}function Zc(a,b){P.call(this);this.type=&quot;TextGeometry&quot;;this.parameters={text:a,parameters:b};this.fromBufferGeometry(new gc(a,</td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code blob-code-inner js-file-line">b));<span class="pl-c1">this</span>.<span class="pl-en">mergeVertices</span>()}function gc(a,b){b=b||{};var c=b.font;if(!c||!c.isFont)return console.error(&quot;THREE.TextGeometry: font parameter is not an instance of THREE.Font.&quot;),new P;a=c.generateShapes(a,b.size);b.depth=void 0!==b.height?b.height:50;void 0===b.bevelThickness&amp;&amp;(b.bevelThickness=10);void 0===b.bevelSize&amp;&amp;(b.bevelSize=8);void 0===b.bevelEnabled&amp;&amp;(b.bevelEnabled=!1);Ta.call(this,a,b);this.type=&quot;TextBufferGeometry&quot;}function $c(a,b,c,d,e,f,g){P.call(this);this.type=&quot;SphereGeometry&quot;;this.parameters=</td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code blob-code-inner js-file-line">{radius<span class="pl-k">:</span>a,widthSegments<span class="pl-k">:</span>b,heightSegments<span class="pl-k">:</span>c,phiStart<span class="pl-k">:</span>d,phiLength<span class="pl-k">:</span>e,thetaStart<span class="pl-k">:</span>f,thetaLength<span class="pl-k">:</span>g};<span class="pl-c1">this</span>.<span class="pl-en">fromBufferGeometry</span>(<span class="pl-k">new</span> <span class="pl-en">xb</span>(a,b,c,d,e,f,g));<span class="pl-c1">this</span>.<span class="pl-en">mergeVertices</span>()}function xb(a,b,c,d,e,f,g){D.call(this);this.type=&quot;SphereBufferGeometry&quot;;this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g};a=a||1;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;var h=</td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">+</span>g,l,m,v<span class="pl-k">=</span><span class="pl-c1">0</span>,n<span class="pl-k">=</span>[],k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,q<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,r<span class="pl-k">=</span>[],u<span class="pl-k">=</span>[],y<span class="pl-k">=</span>[],w<span class="pl-k">=</span>[];<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;=</span>c;m<span class="pl-k">++</span>){<span class="pl-k">var</span> x<span class="pl-k">=</span>[],<span class="pl-c1">A</span><span class="pl-k">=</span>m<span class="pl-k">/</span>c;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;=</span>b;l<span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">C</span><span class="pl-k">=</span>l<span class="pl-k">/</span>b;<span class="pl-smi">k</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-k">-</span>a<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(d<span class="pl-k">+</span><span class="pl-c1">C</span><span class="pl-k">*</span>e)<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(f<span class="pl-k">+</span><span class="pl-c1">A</span><span class="pl-k">*</span>g);<span class="pl-smi">k</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(f<span class="pl-k">+</span><span class="pl-c1">A</span><span class="pl-k">*</span>g);<span class="pl-smi">k</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(d<span class="pl-k">+</span><span class="pl-c1">C</span><span class="pl-k">*</span>e)<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(f<span class="pl-k">+</span><span class="pl-c1">A</span><span class="pl-k">*</span>g);<span class="pl-smi">u</span>.<span class="pl-c1">push</span>(<span class="pl-smi">k</span>.<span class="pl-c1">x</span>,<span class="pl-smi">k</span>.<span class="pl-c1">y</span>,<span class="pl-smi">k</span>.<span class="pl-c1">z</span>);<span class="pl-smi">q</span>.<span class="pl-c1">set</span>(<span class="pl-smi">k</span>.<span class="pl-c1">x</span>,<span class="pl-smi">k</span>.<span class="pl-c1">y</span>,<span class="pl-smi">k</span>.<span class="pl-c1">z</span>).<span class="pl-c1">normalize</span>();<span class="pl-smi">y</span>.<span class="pl-c1">push</span>(<span class="pl-smi">q</span>.<span class="pl-c1">x</span>,<span class="pl-smi">q</span>.<span class="pl-c1">y</span>,<span class="pl-smi">q</span>.<span class="pl-c1">z</span>);<span class="pl-smi">w</span>.<span class="pl-c1">push</span>(<span class="pl-c1">C</span>,<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">A</span>);<span class="pl-smi">x</span>.<span class="pl-c1">push</span>(v<span class="pl-k">++</span>)}<span class="pl-smi">n</span>.<span class="pl-c1">push</span>(x)}<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>c;m<span class="pl-k">++</span>)<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>b;l<span class="pl-k">++</span>)a<span class="pl-k">=</span>n[m][l<span class="pl-k">+</span><span class="pl-c1">1</span>],d<span class="pl-k">=</span>n[m][l],e<span class="pl-k">=</span>n[m<span class="pl-k">+</span><span class="pl-c1">1</span>][l],g<span class="pl-k">=</span>n[m<span class="pl-k">+</span><span class="pl-c1">1</span>][l<span class="pl-k">+</span><span class="pl-c1">1</span>],(<span class="pl-c1">0</span><span class="pl-k">!==</span>m<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>f)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-c1">push</span>(a,d,g),(m<span class="pl-k">!==</span>c<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">||</span>h<span class="pl-k">&lt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-c1">push</span>(d,e,g);<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(r);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">z</span>(u,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(y,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(w,<span class="pl-c1">2</span>))}function ad(a,b,c,d,e,f){P.call(this);this.type=&quot;RingGeometry&quot;;this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};this.fromBufferGeometry(new hc(a,b,c,d,e,f));this.mergeVertices()}function hc(a,b,c,d,e,f){D.call(this);this.type=&quot;RingBufferGeometry&quot;;this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f};a=a||.5;b=b||</td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>;e<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>e<span class="pl-k">?</span>e<span class="pl-k">:</span><span class="pl-c1">0</span>;f<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">?</span>f<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>;c<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">3</span>,c)<span class="pl-k">:</span><span class="pl-c1">8</span>;d<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">1</span>,d)<span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span>[],h<span class="pl-k">=</span>[],l<span class="pl-k">=</span>[],m<span class="pl-k">=</span>[],v<span class="pl-k">=</span>a,n<span class="pl-k">=</span>(b<span class="pl-k">-</span>a)<span class="pl-k">/</span>d,k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,q<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,r,u;<span class="pl-k">for</span>(r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;=</span>d;r<span class="pl-k">++</span>){<span class="pl-k">for</span>(u<span class="pl-k">=</span><span class="pl-c1">0</span>;u<span class="pl-k">&lt;=</span>c;u<span class="pl-k">++</span>)a<span class="pl-k">=</span>e<span class="pl-k">+</span>u<span class="pl-k">/</span>c<span class="pl-k">*</span>f,<span class="pl-smi">k</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>v<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a),<span class="pl-smi">k</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>v<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a),<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-smi">k</span>.<span class="pl-c1">x</span>,<span class="pl-smi">k</span>.<span class="pl-c1">y</span>,<span class="pl-smi">k</span>.<span class="pl-c1">z</span>),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>),<span class="pl-smi">q</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>(<span class="pl-smi">k</span>.<span class="pl-c1">x</span><span class="pl-k">/</span>b<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-smi">q</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>(<span class="pl-smi">k</span>.<span class="pl-c1">y</span><span class="pl-k">/</span>b<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-smi">m</span>.<span class="pl-c1">push</span>(<span class="pl-smi">q</span>.<span class="pl-c1">x</span>,<span class="pl-smi">q</span>.<span class="pl-c1">y</span>);v<span class="pl-k">+=</span>n}<span class="pl-k">for</span>(r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span>d;r<span class="pl-k">++</span>)<span class="pl-k">for</span>(b<span class="pl-k">=</span>r<span class="pl-k">*</span>(c<span class="pl-k">+</span><span class="pl-c1">1</span>),u<span class="pl-k">=</span><span class="pl-c1">0</span>;u<span class="pl-k">&lt;</span>c;u<span class="pl-k">++</span>)a<span class="pl-k">=</span>u<span class="pl-k">+</span>b,e<span class="pl-k">=</span>a<span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span>a<span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-c1">2</span>,v<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(a,e,v),<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(e,f,v);<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(g);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(h,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">z</span>(l,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(m,<span class="pl-c1">2</span>))}function bd(a,b,c,d){P.call(this);this.type=&quot;LatheGeometry&quot;;this.parameters={points:a,segments:b,phiStart:c,phiLength:d};this.fromBufferGeometry(new ic(a,b,c,d));this.mergeVertices()}function ic(a,b,c,d){D.call(this);this.type=&quot;LatheBufferGeometry&quot;;this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=Math.floor(b)||12;c=c||0;d=d||2*Math.PI;d=J.clamp(d,0,2*Math.PI);var e=[],f=[],g=[],h=1/b,l=new p,m=new B,v;for(v=0;v&lt;=b;v++){var n=c+v*h*d;var k=</td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(n),q<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(n);<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;n<span class="pl-k">++</span>)<span class="pl-smi">l</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a[n].<span class="pl-c1">x</span><span class="pl-k">*</span>k,<span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a[n].<span class="pl-c1">y</span>,<span class="pl-smi">l</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>a[n].<span class="pl-c1">x</span><span class="pl-k">*</span>q,<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-smi">l</span>.<span class="pl-c1">x</span>,<span class="pl-smi">l</span>.<span class="pl-c1">y</span>,<span class="pl-smi">l</span>.<span class="pl-c1">z</span>),<span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>v<span class="pl-k">/</span>b,<span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>n<span class="pl-k">/</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>),<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-smi">m</span>.<span class="pl-c1">x</span>,<span class="pl-smi">m</span>.<span class="pl-c1">y</span>)}<span class="pl-k">for</span>(v<span class="pl-k">=</span><span class="pl-c1">0</span>;v<span class="pl-k">&lt;</span>b;v<span class="pl-k">++</span>)<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;n<span class="pl-k">++</span>)c<span class="pl-k">=</span>n<span class="pl-k">+</span>v<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,h<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,l<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-c1">1</span>,m<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(c,h,m),<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(h,l,m);<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(e);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(f,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(g,<span class="pl-c1">2</span>));<span class="pl-c1">this</span>.<span class="pl-en">computeVertexNormals</span>();<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>)<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">normal</span>.<span class="pl-smi">array</span>,e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span>b<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">*</span><span class="pl-c1">3</span>,n<span class="pl-k">=</span>v<span class="pl-k">=</span><span class="pl-c1">0</span>;v<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;v<span class="pl-k">++</span>,</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">+=</span><span class="pl-c1">3</span>)<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>d[n<span class="pl-k">+</span><span class="pl-c1">0</span>],<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>d[n<span class="pl-k">+</span><span class="pl-c1">1</span>],<span class="pl-smi">e</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>d[n<span class="pl-k">+</span><span class="pl-c1">2</span>],<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>d[c<span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-c1">0</span>],<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>d[c<span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-c1">1</span>],<span class="pl-smi">f</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>d[c<span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-c1">2</span>],<span class="pl-smi">g</span>.<span class="pl-en">addVectors</span>(e,f).<span class="pl-c1">normalize</span>(),d[n<span class="pl-k">+</span><span class="pl-c1">0</span>]<span class="pl-k">=</span>d[c<span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">x</span>,d[n<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>d[c<span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span>,d[n<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>d[c<span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">z</span>}function yb(a,b){P.call(this);this.type=&quot;ShapeGeometry&quot;;&quot;object&quot;===typeof b&amp;&amp;(console.warn(&quot;THREE.ShapeGeometry: Options parameter has been removed.&quot;),b=b.curveSegments);this.parameters={shapes:a,curveSegments:b};this.fromBufferGeometry(new zb(a,b));this.mergeVertices()}function zb(a,b){function c(a){var c,h=e.length/3;a=a.extractPoints(b);</td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">shape</span>,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">holes</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">$a</span>.<span class="pl-en">isClockWise</span>(m))<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">reverse</span>(),a<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>){<span class="pl-k">var</span> v<span class="pl-k">=</span>k[a];<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">$a</span>.<span class="pl-en">isClockWise</span>(v)<span class="pl-k">&amp;&amp;</span>(k[a]<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">reverse</span>())}<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-smi">$a</span>.<span class="pl-en">triangulateShape</span>(m,k);a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>)v<span class="pl-k">=</span>k[a],m<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">concat</span>(v);a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>)v<span class="pl-k">=</span>m[a],<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-smi">v</span>.<span class="pl-c1">x</span>,<span class="pl-smi">v</span>.<span class="pl-c1">y</span>,<span class="pl-c1">0</span>),<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>),<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-smi">v</span>.<span class="pl-c1">x</span>,<span class="pl-smi">v</span>.<span class="pl-c1">y</span>);a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>)m<span class="pl-k">=</span>p[a],<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(m[<span class="pl-c1">0</span>]<span class="pl-k">+</span>h,m[<span class="pl-c1">1</span>]<span class="pl-k">+</span>h,m[<span class="pl-c1">2</span>]<span class="pl-k">+</span>h),l<span class="pl-k">+=</span><span class="pl-c1">3</span>}<span class="pl-c1">D</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ShapeBufferGeometry<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span><span class="pl-k">=</span>{shapes<span class="pl-k">:</span>a,curveSegments<span class="pl-k">:</span>b};b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">12</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span>[],e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>[],g<span class="pl-k">=</span>[],h<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(a))<span class="pl-en">c</span>(a);<span class="pl-k">else</span> <span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;m<span class="pl-k">++</span>)<span class="pl-en">c</span>(a[m]),<span class="pl-c1">this</span>.<span class="pl-en">addGroup</span>(h,l,m),h<span class="pl-k">+=</span>l,l<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(d);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(e,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(f,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(g,<span class="pl-c1">2</span>))}function kf(a,b){b.shapes=[];if(Array.isArray(a))for(var c=0,d=a.length;c&lt;d;c++)b.shapes.push(a[c].uuid);else b.shapes.push(a.uuid);return b}function jc(a,b){D.call(this);this.type=&quot;EdgesGeometry&quot;;this.parameters={thresholdAngle:b};var c=[];b=Math.cos(J.DEG2RAD*(void 0!==</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-c1">1</span>));<span class="pl-k">var</span> d<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],e<span class="pl-k">=</span>{},f<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>b<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span>];<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isBufferGeometry</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">P</span>;<span class="pl-smi">g</span>.<span class="pl-en">fromBufferGeometry</span>(a)}<span class="pl-k">else</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">clone</span>();<span class="pl-smi">g</span>.<span class="pl-en">mergeVertices</span>();<span class="pl-smi">g</span>.<span class="pl-en">computeFaceNormals</span>();a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">vertices</span>;g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">faces</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;h<span class="pl-k">&lt;</span>l;h<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span>g[h],k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>k;k<span class="pl-k">++</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>m[f[k]];<span class="pl-k">var</span> t<span class="pl-k">=</span>m[f[(k<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">3</span>]];d[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(n,t);d[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(n,t);n<span class="pl-k">=</span>d[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d[<span class="pl-c1">1</span>];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e[n]<span class="pl-k">?</span>e[n]<span class="pl-k">=</span>{index1<span class="pl-k">:</span>d[<span class="pl-c1">0</span>],index2<span class="pl-k">:</span>d[<span class="pl-c1">1</span>],face1<span class="pl-k">:</span>h,face2<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>}<span class="pl-k">:</span>e[n].<span class="pl-smi">face2</span><span class="pl-k">=</span>h}<span class="pl-k">for</span>(n <span class="pl-k">in</span> e)<span class="pl-k">if</span>(d<span class="pl-k">=</span>e[n],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-smi">face2</span><span class="pl-k">||</span>g[<span class="pl-smi">d</span>.<span class="pl-smi">face1</span>].<span class="pl-smi">normal</span>.<span class="pl-en">dot</span>(g[<span class="pl-smi">d</span>.<span class="pl-smi">face2</span>].<span class="pl-smi">normal</span>)<span class="pl-k">&lt;=</span>b)f<span class="pl-k">=</span>a[<span class="pl-smi">d</span>.<span class="pl-smi">index1</span>],</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span>,<span class="pl-smi">f</span>.<span class="pl-c1">z</span>),f<span class="pl-k">=</span>a[<span class="pl-smi">d</span>.<span class="pl-smi">index2</span>],<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span>,<span class="pl-smi">f</span>.<span class="pl-c1">z</span>);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(c,<span class="pl-c1">3</span>))}function Ab(a,b,c,d,e,f,g,h){P.call(this);this.type=&quot;CylinderGeometry&quot;;this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};this.fromBufferGeometry(new ab(a,b,c,d,e,f,g,h));this.mergeVertices()}function ab(a,b,c,d,e,f,g,h){function l(c){var e,f=new B,l=new p,v=0,u=!0===c?a:b,x=!0===c?1:-1;var z=r;for(e=1;e&lt;=d;e++)n.push(0,y*x,0),t.push(0,</td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code blob-code-inner js-file-line">x,<span class="pl-c1">0</span>),<span class="pl-smi">q</span>.<span class="pl-c1">push</span>(<span class="pl-c1">.5</span>,<span class="pl-c1">.5</span>),r<span class="pl-k">++</span>;<span class="pl-k">var</span> <span class="pl-c1">G</span><span class="pl-k">=</span>r;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;=</span>d;e<span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">H</span><span class="pl-k">=</span>e<span class="pl-k">/</span>d<span class="pl-k">*</span>h<span class="pl-k">+</span>g,<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-c1">H</span>);<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-c1">H</span>);<span class="pl-smi">l</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>u<span class="pl-k">*</span><span class="pl-c1">H</span>;<span class="pl-smi">l</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>y<span class="pl-k">*</span>x;<span class="pl-smi">l</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>u<span class="pl-k">*</span><span class="pl-c1">D</span>;<span class="pl-smi">n</span>.<span class="pl-c1">push</span>(<span class="pl-smi">l</span>.<span class="pl-c1">x</span>,<span class="pl-smi">l</span>.<span class="pl-c1">y</span>,<span class="pl-smi">l</span>.<span class="pl-c1">z</span>);<span class="pl-smi">t</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>,x,<span class="pl-c1">0</span>);<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">D</span><span class="pl-k">+</span><span class="pl-c1">.5</span>;<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">H</span><span class="pl-k">*</span>x<span class="pl-k">+</span><span class="pl-c1">.5</span>;<span class="pl-smi">q</span>.<span class="pl-c1">push</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span>);r<span class="pl-k">++</span>}<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>d;e<span class="pl-k">++</span>)f<span class="pl-k">=</span>z<span class="pl-k">+</span>e,l<span class="pl-k">=</span><span class="pl-c1">G</span><span class="pl-k">+</span>e,<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-c1">push</span>(l,l<span class="pl-k">+</span><span class="pl-c1">1</span>,f)<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">push</span>(l<span class="pl-k">+</span><span class="pl-c1">1</span>,l,f),v<span class="pl-k">+=</span><span class="pl-c1">3</span>;<span class="pl-smi">m</span>.<span class="pl-en">addGroup</span>(w,v,<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">2</span>);w<span class="pl-k">+=</span>v}<span class="pl-c1">D</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>CylinderBufferGeometry<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span><span class="pl-k">=</span>{radiusTop<span class="pl-k">:</span>a,radiusBottom<span class="pl-k">:</span>b,height<span class="pl-k">:</span>c,radialSegments<span class="pl-k">:</span>d,heightSegments<span class="pl-k">:</span>e,openEnded<span class="pl-k">:</span>f,thetaStart<span class="pl-k">:</span>g,thetaLength<span class="pl-k">:</span>h};<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">this</span>;a<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-c1">1</span>;c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">1</span>;d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(d)<span class="pl-k">||</span><span class="pl-c1">8</span>;e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(e)<span class="pl-k">||</span><span class="pl-c1">1</span>;f<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">?</span>f<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>;g<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>g<span class="pl-k">?</span>g<span class="pl-k">:</span><span class="pl-c1">0</span>;h<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>h<span class="pl-k">?</span>h<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>;<span class="pl-k">var</span> k<span class="pl-k">=</span>[],n<span class="pl-k">=</span>[],t<span class="pl-k">=</span>[],q<span class="pl-k">=</span>[],r<span class="pl-k">=</span><span class="pl-c1">0</span>,u<span class="pl-k">=</span>[],y<span class="pl-k">=</span>c<span class="pl-k">/</span><span class="pl-c1">2</span>,w<span class="pl-k">=</span><span class="pl-c1">0</span>;(<span class="pl-k">function</span>(){<span class="pl-k">var</span> f,l,v<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-c1">0</span>,z<span class="pl-k">=</span>(b<span class="pl-k">-</span>a)<span class="pl-k">/</span>c;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;=</span>e;l<span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">B</span><span class="pl-k">=</span>[],<span class="pl-c1">H</span><span class="pl-k">=</span>l<span class="pl-k">/</span>e,<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">H</span><span class="pl-k">*</span>(b<span class="pl-k">-</span>a)<span class="pl-k">+</span>a;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;=</span>d;f<span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">D</span><span class="pl-k">=</span>f<span class="pl-k">/</span>d,<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">D</span><span class="pl-k">*</span>h<span class="pl-k">+</span>g,<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-c1">E</span>);<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-c1">E</span>);<span class="pl-c1">O</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">G</span><span class="pl-k">*</span><span class="pl-c1">J</span>;<span class="pl-c1">O</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">H</span><span class="pl-k">*</span>c<span class="pl-k">+</span>y;<span class="pl-c1">O</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">G</span><span class="pl-k">*</span><span class="pl-c1">E</span>;<span class="pl-smi">n</span>.<span class="pl-c1">push</span>(<span class="pl-c1">O</span>.<span class="pl-c1">x</span>,<span class="pl-c1">O</span>.<span class="pl-c1">y</span>,<span class="pl-c1">O</span>.<span class="pl-c1">z</span>);<span class="pl-smi">v</span>.<span class="pl-c1">set</span>(<span class="pl-c1">J</span>,z,<span class="pl-c1">E</span>).<span class="pl-c1">normalize</span>();<span class="pl-smi">t</span>.<span class="pl-c1">push</span>(<span class="pl-smi">v</span>.<span class="pl-c1">x</span>,<span class="pl-smi">v</span>.<span class="pl-c1">y</span>,<span class="pl-smi">v</span>.<span class="pl-c1">z</span>);<span class="pl-smi">q</span>.<span class="pl-c1">push</span>(<span class="pl-c1">D</span>,<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">H</span>);<span class="pl-c1">B</span>.<span class="pl-c1">push</span>(r<span class="pl-k">++</span>)}<span class="pl-smi">u</span>.<span class="pl-c1">push</span>(<span class="pl-c1">B</span>)}<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>d;f<span class="pl-k">++</span>)<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>e;l<span class="pl-k">++</span>)v<span class="pl-k">=</span>u[l<span class="pl-k">+</span><span class="pl-c1">1</span>][f],<span class="pl-c1">O</span><span class="pl-k">=</span>u[l<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>][f<span class="pl-k">+</span><span class="pl-c1">1</span>],z<span class="pl-k">=</span>u[l][f<span class="pl-k">+</span><span class="pl-c1">1</span>],<span class="pl-smi">k</span>.<span class="pl-c1">push</span>(u[l][f],v,z),<span class="pl-smi">k</span>.<span class="pl-c1">push</span>(v,<span class="pl-c1">O</span>,z),<span class="pl-c1">Q</span><span class="pl-k">+=</span><span class="pl-c1">6</span>;<span class="pl-smi">m</span>.<span class="pl-en">addGroup</span>(w,<span class="pl-c1">Q</span>,<span class="pl-c1">0</span>);w<span class="pl-k">+=</span><span class="pl-c1">Q</span>})();<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-c1">0</span><span class="pl-k">&lt;</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>));<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(k);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(n,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(t,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(q,<span class="pl-c1">2</span>))}function cd(a,b,c,d,e,f,g){Ab.call(this,0,a,b,c,d,e,f,g);this.type=&quot;ConeGeometry&quot;;this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}function dd(a,b,c,d,e,f,g){ab.call(this,0,a,b,c,d,e,f,g);this.type=</td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>ConeBufferGeometry<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span><span class="pl-k">=</span>{radius<span class="pl-k">:</span>a,height<span class="pl-k">:</span>b,radialSegments<span class="pl-k">:</span>c,heightSegments<span class="pl-k">:</span>d,openEnded<span class="pl-k">:</span>e,thetaStart<span class="pl-k">:</span>f,thetaLength<span class="pl-k">:</span>g}}function ed(a,b,c,d){P.call(this);this.type=&quot;CircleGeometry&quot;;this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new kc(a,b,c,d));this.mergeVertices()}function kc(a,b,c,d){D.call(this);this.type=&quot;CircleBufferGeometry&quot;;this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||1;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;d<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>[],g<span class="pl-k">=</span>[],h<span class="pl-k">=</span>[],l,m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>;<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-c1">.5</span>,<span class="pl-c1">.5</span>);<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">3</span>;n<span class="pl-k">&lt;=</span>b;n<span class="pl-k">++</span>,l<span class="pl-k">+=</span><span class="pl-c1">3</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span>c<span class="pl-k">+</span>n<span class="pl-k">/</span>b<span class="pl-k">*</span>d;<span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(t);<span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(t);<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-smi">m</span>.<span class="pl-c1">x</span>,<span class="pl-smi">m</span>.<span class="pl-c1">y</span>,<span class="pl-smi">m</span>.<span class="pl-c1">z</span>);<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-smi">k</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>(f[l]<span class="pl-k">/</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-smi">k</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>(f[l<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">/</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-smi">k</span>.<span class="pl-c1">x</span>,<span class="pl-smi">k</span>.<span class="pl-c1">y</span>)}<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">1</span>;l<span class="pl-k">&lt;=</span>b;l<span class="pl-k">++</span>)<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(l,l<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(e);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(f,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(g,<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(h,<span class="pl-c1">2</span>))}function Bb(a){I.call(this);this.type=&quot;ShadowMaterial&quot;;this.color=</td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">transparent</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a)}function lc(a){Fa.call(this,a);this.type=&quot;RawShaderMaterial&quot;}function Ua(a){I.call(this);this.defines={STANDARD:&quot;&quot;};this.type=&quot;MeshStandardMaterial&quot;;this.color=new G(16777215);this.metalness=this.roughness=.5;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new G(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=0;this.normalScale=</td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">B</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementScale</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementBias</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">envMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">metalnessMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">roughnessMap</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">envMapIntensity</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">refractionRatio</span><span class="pl-k">=</span><span class="pl-c1">.98</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinejoin</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinecap</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a)}function Cb(a){Ua.call(this);this.defines={PHYSICAL:&quot;&quot;};this.type=&quot;MeshPhysicalMaterial&quot;;this.reflectivity=.5;this.clearCoatRoughness=</td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">clearCoat</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a)}function Ka(a){I.call(this);this.type=&quot;MeshPhongMaterial&quot;;this.color=new G(16777215);this.specular=new G(1118481);this.shininess=30;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new G(0);this.emissiveIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=0;this.normalScale=new B(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;</td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">envMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">specularMap</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">combine</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">reflectivity</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">refractionRatio</span><span class="pl-k">=</span><span class="pl-c1">.98</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinejoin</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinecap</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a)}function Db(a){Ka.call(this);this.defines={TOON:&quot;&quot;};this.type=&quot;MeshToonMaterial&quot;;this.gradientMap=null;this.setValues(a)}function Eb(a){I.call(this);this.type=&quot;MeshNormalMaterial&quot;;this.bumpMap=null;this.bumpScale=1;this.normalMap=</td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalMapType</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalScale</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementScale</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementBias</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">lights</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">fog</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a)}function Fb(a){I.call(this);this.type=&quot;MeshLambertMaterial&quot;;this.color=new G(16777215);this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new G(0);this.emissiveIntensity=1;this.envMap=</td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">specularMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">combine</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">reflectivity</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">refractionRatio</span><span class="pl-k">=</span><span class="pl-c1">.98</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinejoin</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinecap</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">setValues</span>(a)}function Gb(a){T.call(this);this.type=&quot;LineDashedMaterial&quot;;this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(a)}function ee(a,b,c){var d=this,e=!1,f=0,g=0,h=void 0;this.onStart=void 0;this.onLoad=a;this.onProgress=</td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code blob-code-inner js-file-line">b;<span class="pl-c1">this</span>.<span class="pl-smi">onError</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-en">itemStart</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){g<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-smi">onStart</span>)<span class="pl-smi">d</span>.<span class="pl-en">onStart</span>(a,f,g);e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-c1">this</span>.<span class="pl-en">itemEnd</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){f<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-smi">onProgress</span>)<span class="pl-smi">d</span>.<span class="pl-en">onProgress</span>(a,f,g);<span class="pl-k">if</span>(f<span class="pl-k">===</span>g<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-smi">onLoad</span>))<span class="pl-smi">d</span>.<span class="pl-c1">onLoad</span>()};<span class="pl-c1">this</span>.<span class="pl-en">itemError</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-smi">onError</span>)<span class="pl-smi">d</span>.<span class="pl-c1">onError</span>(a)};<span class="pl-c1">this</span>.<span class="pl-en">resolveURL</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> h<span class="pl-k">?</span><span class="pl-en">h</span>(a)<span class="pl-k">:</span>a};<span class="pl-c1">this</span>.<span class="pl-en">setURLModifier</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){h<span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>}}function La(a){this.manager=void 0!==a?a:ya}function lf(a){this.manager=void 0!==a?a:ya;this._parser=null}function fe(a){this.manager=</td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>ya;<span class="pl-c1">this</span>.<span class="pl-smi">_parser</span><span class="pl-k">=</span><span class="pl-c1">null</span>}function fd(a){this.manager=void 0!==a?a:ya}function ge(a){this.manager=void 0!==a?a:ya}function Ad(a){this.manager=void 0!==a?a:ya}function E(){this.type=&quot;Curve&quot;;this.arcLengthDivisions=200}function Da(a,b,c,d,e,f,g,h){E.call(this);this.type=&quot;EllipseCurve&quot;;this.aX=a||0;this.aY=b||0;this.xRadius=c||1;this.yRadius=d||1;this.aStartAngle=e||0;this.aEndAngle=f||2*Math.PI;this.aClockwise=g||!1;this.aRotation=h||0}function mc(a,b,c,d,e,f){Da.call(this,a,b,c,c,d,e,f);this.type=</td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>ArcCurve<span class="pl-pds">&quot;</span></span>}function he(){var a=0,b=0,c=0,d=0;return{initCatmullRom:function(e,f,g,h,l){e=l*(g-e);h=l*(h-f);a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},initNonuniformCatmullRom:function(e,f,g,h,l,m,k){e=((f-e)/l-(g-e)/(l+m)+(g-f)/m)*m;h=((g-f)/m-(h-f)/(m+k)+(h-g)/k)*m;a=f;b=e;c=-3*f+3*g-2*e-h;d=2*f-2*g+e+h},calc:function(e){var f=e*e;return a+b*e+c*f+d*f*e}}}function pa(a,b,c,d){E.call(this);this.type=&quot;CatmullRomCurve3&quot;;this.points=a||[];this.closed=b||!1;this.curveType=c||&quot;centripetal&quot;;this.tension=d||</td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">.5</span>}function mf(a,b,c,d,e){b=.5*(d-b);e=.5*(e-c);var f=a*a;return(2*c-2*d+b+e)*a*f+(-3*c+3*d-2*b-e)*f+b*a+c}function gd(a,b,c,d){var e=1-a;return e*e*b+2*(1-a)*a*c+a*a*d}function hd(a,b,c,d,e){var f=1-a,g=1-a;return f*f*f*b+3*g*g*a*c+3*(1-a)*a*a*d+a*a*a*e}function Ma(a,b,c,d){E.call(this);this.type=&quot;CubicBezierCurve&quot;;this.v0=a||new B;this.v1=b||new B;this.v2=c||new B;this.v3=d||new B}function Va(a,b,c,d){E.call(this);this.type=&quot;CubicBezierCurve3&quot;;this.v0=a||new p;this.v1=b||new p;this.v2=c||new p;</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">v3</span><span class="pl-k">=</span>d<span class="pl-k">||</span><span class="pl-k">new</span> <span class="pl-en">p</span>}function ia(a,b){E.call(this);this.type=&quot;LineCurve&quot;;this.v1=a||new B;this.v2=b||new B}function Na(a,b){E.call(this);this.type=&quot;LineCurve3&quot;;this.v1=a||new p;this.v2=b||new p}function Oa(a,b,c){E.call(this);this.type=&quot;QuadraticBezierCurve&quot;;this.v0=a||new B;this.v1=b||new B;this.v2=c||new B}function Wa(a,b,c){E.call(this);this.type=&quot;QuadraticBezierCurve3&quot;;this.v0=a||new p;this.v1=b||new p;this.v2=c||new p}function Pa(a){E.call(this);this.type=&quot;SplineCurve&quot;;this.points=a||[]}function bb(){E.call(this);</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>CurvePath<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">curves</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">autoClose</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}function Qa(a){bb.call(this);this.type=&quot;Path&quot;;this.currentPoint=new B;a&amp;&amp;this.setFromPoints(a)}function jb(a){Qa.call(this,a);this.uuid=J.generateUUID();this.type=&quot;Shape&quot;;this.holes=[]}function X(a,b){H.call(this);this.type=&quot;Light&quot;;this.color=new G(a);this.intensity=void 0!==b?b:1;this.receiveShadow=void 0}function Bd(a,b,c){X.call(this,a,c);this.type=&quot;HemisphereLight&quot;;this.castShadow=void 0;this.position.copy(H.DefaultUp);this.updateMatrix();</td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">groundColor</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>(b)}function Hb(a){this.camera=a;this.bias=0;this.radius=1;this.mapSize=new B(512,512);this.map=null;this.matrix=new R}function Cd(){Hb.call(this,new Z(50,1,.5,500))}function Dd(a,b,c,d,e,f){X.call(this,a,b);this.type=&quot;SpotLight&quot;;this.position.copy(H.DefaultUp);this.updateMatrix();this.target=new H;Object.defineProperty(this,&quot;power&quot;,{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a/Math.PI}});this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:</td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">/</span><span class="pl-c1">3</span>;<span class="pl-c1">this</span>.<span class="pl-smi">penumbra</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>e<span class="pl-k">?</span>e<span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">decay</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">?</span>f<span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Cd</span>}function Ed(a,b,c,d){X.call(this,a,b);this.type=&quot;PointLight&quot;;Object.defineProperty(this,&quot;power&quot;,{get:function(){return 4*this.intensity*Math.PI},set:function(a){this.intensity=a/(4*Math.PI)}});this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1;this.shadow=new Hb(new Z(90,1,.5,500))}function Fd(){Hb.call(this,new Mb(-5,5,5,-5,.5,500))}function Gd(a,b){X.call(this,a,b);this.type=&quot;DirectionalLight&quot;;this.position.copy(H.DefaultUp);</td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">updateMatrix</span>();<span class="pl-c1">this</span>.<span class="pl-c1">target</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">H</span>;<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Fd</span>}function Hd(a,b){X.call(this,a,b);this.type=&quot;AmbientLight&quot;;this.castShadow=void 0}function Id(a,b,c,d){X.call(this,a,b);this.type=&quot;RectAreaLight&quot;;this.width=void 0!==c?c:10;this.height=void 0!==d?d:10}function Jd(a,b,c,d){ja.call(this,a,b,c,d)}function Kd(a,b,c){ja.call(this,a,b,c)}function Ea(a,b,c,d){this.parameterPositions=a;this._cachedIndex=0;this.resultBuffer=void 0!==d?d:new b.constructor(c);this.sampleValues=b;this.valueSize=c}function Ld(a,</td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code blob-code-inner js-file-line">b,c,d){<span class="pl-smi">Ea</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,b,c,d)}function id(a,b,c,d){ja.call(this,a,b,c,d)}function Md(a,b,c,d){ja.call(this,a,b,c,d)}function nc(a,b,c,d){ja.call(this,a,b,c,d)}function Nd(a,b,c,d){Ea.call(this,a,b,c,d);this._offsetNext=this._weightNext=this._offsetPrev=this._weightPrev=-0}function jd(a,b,c,d){Ea.call(this,a,b,c,d)}function Od(a,b,c,d){Ea.call(this,a,b,c,d)}function ja(a,b,c,d){if(void 0===a)throw Error(&quot;THREE.KeyframeTrack: track name is undefined&quot;);if(void 0===b||0===b.length)throw Error(&quot;THREE.KeyframeTrack: no keyframes in track named &quot;+</td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code blob-code-inner js-file-line">a);<span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">times</span><span class="pl-k">=</span><span class="pl-smi">na</span>.<span class="pl-en">convertArray</span>(b,<span class="pl-c1">this</span>.<span class="pl-smi">TimeBufferType</span>);<span class="pl-c1">this</span>.<span class="pl-smi">values</span><span class="pl-k">=</span><span class="pl-smi">na</span>.<span class="pl-en">convertArray</span>(c,<span class="pl-c1">this</span>.<span class="pl-smi">ValueBufferType</span>);<span class="pl-c1">this</span>.<span class="pl-en">setInterpolation</span>(d<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">DefaultInterpolation</span>);<span class="pl-c1">this</span>.<span class="pl-en">validate</span>();<span class="pl-c1">this</span>.<span class="pl-en">optimize</span>()}function oc(a,b,c,d){ja.call(this,a,b,c,d)}function Ga(a,b,c){this.name=a;this.tracks=c;this.duration=void 0!==b?b:-1;this.uuid=J.generateUUID();0&gt;this.duration&amp;&amp;this.resetDuration();this.optimize()}function Pd(a){this.manager=void 0!==a?a:ya;this.textures={}}function ie(a){this.manager=void 0!==a?a:</td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code blob-code-inner js-file-line">ya}function pc(){}function je(a){&quot;boolean&quot;===typeof a&amp;&amp;(console.warn(&quot;THREE.JSONLoader: showStatus parameter has been removed from constructor.&quot;),a=void 0);this.manager=void 0!==a?a:ya;this.withCredentials=!1}function nf(a){this.manager=void 0!==a?a:ya;this.texturePath=&quot;&quot;}function ke(a){&quot;undefined&quot;===typeof createImageBitmap&amp;&amp;console.warn(&quot;THREE.ImageBitmapLoader: createImageBitmap() not supported.&quot;);&quot;undefined&quot;===typeof fetch&amp;&amp;console.warn(&quot;THREE.ImageBitmapLoader: fetch() not supported.&quot;);this.manager=</td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>ya;<span class="pl-c1">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>}function le(){this.type=&quot;ShapePath&quot;;this.color=new G;this.subPaths=[];this.currentPath=null}function me(a){this.type=&quot;Font&quot;;this.data=a}function of(a){this.manager=void 0!==a?a:ya}function ne(a){this.manager=void 0!==a?a:ya}function pf(){this.type=&quot;StereoCamera&quot;;this.aspect=1;this.eyeSep=.064;this.cameraL=new Z;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new Z;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1}function kd(a,</td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code blob-code-inner js-file-line">b,c){<span class="pl-c1">H</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>CubeCamera<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Z</span>(<span class="pl-c1">90</span>,<span class="pl-c1">1</span>,a,b);<span class="pl-smi">d</span>.<span class="pl-smi">up</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>);<span class="pl-smi">d</span>.<span class="pl-en">lookAt</span>(<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>));<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(d);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Z</span>(<span class="pl-c1">90</span>,<span class="pl-c1">1</span>,a,b);<span class="pl-smi">e</span>.<span class="pl-smi">up</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>);<span class="pl-smi">e</span>.<span class="pl-en">lookAt</span>(<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>));<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(e);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Z</span>(<span class="pl-c1">90</span>,<span class="pl-c1">1</span>,a,b);<span class="pl-smi">f</span>.<span class="pl-smi">up</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-smi">f</span>.<span class="pl-en">lookAt</span>(<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>));<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(f);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Z</span>(<span class="pl-c1">90</span>,<span class="pl-c1">1</span>,a,b);<span class="pl-smi">g</span>.<span class="pl-smi">up</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-smi">g</span>.<span class="pl-en">lookAt</span>(<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>));<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(g);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Z</span>(<span class="pl-c1">90</span>,<span class="pl-c1">1</span>,a,b);<span class="pl-smi">h</span>.<span class="pl-smi">up</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>);<span class="pl-smi">h</span>.<span class="pl-en">lookAt</span>(<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>));<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(h);<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Z</span>(<span class="pl-c1">90</span>,<span class="pl-c1">1</span>,a,b);<span class="pl-smi">l</span>.<span class="pl-smi">up</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>);<span class="pl-smi">l</span>.<span class="pl-en">lookAt</span>(<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>));<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(l);<span class="pl-c1">this</span>.<span class="pl-smi">renderTarget</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">Lb</span>(c,c,{format<span class="pl-k">:</span><span class="pl-c1">1022</span>,magFilter<span class="pl-k">:</span><span class="pl-c1">1006</span>,minFilter<span class="pl-k">:</span><span class="pl-c1">1006</span>});<span class="pl-c1">this</span>.<span class="pl-smi">renderTarget</span>.<span class="pl-smi">texture</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>CubeCamera<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">parent</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">updateMatrixWorld</span>();<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderTarget</span>,m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">generateMipmaps</span>;<span class="pl-smi">c</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">generateMipmaps</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">c</span>.<span class="pl-smi">activeCubeFace</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-en">render</span>(b,d,c);<span class="pl-smi">c</span>.<span class="pl-smi">activeCubeFace</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">a</span>.<span class="pl-en">render</span>(b,e,c);<span class="pl-smi">c</span>.<span class="pl-smi">activeCubeFace</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">a</span>.<span class="pl-en">render</span>(b,f,c);<span class="pl-smi">c</span>.<span class="pl-smi">activeCubeFace</span><span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-smi">a</span>.<span class="pl-en">render</span>(b,g,c);<span class="pl-smi">c</span>.<span class="pl-smi">activeCubeFace</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">a</span>.<span class="pl-en">render</span>(b,h,c);<span class="pl-smi">c</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">generateMipmaps</span><span class="pl-k">=</span>m;<span class="pl-smi">c</span>.<span class="pl-smi">activeCubeFace</span><span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-smi">a</span>.<span class="pl-en">render</span>(b,l,c);<span class="pl-smi">a</span>.<span class="pl-en">setRenderTarget</span>(<span class="pl-c1">null</span>)};</td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderTarget</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">&gt;</span>f;f<span class="pl-k">++</span>)<span class="pl-smi">e</span>.<span class="pl-smi">activeCubeFace</span><span class="pl-k">=</span>f,<span class="pl-smi">a</span>.<span class="pl-en">setRenderTarget</span>(e),<span class="pl-smi">a</span>.<span class="pl-c1">clear</span>(b,c,d);<span class="pl-smi">a</span>.<span class="pl-en">setRenderTarget</span>(<span class="pl-c1">null</span>)}}function oe(){H.call(this);this.type=&quot;AudioListener&quot;;this.context=pe.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null}function qc(a){H.call(this);this.type=&quot;Audio&quot;;this.context=a.context;this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=!1;this.buffer=null;this.loop=</td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">offset</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">startTime</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">playbackRate</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">isPlaying</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">hasPlaybackControl</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">sourceType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>empty<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">filters</span><span class="pl-k">=</span>[]}function qe(a){qc.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain)}function re(a,b){this.analyser=a.context.createAnalyser();this.analyser.fftSize=void 0!==b?b:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);a.getOutput().connect(this.analyser)}function se(a,b,c){this.binding=a;this.valueSize=c;a=Float64Array;switch(b){case &quot;quaternion&quot;:b=</td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_slerp</span>;<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>case <span class="pl-s"><span class="pl-pds">&quot;</span>bool<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-c1">Array</span>;b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_select</span>;<span class="pl-k">break</span>;default<span class="pl-k">:</span>b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_lerp</span>}<span class="pl-c1">this</span>.<span class="pl-smi">buffer</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a</span>(<span class="pl-c1">4</span><span class="pl-k">*</span>c);<span class="pl-c1">this</span>.<span class="pl-smi">_mixBufferRegion</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">referenceCount</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">useCount</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">cumulativeWeight</span><span class="pl-k">=</span><span class="pl-c1">0</span>}function qf(a,b,c){c=c||ra.parseTrackName(b);this._targetGroup=a;this._bindings=a.subscribe_(b,c)}function ra(a,b,c){this.path=b;this.parsedPath=c||ra.parseTrackName(b);this.node=ra.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a}function rf(){this.uuid=J.generateUUID();this._objects=Array.prototype.slice.call(arguments);</td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">nCachedObjects_</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> a<span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_indicesByUUID</span><span class="pl-k">=</span>a;<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;b<span class="pl-k">!==</span>c;<span class="pl-k">++</span>b)a[<span class="pl-c1">arguments</span>[b].<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">_paths</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_parsedPaths</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_bindingsIndicesByPath</span><span class="pl-k">=</span>{};<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-c1">this</span>.<span class="pl-smi">stats</span><span class="pl-k">=</span>{objects<span class="pl-k">:</span>{<span class="pl-k">get</span> <span class="pl-en">total</span>(){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-smi">_objects</span>.<span class="pl-c1">length</span>},<span class="pl-k">get</span> <span class="pl-en">inUse</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">total</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">nCachedObjects_</span>}},<span class="pl-k">get</span> <span class="pl-en">bindingsPerObject</span>(){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-smi">_bindings</span>.<span class="pl-c1">length</span>}}}function sf(a,b,c){this._mixer=a;this._clip=b;this._localRoot=c||null;a=b.tracks;b=a.length;c=Array(b);for(var d={endingStart:2400,</td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code blob-code-inner js-file-line">endingEnd<span class="pl-k">:</span><span class="pl-c1">2400</span>},e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">!==</span>b;<span class="pl-k">++</span>e){<span class="pl-k">var</span> f<span class="pl-k">=</span>a[e].<span class="pl-en">createInterpolant</span>(<span class="pl-c1">null</span>);c[e]<span class="pl-k">=</span>f;<span class="pl-smi">f</span>.<span class="pl-smi">settings</span><span class="pl-k">=</span>d}<span class="pl-c1">this</span>.<span class="pl-smi">_interpolantSettings</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">_interpolants</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">_propertyBindings</span><span class="pl-k">=</span><span class="pl-c1">Array</span>(b);<span class="pl-c1">this</span>.<span class="pl-smi">_weightInterpolant</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_timeScaleInterpolant</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_byClipCacheIndex</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">loop</span><span class="pl-k">=</span><span class="pl-c1">2201</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_loopCount</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_startTime</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">time</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_effectiveWeight</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">weight</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_effectiveTimeScale</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">timeScale</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">repetitions</span><span class="pl-k">=</span><span class="pl-c1">Infinity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">paused</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">clampWhenFinished</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">zeroSlopeAtEnd</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">zeroSlopeAtStart</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}function te(a){this._root=a;this._initMemoryManager();this.time=this._accuIndex=0;this.timeScale=1}function Qd(a,b){&quot;string&quot;===typeof a&amp;&amp;(console.warn(&quot;THREE.Uniform: Type parameter is no longer needed.&quot;),a=b);this.value=a}function ue(){D.call(this);this.type=&quot;InstancedBufferGeometry&quot;;this.maxInstancedCount=void 0}function ve(a,b,c,d){this.data=a;this.itemSize=b;this.offset=c;this.normalized=!0===d}function rc(a,b){this.array=a;this.stride=b;this.count=void 0!==a?a.length/</td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">dynamic</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">updateRange</span><span class="pl-k">=</span>{offset<span class="pl-k">:</span><span class="pl-c1">0</span>,count<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>};<span class="pl-c1">this</span>.<span class="pl-c1">version</span><span class="pl-k">=</span><span class="pl-c1">0</span>}function we(a,b,c){rc.call(this,a,b);this.meshPerAttribute=c||1}function xe(a,b,c){L.call(this,a,b);this.meshPerAttribute=c||1}function tf(a,b,c,d){this.ray=new sb(a,b);this.near=c||0;this.far=d||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn(&quot;THREE.Raycaster: params.PointCloud has been renamed to params.Points.&quot;);return this.Points}}})}</td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">uf</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">distance</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">distance</span>}function ye(a,b,c,d){if(!1!==a.visible&amp;&amp;(a.raycast(b,c),!0===d)){a=a.children;d=0;for(var e=a.length;d&lt;e;d++)ye(a[d],b,c,!0)}}function vf(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1}function wf(a,b,c){this.radius=void 0!==a?a:1;this.phi=void 0!==b?b:0;this.theta=void 0!==c?c:0;return this}function xf(a,b,c){this.radius=void 0!==a?a:1;this.theta=void 0!==b?b:0;this.y=void 0!==c?c:0;return this}function ze(a,</td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code blob-code-inner js-file-line">b){<span class="pl-c1">this</span>.<span class="pl-smi">min</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">B</span>(<span class="pl-c1">Infinity</span>,<span class="pl-c1">Infinity</span>);<span class="pl-c1">this</span>.<span class="pl-smi">max</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">B</span>(<span class="pl-k">-</span><span class="pl-c1">Infinity</span>,<span class="pl-k">-</span><span class="pl-c1">Infinity</span>)}function ld(a){H.call(this);this.material=a;this.render=function(){}}function md(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16711680;d=void 0!==d?d:1;b=0;(c=this.object.geometry)&amp;&amp;c.isGeometry?b=3*c.faces.length:c&amp;&amp;c.isBufferGeometry&amp;&amp;(b=c.attributes.normal.count);c=new D;b=new z(6*b,3);c.addAttribute(&quot;position&quot;,b);Y.call(this,c,new T({color:a,linewidth:d}));this.matrixAutoUpdate=</td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">update</span>()}function sc(a,b){H.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=b;a=new D;b=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var c=0,d=1;32&gt;c;c++,d++){var e=c/32*Math.PI*2,f=d/32*Math.PI*2;b.push(Math.cos(e),Math.sin(e),1,Math.cos(f),Math.sin(f),1)}a.addAttribute(&quot;position&quot;,new z(b,3));b=new T({fog:!1});this.cone=new Y(a,b);this.add(this.cone);this.update()}function yf(a){var b=[];a&amp;&amp;a.isBone&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(a);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-smi">push</span>.<span class="pl-c1">apply</span>(b,<span class="pl-en">yf</span>(<span class="pl-smi">a</span>.<span class="pl-smi">children</span>[c]));<span class="pl-k">return</span> b}function tc(a){for(var b=yf(a),c=new D,d=[],e=[],f=new G(0,0,1),g=new G(0,1,0),h=0;h&lt;b.length;h++){var l=b[h];l.parent&amp;&amp;l.parent.isBone&amp;&amp;(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(g.r,g.g,g.b))}c.addAttribute(&quot;position&quot;,new z(d,3));c.addAttribute(&quot;color&quot;,new z(e,3));d=new T({vertexColors:2,depthTest:!1,depthWrite:!1,transparent:!0});Y.call(this,c,d);this.root=a;this.bones=b;this.matrix=a.matrixWorld;</td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}function uc(a,b,c){this.light=a;this.light.updateMatrixWorld();this.color=c;a=new xb(b,4,2);b=new ua({wireframe:!0,fog:!1});va.call(this,a,b);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1;this.update()}function vc(a,b){H.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=b;a=new T({fog:!1});b=new D;b.addAttribute(&quot;position&quot;,new L(new Float32Array(15),3));this.line=new wa(b,a);this.add(this.line);</td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">update</span>()}function wc(a,b,c){H.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.color=c;a=new ub(b);a.rotateY(.5*Math.PI);this.material=new ua({wireframe:!0,fog:!1});void 0===this.color&amp;&amp;(this.material.vertexColors=2);b=a.getAttribute(&quot;position&quot;);b=new Float32Array(3*b.count);a.addAttribute(&quot;color&quot;,new L(b,3));this.add(new va(a,this.material));this.update()}function nd(a,b,c,d){a=a||10;b=b||10;c=new G(void 0!==c?c:4473924);d=new G(void 0!==</td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-c1">8947848</span>);<span class="pl-k">var</span> e<span class="pl-k">=</span>b<span class="pl-k">/</span><span class="pl-c1">2</span>,f<span class="pl-k">=</span>a<span class="pl-k">/</span>b,g<span class="pl-k">=</span>a<span class="pl-k">/</span><span class="pl-c1">2</span>;a<span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span>[],l<span class="pl-k">=</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-k">-</span>g;l<span class="pl-k">&lt;=</span>b;l<span class="pl-k">++</span>,k<span class="pl-k">+=</span>f){<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-k">-</span>g,<span class="pl-c1">0</span>,k,g,<span class="pl-c1">0</span>,k);<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(k,<span class="pl-c1">0</span>,<span class="pl-k">-</span>g,k,<span class="pl-c1">0</span>,g);<span class="pl-k">var</span> n<span class="pl-k">=</span>l<span class="pl-k">===</span>e<span class="pl-k">?</span>c<span class="pl-k">:</span>d;<span class="pl-smi">n</span>.<span class="pl-en">toArray</span>(h,m);m<span class="pl-k">+=</span><span class="pl-c1">3</span>;<span class="pl-smi">n</span>.<span class="pl-en">toArray</span>(h,m);m<span class="pl-k">+=</span><span class="pl-c1">3</span>;<span class="pl-smi">n</span>.<span class="pl-en">toArray</span>(h,m);m<span class="pl-k">+=</span><span class="pl-c1">3</span>;<span class="pl-smi">n</span>.<span class="pl-en">toArray</span>(h,m);m<span class="pl-k">+=</span><span class="pl-c1">3</span>}b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">D</span>;<span class="pl-smi">b</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(a,<span class="pl-c1">3</span>));<span class="pl-smi">b</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(h,<span class="pl-c1">3</span>));c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">T</span>({vertexColors<span class="pl-k">:</span><span class="pl-c1">2</span>});<span class="pl-c1">Y</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,c)}function Rd(a,b,c,d,e,f){a=a||10;b=b||16;c=c||8;d=d||64;e=new G(void 0!==e?e:4473924);f=new G(void 0!==f?f:8947848);var g=[],h=[],l;for(l=0;l&lt;=b;l++){var m=l/</td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">*</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>;<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(m)<span class="pl-k">*</span>a;m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(m)<span class="pl-k">*</span>a;<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(k,<span class="pl-c1">0</span>,m);<span class="pl-k">var</span> n<span class="pl-k">=</span>l<span class="pl-k">&amp;</span><span class="pl-c1">1</span><span class="pl-k">?</span>e<span class="pl-k">:</span>f;<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-smi">n</span>.<span class="pl-smi">r</span>,<span class="pl-smi">n</span>.<span class="pl-smi">g</span>,<span class="pl-smi">n</span>.<span class="pl-smi">b</span>);<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-smi">n</span>.<span class="pl-smi">r</span>,<span class="pl-smi">n</span>.<span class="pl-smi">g</span>,<span class="pl-smi">n</span>.<span class="pl-smi">b</span>)}<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;=</span>c;l<span class="pl-k">++</span>){n<span class="pl-k">=</span>l<span class="pl-k">&amp;</span><span class="pl-c1">1</span><span class="pl-k">?</span>e<span class="pl-k">:</span>f;<span class="pl-k">var</span> t<span class="pl-k">=</span>a<span class="pl-k">-</span>a<span class="pl-k">/</span>c<span class="pl-k">*</span>l;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>d;b<span class="pl-k">++</span>)m<span class="pl-k">=</span>b<span class="pl-k">/</span>d<span class="pl-k">*</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>,k<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(m)<span class="pl-k">*</span>t,m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(m)<span class="pl-k">*</span>t,<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(k,<span class="pl-c1">0</span>,m),<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-smi">n</span>.<span class="pl-smi">r</span>,<span class="pl-smi">n</span>.<span class="pl-smi">g</span>,<span class="pl-smi">n</span>.<span class="pl-smi">b</span>),m<span class="pl-k">=</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">/</span>d<span class="pl-k">*</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>,k<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(m)<span class="pl-k">*</span>t,m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(m)<span class="pl-k">*</span>t,<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(k,<span class="pl-c1">0</span>,m),<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-smi">n</span>.<span class="pl-smi">r</span>,<span class="pl-smi">n</span>.<span class="pl-smi">g</span>,<span class="pl-smi">n</span>.<span class="pl-smi">b</span>)}a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">D</span>;<span class="pl-smi">a</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(g,<span class="pl-c1">3</span>));<span class="pl-smi">a</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(h,<span class="pl-c1">3</span>));g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">T</span>({vertexColors<span class="pl-k">:</span><span class="pl-c1">2</span>});<span class="pl-c1">Y</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,g)}function od(a,b,c,d){this.object=</td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code blob-code-inner js-file-line">a;<span class="pl-c1">this</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-c1">1</span>;a<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">16776960</span>;d<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-c1">1</span>;b<span class="pl-k">=</span><span class="pl-c1">0</span>;(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">object</span>.<span class="pl-smi">geometry</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">isGeometry</span><span class="pl-k">?</span>b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span><span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.<span class="pl-pds">&quot;</span></span>);c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">D</span>;b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">z</span>(<span class="pl-c1">6</span><span class="pl-k">*</span>b,<span class="pl-c1">3</span>);<span class="pl-smi">c</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,b);<span class="pl-c1">Y</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,c,<span class="pl-k">new</span> <span class="pl-en">T</span>({color<span class="pl-k">:</span>a,linewidth<span class="pl-k">:</span>d}));<span class="pl-c1">this</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">update</span>()}function xc(a,b,c){H.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-c1">color</span><span class="pl-k">=</span>c;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">1</span>);a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">D</span>;<span class="pl-smi">a</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>([<span class="pl-k">-</span>b,b,<span class="pl-c1">0</span>,b,b,<span class="pl-c1">0</span>,b,<span class="pl-k">-</span>b,<span class="pl-c1">0</span>,<span class="pl-k">-</span>b,<span class="pl-k">-</span>b,<span class="pl-c1">0</span>,<span class="pl-k">-</span>b,b,<span class="pl-c1">0</span>],<span class="pl-c1">3</span>));b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">T</span>({fog<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>});<span class="pl-c1">this</span>.<span class="pl-smi">lightPlane</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">wa</span>(a,b);<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">lightPlane</span>);a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">D</span>;<span class="pl-smi">a</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>([<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>],<span class="pl-c1">3</span>));<span class="pl-c1">this</span>.<span class="pl-smi">targetLine</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">wa</span>(a,b);<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">targetLine</span>);<span class="pl-c1">this</span>.<span class="pl-en">update</span>()}function pd(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){f.push(0,0,0);g.push(b.r,b.g,b.b);void 0===h[a]&amp;&amp;(h[a]=[]);h[a].push(f.length/3-1)}var d=new D,e=new T({color:16777215,vertexColors:1}),</td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span>[],g<span class="pl-k">=</span>[],h<span class="pl-k">=</span>{},l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">16755200</span>),m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">16711680</span>),k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">43775</span>),n<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">16777215</span>),t<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">3355443</span>);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>n2<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n2<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>n4<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n4<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>n3<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n3<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>n1<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>f1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>f2<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>f2<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>f4<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>f4<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>f3<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>f3<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>f1<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>f1<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n2<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>f2<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n3<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>f3<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n4<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>f4<span class="pl-pds">&quot;</span></span>,l);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>n1<span class="pl-pds">&quot;</span></span>,m);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>n2<span class="pl-pds">&quot;</span></span>,m);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>n3<span class="pl-pds">&quot;</span></span>,m);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>n4<span class="pl-pds">&quot;</span></span>,m);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>u1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>u2<span class="pl-pds">&quot;</span></span>,k);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>u2<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>u3<span class="pl-pds">&quot;</span></span>,k);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>u3<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>u1<span class="pl-pds">&quot;</span></span>,k);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>t<span class="pl-pds">&quot;</span></span>,n);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span>,t);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cn1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cn2<span class="pl-pds">&quot;</span></span>,t);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cn3<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cn4<span class="pl-pds">&quot;</span></span>,t);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cf1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cf2<span class="pl-pds">&quot;</span></span>,t);<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cf3<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cf4<span class="pl-pds">&quot;</span></span>,t);<span class="pl-smi">d</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">z</span>(f,<span class="pl-c1">3</span>));<span class="pl-smi">d</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(g,<span class="pl-c1">3</span>));<span class="pl-c1">Y</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,d,e);<span class="pl-c1">this</span>.<span class="pl-smi">camera</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">camera</span>.<span class="pl-smi">updateProjectionMatrix</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">camera</span>.<span class="pl-en">updateProjectionMatrix</span>();<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">pointMap</span><span class="pl-k">=</span>h;<span class="pl-c1">this</span>.<span class="pl-en">update</span>()}function Ib(a,b){this.object=a;void 0===b&amp;&amp;(b=16776960);a=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var c=new Float32Array(24),d=new D;d.setIndex(new L(a,1));d.addAttribute(&quot;position&quot;,new L(c,3));Y.call(this,d,new T({color:b}));this.matrixAutoUpdate=</td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">update</span>()}function qd(a,b){this.type=&quot;Box3Helper&quot;;this.box=a;a=void 0!==b?b:16776960;b=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var c=new D;c.setIndex(new L(b,1));c.addAttribute(&quot;position&quot;,new z([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3));Y.call(this,c,new T({color:a}));this.geometry.computeBoundingSphere()}function rd(a,b,c){this.type=&quot;PlaneHelper&quot;;this.plane=a;this.size=void 0===b?1:b;a=void 0!==c?c:16776960;b=new D;b.addAttribute(&quot;position&quot;,</td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">z</span>([<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],<span class="pl-c1">3</span>));<span class="pl-smi">b</span>.<span class="pl-en">computeBoundingSphere</span>();<span class="pl-smi">wa</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,b,<span class="pl-k">new</span> <span class="pl-en">T</span>({color<span class="pl-k">:</span>a}));b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">D</span>;<span class="pl-smi">b</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>([<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>],<span class="pl-c1">3</span>));<span class="pl-smi">b</span>.<span class="pl-en">computeBoundingSphere</span>();<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(<span class="pl-k">new</span> <span class="pl-en">va</span>(b,<span class="pl-k">new</span> <span class="pl-en">ua</span>({color<span class="pl-k">:</span>a,opacity<span class="pl-k">:</span><span class="pl-c1">.2</span>,transparent<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,depthWrite<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>})))}function Jb(a,b,c,d,e,f){H.call(this);void 0===d&amp;&amp;(d=16776960);void 0===c&amp;&amp;(c=1);void 0===e&amp;&amp;(e=.2*c);void 0===f&amp;&amp;(f=.2*e);void 0===Sd&amp;&amp;(Sd=new D,Sd.addAttribute(&quot;position&quot;,</td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">z</span>([<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>],<span class="pl-c1">3</span>)),Ae<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ab</span>(<span class="pl-c1">0</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">1</span>,<span class="pl-c1">5</span>,<span class="pl-c1">1</span>),<span class="pl-smi">Ae</span>.<span class="pl-en">translate</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">.5</span>,<span class="pl-c1">0</span>));<span class="pl-c1">this</span>.<span class="pl-smi">position</span>.<span class="pl-en">copy</span>(b);<span class="pl-c1">this</span>.<span class="pl-smi">line</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">wa</span>(Sd,<span class="pl-k">new</span> <span class="pl-en">T</span>({color<span class="pl-k">:</span>d}));<span class="pl-c1">this</span>.<span class="pl-smi">line</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">line</span>);<span class="pl-c1">this</span>.<span class="pl-smi">cone</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">va</span>(Ae,<span class="pl-k">new</span> <span class="pl-en">ua</span>({color<span class="pl-k">:</span>d}));<span class="pl-c1">this</span>.<span class="pl-smi">cone</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">cone</span>);<span class="pl-c1">this</span>.<span class="pl-en">setDirection</span>(a);<span class="pl-c1">this</span>.<span class="pl-en">setLength</span>(c,e,f)}function sd(a){a=a||1;var b=[0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a];a=new D;a.addAttribute(&quot;position&quot;,new z(b,3));a.addAttribute(&quot;color&quot;,new z([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));b=new T({vertexColors:2});</td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Y</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,b)}function zf(a){console.warn(&quot;THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.&quot;);pa.call(this,a);this.type=&quot;catmullrom&quot;;this.closed=!0}function Af(a){console.warn(&quot;THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.&quot;);pa.call(this,a);this.type=&quot;catmullrom&quot;}function Be(a){console.warn(&quot;THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.&quot;);pa.call(this,a);this.type=&quot;catmullrom&quot;}void 0===Number.EPSILON&amp;&amp;(Number.EPSILON=</td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">52</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">Number</span>.<span class="pl-smi">isInteger</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">Number</span>.<span class="pl-en">isInteger</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">isFinite</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a)<span class="pl-k">===</span>a});<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">Math</span>.<span class="pl-smi">sign</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">Math</span>.<span class="pl-en">sign</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">+</span>a});<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> <span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>,{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span>function<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\(</span><span class="pl-c1">\s</span>]</span><span class="pl-k">*</span>)<span class="pl-pds">/</span></span>)[<span class="pl-c1">1</span>]}});<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">Object</span>.<span class="pl-smi">assign</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">function</span>(){<span class="pl-c1">Object</span>.<span class="pl-en">assign</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">===</span>a)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot convert undefined or null to object<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Object</span>(a),c<span class="pl-k">=</span><span class="pl-c1">1</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">arguments</span>[c];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!==</span>d)<span class="pl-k">for</span>(<span class="pl-k">var</span> e <span class="pl-k">in</span> d)<span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">hasOwnProperty</span>.<span class="pl-c1">call</span>(d,e)<span class="pl-k">&amp;&amp;</span>(b[e]<span class="pl-k">=</span>d[e])}<span class="pl-k">return</span> b}}();<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">za</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">addEventListener</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">_listeners</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_listeners</span><span class="pl-k">=</span>{});<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_listeners</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c[a]<span class="pl-k">&amp;&amp;</span>(c[a]<span class="pl-k">=</span>[]);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">===</span>c[a].<span class="pl-c1">indexOf</span>(b)<span class="pl-k">&amp;&amp;</span>c[a].<span class="pl-c1">push</span>(b)},<span class="pl-en">hasEventListener</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">_listeners</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_listeners</span>;<span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c[a]<span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!==</span>c[a].<span class="pl-c1">indexOf</span>(b)},<span class="pl-en">removeEventListener</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">_listeners</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_listeners</span>[a],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(b),<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">splice</span>(b,<span class="pl-c1">1</span>)))},<span class="pl-en">dispatchEvent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">_listeners</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_listeners</span>[<span class="pl-smi">a</span>.<span class="pl-c1">type</span>];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b){<span class="pl-smi">a</span>.<span class="pl-c1">target</span><span class="pl-k">=</span><span class="pl-c1">this</span>;b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)b[c].<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a)}}}});<span class="pl-k">var</span> <span class="pl-c1">J</span><span class="pl-k">=</span>{<span class="pl-c1">DEG2RAD</span><span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">/</span><span class="pl-c1">180</span>,<span class="pl-c1">RAD2DEG</span><span class="pl-k">:</span><span class="pl-c1">180</span><span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>,<span class="pl-en">generateUUID</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>[],b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">256</span><span class="pl-k">&gt;</span>b;b<span class="pl-k">++</span>)a[b]<span class="pl-k">=</span>(<span class="pl-c1">16</span><span class="pl-k">&gt;</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">toString</span>(<span class="pl-c1">16</span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">4294967295</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">|</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">4294967295</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">|</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">4294967295</span><span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">|</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-c1">4294967295</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">|</span><span class="pl-c1">0</span>;<span class="pl-k">return</span>(a[b<span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span>a[b<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span>a[b<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span>a[b<span class="pl-k">&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[d<span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span>a[d<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[d<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">15</span><span class="pl-k">|</span><span class="pl-c1">64</span>]<span class="pl-k">+</span>a[d<span class="pl-k">&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[e<span class="pl-k">&amp;</span><span class="pl-c1">63</span><span class="pl-k">|</span><span class="pl-c1">128</span>]<span class="pl-k">+</span>a[e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span>a[e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span>a[f<span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span>a[f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span>a[f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">+</span>a[f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]).<span class="pl-c1">toUpperCase</span>()}}(),<span class="pl-en">clamp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(b,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(c,a))},<span class="pl-en">euclideanModulo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>(a<span class="pl-k">%</span>b<span class="pl-k">+</span>b)<span class="pl-k">%</span>b},<span class="pl-en">mapLinear</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span> d<span class="pl-k">+</span>(a<span class="pl-k">-</span>b)<span class="pl-k">*</span>(e<span class="pl-k">-</span>d)<span class="pl-k">/</span>(c<span class="pl-k">-</span>b)},<span class="pl-en">lerp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>c)<span class="pl-k">*</span>a<span class="pl-k">+</span>c<span class="pl-k">*</span>b},<span class="pl-en">smoothstep</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(a<span class="pl-k">&lt;=</span>b)<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">if</span>(a<span class="pl-k">&gt;=</span>c)<span class="pl-k">return</span> <span class="pl-c1">1</span>;a<span class="pl-k">=</span>(a<span class="pl-k">-</span>b)<span class="pl-k">/</span>(c<span class="pl-k">-</span>b);<span class="pl-k">return</span> a<span class="pl-k">*</span>a<span class="pl-k">*</span>(<span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>a)},<span class="pl-en">smootherstep</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(a<span class="pl-k">&lt;=</span>b)<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">if</span>(a<span class="pl-k">&gt;=</span>c)<span class="pl-k">return</span> <span class="pl-c1">1</span>;a<span class="pl-k">=</span>(a<span class="pl-k">-</span>b)<span class="pl-k">/</span>(c<span class="pl-k">-</span>b);<span class="pl-k">return</span> a<span class="pl-k">*</span>a<span class="pl-k">*</span>a<span class="pl-k">*</span>(a<span class="pl-k">*</span>(<span class="pl-c1">6</span><span class="pl-k">*</span>a<span class="pl-k">-</span><span class="pl-c1">15</span>)<span class="pl-k">+</span><span class="pl-c1">10</span>)},<span class="pl-en">randInt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">*</span>(b<span class="pl-k">-</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>))},<span class="pl-en">randFloat</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">*</span>(b<span class="pl-k">-</span>a)},<span class="pl-en">randFloatSpread</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">*</span>(<span class="pl-c1">.5</span><span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>())},<span class="pl-en">degToRad</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">*</span><span class="pl-c1">J</span>.<span class="pl-c1">DEG2RAD</span>},<span class="pl-en">radToDeg</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">*</span><span class="pl-c1">J</span>.<span class="pl-c1">RAD2DEG</span>},<span class="pl-en">isPowerOfTwo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">===</span>(a<span class="pl-k">&amp;</span>a<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span>a},<span class="pl-en">ceilPowerOfTwo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">log</span>(a)<span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">LN2</span>))},<span class="pl-en">floorPowerOfTwo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">log</span>(a)<span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">LN2</span>))}};<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-c1">B</span>.<span class="pl-c1">prototype</span>,{width<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a}},height<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">y</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a}}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">B</span>.<span class="pl-c1">prototype</span>,{isVector2<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setX</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setY</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code blob-code-inner js-file-line"><span class="pl-en">setComponent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">switch</span>(a){<span class="pl-k">case</span> <span class="pl-c1">0</span>:<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>b;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>b;<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>index is out of range: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);}<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getComponent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">switch</span>(a){<span class="pl-k">case</span> <span class="pl-c1">0</span>:<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">y</span>;<span class="pl-k">default</span>:<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>index is out of range: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);}},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-c1">y</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b)<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">addVectors</span>(a,b);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addScaledVector</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">sub</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b)<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">subVectors</span>(a,b);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">subScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code blob-code-inner js-file-line"><span class="pl-en">subVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">multiply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">multiplyScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">divide</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">/=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">/=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">divideScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">1</span><span class="pl-k">/</span>a)},<span class="pl-en">applyMatrix3</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">3</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">6</span>];<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">4</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">7</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">min</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code blob-code-inner js-file-line"><span class="pl-en">max</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clamp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-c1">x</span>));<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-c1">y</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clampScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-c1">set</span>(c,c);<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(d,d);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">clamp</span>(a,b)}}(),<span class="pl-en">clampLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">length</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">divideScalar</span>(c<span class="pl-k">||</span><span class="pl-c1">1</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(a,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(b,c)))},<span class="pl-en">floor</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);</td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">ceil</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">round</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">roundToZero</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>)<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">negate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">dot</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>},<span class="pl-en">lengthSq</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>},<span class="pl-en">length</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>)},<span class="pl-en">manhattanLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>)},<span class="pl-en">normalize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">divideScalar</span>(<span class="pl-c1">this</span>.<span class="pl-c1">length</span>()<span class="pl-k">||</span><span class="pl-c1">1</span>)},<span class="pl-en">angle</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>);<span class="pl-k">return</span> a},<span class="pl-en">distanceTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">this</span>.<span class="pl-en">distanceToSquared</span>(a))},<span class="pl-en">distanceToSquared</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> b<span class="pl-k">*</span>b<span class="pl-k">+</span>a<span class="pl-k">*</span>a},<span class="pl-en">manhattanDistanceTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>)},<span class="pl-en">setLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">normalize</span>().<span class="pl-en">multiplyScalar</span>(a)},</td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code blob-code-inner js-file-line"><span class="pl-en">lerp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>)<span class="pl-k">*</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">lerpVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">subVectors</span>(b,a).<span class="pl-en">multiplyScalar</span>(c).<span class="pl-c1">add</span>(a)},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>},<span class="pl-en">fromArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a[b];<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>[]);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);a[b]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>;a[b<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> a},<span class="pl-en">fromBufferAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector2: offset has been removed from .fromBufferAttribute().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getX</span>(b);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getY</span>(b);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">rotateAround</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(b);b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(b);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>d<span class="pl-k">*</span>c<span class="pl-k">-</span>e<span class="pl-k">*</span>b<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>d<span class="pl-k">*</span>b<span class="pl-k">+</span>e<span class="pl-k">*</span>c<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>,{isMatrix4<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">l</span>,<span class="pl-smi">m</span>,<span class="pl-smi">k</span>,<span class="pl-smi">n</span>,<span class="pl-smi">t</span>,<span class="pl-smi">q</span>,<span class="pl-smi">r</span>,<span class="pl-smi">p</span>){<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;v[<span class="pl-c1">0</span>]<span class="pl-k">=</span>a;v[<span class="pl-c1">4</span>]<span class="pl-k">=</span>b;v[<span class="pl-c1">8</span>]<span class="pl-k">=</span>c;v[<span class="pl-c1">12</span>]<span class="pl-k">=</span>d;v[<span class="pl-c1">1</span>]<span class="pl-k">=</span>e;v[<span class="pl-c1">5</span>]<span class="pl-k">=</span>f;v[<span class="pl-c1">9</span>]<span class="pl-k">=</span>g;v[<span class="pl-c1">13</span>]<span class="pl-k">=</span>h;v[<span class="pl-c1">2</span>]<span class="pl-k">=</span>l;v[<span class="pl-c1">6</span>]<span class="pl-k">=</span>m;v[<span class="pl-c1">10</span>]<span class="pl-k">=</span>k;v[<span class="pl-c1">14</span>]<span class="pl-k">=</span>n;v[<span class="pl-c1">3</span>]<span class="pl-k">=</span>t;v[<span class="pl-c1">7</span>]<span class="pl-k">=</span>q;v[<span class="pl-c1">11</span>]<span class="pl-k">=</span>r;v[<span class="pl-c1">15</span>]<span class="pl-k">=</span>p;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">identity</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code blob-code-inner js-file-line"><span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">R</span>).<span class="pl-en">fromArray</span>(<span class="pl-c1">this</span>.<span class="pl-c1">elements</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;b[<span class="pl-c1">0</span>]<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];b[<span class="pl-c1">1</span>]<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];b[<span class="pl-c1">2</span>]<span class="pl-k">=</span>a[<span class="pl-c1">2</span>];b[<span class="pl-c1">3</span>]<span class="pl-k">=</span>a[<span class="pl-c1">3</span>];b[<span class="pl-c1">4</span>]<span class="pl-k">=</span>a[<span class="pl-c1">4</span>];b[<span class="pl-c1">5</span>]<span class="pl-k">=</span>a[<span class="pl-c1">5</span>];b[<span class="pl-c1">6</span>]<span class="pl-k">=</span>a[<span class="pl-c1">6</span>];b[<span class="pl-c1">7</span>]<span class="pl-k">=</span>a[<span class="pl-c1">7</span>];b[<span class="pl-c1">8</span>]<span class="pl-k">=</span>a[<span class="pl-c1">8</span>];b[<span class="pl-c1">9</span>]<span class="pl-k">=</span>a[<span class="pl-c1">9</span>];b[<span class="pl-c1">10</span>]<span class="pl-k">=</span>a[<span class="pl-c1">10</span>];b[<span class="pl-c1">11</span>]<span class="pl-k">=</span>a[<span class="pl-c1">11</span>];b[<span class="pl-c1">12</span>]<span class="pl-k">=</span>a[<span class="pl-c1">12</span>];b[<span class="pl-c1">13</span>]<span class="pl-k">=</span>a[<span class="pl-c1">13</span>];b[<span class="pl-c1">14</span>]<span class="pl-k">=</span>a[<span class="pl-c1">14</span>];b[<span class="pl-c1">15</span>]<span class="pl-k">=</span>a[<span class="pl-c1">15</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copyPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;b[<span class="pl-c1">12</span>]<span class="pl-k">=</span>a[<span class="pl-c1">12</span>];b[<span class="pl-c1">13</span>]<span class="pl-k">=</span>a[<span class="pl-c1">13</span>];b[<span class="pl-c1">14</span>]<span class="pl-k">=</span>a[<span class="pl-c1">14</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">extractBasis</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixColumn</span>(<span class="pl-c1">this</span>,<span class="pl-c1">0</span>);<span class="pl-smi">b</span>.<span class="pl-en">setFromMatrixColumn</span>(<span class="pl-c1">this</span>,<span class="pl-c1">1</span>);<span class="pl-smi">c</span>.<span class="pl-en">setFromMatrixColumn</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">makeBasis</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">c</span>.<span class="pl-c1">x</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>,<span class="pl-smi">b</span>.<span class="pl-c1">z</span>,<span class="pl-smi">c</span>.<span class="pl-c1">z</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">extractRotation</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">elements</span>,e<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixColumn</span>(b,<span class="pl-c1">0</span>).<span class="pl-c1">length</span>(),f<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixColumn</span>(b,<span class="pl-c1">1</span>).<span class="pl-c1">length</span>();b<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixColumn</span>(b,<span class="pl-c1">2</span>).<span class="pl-c1">length</span>();c[<span class="pl-c1">0</span>]<span class="pl-k">=</span>d[<span class="pl-c1">0</span>]<span class="pl-k">*</span>e;c[<span class="pl-c1">1</span>]<span class="pl-k">=</span>d[<span class="pl-c1">1</span>]<span class="pl-k">*</span>e;c[<span class="pl-c1">2</span>]<span class="pl-k">=</span>d[<span class="pl-c1">2</span>]<span class="pl-k">*</span>e;c[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;c[<span class="pl-c1">4</span>]<span class="pl-k">=</span>d[<span class="pl-c1">4</span>]<span class="pl-k">*</span>f;c[<span class="pl-c1">5</span>]<span class="pl-k">=</span>d[<span class="pl-c1">5</span>]<span class="pl-k">*</span>f;c[<span class="pl-c1">6</span>]<span class="pl-k">=</span>d[<span class="pl-c1">6</span>]<span class="pl-k">*</span>f;c[<span class="pl-c1">7</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;c[<span class="pl-c1">8</span>]<span class="pl-k">=</span>d[<span class="pl-c1">8</span>]<span class="pl-k">*</span>b;c[<span class="pl-c1">9</span>]<span class="pl-k">=</span>d[<span class="pl-c1">9</span>]<span class="pl-k">*</span>b;c[<span class="pl-c1">10</span>]<span class="pl-k">=</span>d[<span class="pl-c1">10</span>]<span class="pl-k">*</span>b;c[<span class="pl-c1">11</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;c[<span class="pl-c1">12</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;c[<span class="pl-c1">13</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;c[<span class="pl-c1">14</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;c[<span class="pl-c1">15</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),</td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code blob-code-inner js-file-line"><span class="pl-en">makeRotationFromEuler</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">isEuler</span><span class="pl-k">||</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>,f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(c);c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(c);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(d);d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(d);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(e);e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(e);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>XYZ<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">order</span>){a<span class="pl-k">=</span>f<span class="pl-k">*</span>h;<span class="pl-k">var</span> l<span class="pl-k">=</span>f<span class="pl-k">*</span>e,m<span class="pl-k">=</span>c<span class="pl-k">*</span>h,k<span class="pl-k">=</span>c<span class="pl-k">*</span>e;b[<span class="pl-c1">0</span>]<span class="pl-k">=</span>g<span class="pl-k">*</span>h;b[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-k">-</span>g<span class="pl-k">*</span>e;b[<span class="pl-c1">8</span>]<span class="pl-k">=</span>d;b[<span class="pl-c1">1</span>]<span class="pl-k">=</span>l<span class="pl-k">+</span>m<span class="pl-k">*</span>d;b[<span class="pl-c1">5</span>]<span class="pl-k">=</span>a<span class="pl-k">-</span>k<span class="pl-k">*</span>d;b[<span class="pl-c1">9</span>]<span class="pl-k">=</span><span class="pl-k">-</span>c<span class="pl-k">*</span>g;b[<span class="pl-c1">2</span>]<span class="pl-k">=</span>k<span class="pl-k">-</span>a<span class="pl-k">*</span>d;b[<span class="pl-c1">6</span>]<span class="pl-k">=</span>m<span class="pl-k">+</span>l<span class="pl-k">*</span>d;b[<span class="pl-c1">10</span>]<span class="pl-k">=</span>f<span class="pl-k">*</span>g}<span class="pl-k">else</span><span class="pl-s"><span class="pl-pds">&quot;</span>YXZ<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">order</span><span class="pl-k">?</span>(a<span class="pl-k">=</span>g<span class="pl-k">*</span>h,l<span class="pl-k">=</span>g<span class="pl-k">*</span>e,m<span class="pl-k">=</span>d<span class="pl-k">*</span>h,k<span class="pl-k">=</span>d<span class="pl-k">*</span>e,b[<span class="pl-c1">0</span>]<span class="pl-k">=</span>a<span class="pl-k">+</span>k<span class="pl-k">*</span>c,b[<span class="pl-c1">4</span>]<span class="pl-k">=</span>m<span class="pl-k">*</span>c<span class="pl-k">-</span>l,</td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code blob-code-inner js-file-line">b[<span class="pl-c1">8</span>]<span class="pl-k">=</span>f<span class="pl-k">*</span>d,b[<span class="pl-c1">1</span>]<span class="pl-k">=</span>f<span class="pl-k">*</span>e,b[<span class="pl-c1">5</span>]<span class="pl-k">=</span>f<span class="pl-k">*</span>h,b[<span class="pl-c1">9</span>]<span class="pl-k">=</span><span class="pl-k">-</span>c,b[<span class="pl-c1">2</span>]<span class="pl-k">=</span>l<span class="pl-k">*</span>c<span class="pl-k">-</span>m,b[<span class="pl-c1">6</span>]<span class="pl-k">=</span>k<span class="pl-k">+</span>a<span class="pl-k">*</span>c,b[<span class="pl-c1">10</span>]<span class="pl-k">=</span>f<span class="pl-k">*</span>g)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ZXY<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">order</span><span class="pl-k">?</span>(a<span class="pl-k">=</span>g<span class="pl-k">*</span>h,l<span class="pl-k">=</span>g<span class="pl-k">*</span>e,m<span class="pl-k">=</span>d<span class="pl-k">*</span>h,k<span class="pl-k">=</span>d<span class="pl-k">*</span>e,b[<span class="pl-c1">0</span>]<span class="pl-k">=</span>a<span class="pl-k">-</span>k<span class="pl-k">*</span>c,b[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-k">-</span>f<span class="pl-k">*</span>e,b[<span class="pl-c1">8</span>]<span class="pl-k">=</span>m<span class="pl-k">+</span>l<span class="pl-k">*</span>c,b[<span class="pl-c1">1</span>]<span class="pl-k">=</span>l<span class="pl-k">+</span>m<span class="pl-k">*</span>c,b[<span class="pl-c1">5</span>]<span class="pl-k">=</span>f<span class="pl-k">*</span>h,b[<span class="pl-c1">9</span>]<span class="pl-k">=</span>k<span class="pl-k">-</span>a<span class="pl-k">*</span>c,b[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-k">-</span>f<span class="pl-k">*</span>d,b[<span class="pl-c1">6</span>]<span class="pl-k">=</span>c,b[<span class="pl-c1">10</span>]<span class="pl-k">=</span>f<span class="pl-k">*</span>g)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ZYX<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">order</span><span class="pl-k">?</span>(a<span class="pl-k">=</span>f<span class="pl-k">*</span>h,l<span class="pl-k">=</span>f<span class="pl-k">*</span>e,m<span class="pl-k">=</span>c<span class="pl-k">*</span>h,k<span class="pl-k">=</span>c<span class="pl-k">*</span>e,b[<span class="pl-c1">0</span>]<span class="pl-k">=</span>g<span class="pl-k">*</span>h,b[<span class="pl-c1">4</span>]<span class="pl-k">=</span>m<span class="pl-k">*</span>d<span class="pl-k">-</span>l,b[<span class="pl-c1">8</span>]<span class="pl-k">=</span>a<span class="pl-k">*</span>d<span class="pl-k">+</span>k,b[<span class="pl-c1">1</span>]<span class="pl-k">=</span>g<span class="pl-k">*</span>e,b[<span class="pl-c1">5</span>]<span class="pl-k">=</span>k<span class="pl-k">*</span>d<span class="pl-k">+</span>a,b[<span class="pl-c1">9</span>]<span class="pl-k">=</span>l<span class="pl-k">*</span>d<span class="pl-k">-</span>m,b[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-k">-</span>d,b[<span class="pl-c1">6</span>]<span class="pl-k">=</span>c<span class="pl-k">*</span>g,b[<span class="pl-c1">10</span>]<span class="pl-k">=</span>f<span class="pl-k">*</span>g)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>YZX<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">order</span><span class="pl-k">?</span>(a<span class="pl-k">=</span>f<span class="pl-k">*</span>g,l<span class="pl-k">=</span>f<span class="pl-k">*</span>d,m<span class="pl-k">=</span>c<span class="pl-k">*</span>g,k<span class="pl-k">=</span>c<span class="pl-k">*</span>d,b[<span class="pl-c1">0</span>]<span class="pl-k">=</span>g<span class="pl-k">*</span>h,b[<span class="pl-c1">4</span>]<span class="pl-k">=</span>k<span class="pl-k">-</span>a<span class="pl-k">*</span>e,b[<span class="pl-c1">8</span>]<span class="pl-k">=</span>m<span class="pl-k">*</span>e<span class="pl-k">+</span>l,b[<span class="pl-c1">1</span>]<span class="pl-k">=</span>e,b[<span class="pl-c1">5</span>]<span class="pl-k">=</span>f<span class="pl-k">*</span>h,b[<span class="pl-c1">9</span>]<span class="pl-k">=</span><span class="pl-k">-</span>c<span class="pl-k">*</span>h,b[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-k">-</span>d<span class="pl-k">*</span>h,b[<span class="pl-c1">6</span>]<span class="pl-k">=</span>l<span class="pl-k">*</span>e<span class="pl-k">+</span>m,b[<span class="pl-c1">10</span>]<span class="pl-k">=</span>a<span class="pl-k">-</span>k<span class="pl-k">*</span>e)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>XZY<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">order</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>f<span class="pl-k">*</span>g,l<span class="pl-k">=</span>f<span class="pl-k">*</span>d,m<span class="pl-k">=</span>c<span class="pl-k">*</span>g,k<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">*</span>d,b[<span class="pl-c1">0</span>]<span class="pl-k">=</span>g<span class="pl-k">*</span>h,b[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-k">-</span>e,b[<span class="pl-c1">8</span>]<span class="pl-k">=</span>d<span class="pl-k">*</span>h,b[<span class="pl-c1">1</span>]<span class="pl-k">=</span>a<span class="pl-k">*</span>e<span class="pl-k">+</span>k,b[<span class="pl-c1">5</span>]<span class="pl-k">=</span>f<span class="pl-k">*</span>h,b[<span class="pl-c1">9</span>]<span class="pl-k">=</span>l<span class="pl-k">*</span>e<span class="pl-k">-</span>m,b[<span class="pl-c1">2</span>]<span class="pl-k">=</span>m<span class="pl-k">*</span>e<span class="pl-k">-</span>l,b[<span class="pl-c1">6</span>]<span class="pl-k">=</span>c<span class="pl-k">*</span>h,b[<span class="pl-c1">10</span>]<span class="pl-k">=</span>k<span class="pl-k">*</span>e<span class="pl-k">+</span>a);b[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;b[<span class="pl-c1">7</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;b[<span class="pl-c1">11</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;b[<span class="pl-c1">12</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;b[<span class="pl-c1">13</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;b[<span class="pl-c1">14</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;b[<span class="pl-c1">15</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">makeRotationFromQuaternion</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">compose</span>(a,c,b)}}(),<span class="pl-en">lookAt</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;<span class="pl-smi">c</span>.<span class="pl-en">subVectors</span>(d,e);<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-en">lengthSq</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-smi">c</span>.<span class="pl-c1">normalize</span>();<span class="pl-smi">a</span>.<span class="pl-en">crossVectors</span>(f,c);<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-en">lengthSq</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">f</span>.<span class="pl-c1">z</span>)<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-c1">1E-4</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">z</span><span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1E-4</span>,<span class="pl-smi">c</span>.<span class="pl-c1">normalize</span>(),<span class="pl-smi">a</span>.<span class="pl-en">crossVectors</span>(f,c));<span class="pl-smi">a</span>.<span class="pl-c1">normalize</span>();<span class="pl-smi">b</span>.<span class="pl-en">crossVectors</span>(c,a);g[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;g[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;g[<span class="pl-c1">8</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>;g[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;g[<span class="pl-c1">5</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;g[<span class="pl-c1">9</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>;g[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;g[<span class="pl-c1">6</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>;g[<span class="pl-c1">10</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">multiply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">multiplyMatrices</span>(a,b))<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">multiplyMatrices</span>(<span class="pl-c1">this</span>,a)},<span class="pl-en">premultiply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">multiplyMatrices</span>(a,<span class="pl-c1">this</span>)},<span class="pl-en">multiplyMatrices</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">elements</span>;</td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;a<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];<span class="pl-k">var</span> e<span class="pl-k">=</span>c[<span class="pl-c1">4</span>],f<span class="pl-k">=</span>c[<span class="pl-c1">8</span>],g<span class="pl-k">=</span>c[<span class="pl-c1">12</span>],h<span class="pl-k">=</span>c[<span class="pl-c1">1</span>],l<span class="pl-k">=</span>c[<span class="pl-c1">5</span>],m<span class="pl-k">=</span>c[<span class="pl-c1">9</span>],k<span class="pl-k">=</span>c[<span class="pl-c1">13</span>],n<span class="pl-k">=</span>c[<span class="pl-c1">2</span>],t<span class="pl-k">=</span>c[<span class="pl-c1">6</span>],q<span class="pl-k">=</span>c[<span class="pl-c1">10</span>],r<span class="pl-k">=</span>c[<span class="pl-c1">14</span>],p<span class="pl-k">=</span>c[<span class="pl-c1">3</span>],y<span class="pl-k">=</span>c[<span class="pl-c1">7</span>],w<span class="pl-k">=</span>c[<span class="pl-c1">11</span>];c<span class="pl-k">=</span>c[<span class="pl-c1">15</span>];<span class="pl-k">var</span> x<span class="pl-k">=</span>d[<span class="pl-c1">0</span>],<span class="pl-c1">A</span><span class="pl-k">=</span>d[<span class="pl-c1">4</span>],<span class="pl-c1">C</span><span class="pl-k">=</span>d[<span class="pl-c1">8</span>],<span class="pl-c1">O</span><span class="pl-k">=</span>d[<span class="pl-c1">12</span>],<span class="pl-c1">Q</span><span class="pl-k">=</span>d[<span class="pl-c1">1</span>],z<span class="pl-k">=</span>d[<span class="pl-c1">5</span>],<span class="pl-c1">B</span><span class="pl-k">=</span>d[<span class="pl-c1">9</span>],<span class="pl-c1">H</span><span class="pl-k">=</span>d[<span class="pl-c1">13</span>],<span class="pl-c1">G</span><span class="pl-k">=</span>d[<span class="pl-c1">2</span>],<span class="pl-c1">D</span><span class="pl-k">=</span>d[<span class="pl-c1">6</span>],<span class="pl-c1">E</span><span class="pl-k">=</span>d[<span class="pl-c1">10</span>],<span class="pl-c1">J</span><span class="pl-k">=</span>d[<span class="pl-c1">14</span>],<span class="pl-c1">L</span><span class="pl-k">=</span>d[<span class="pl-c1">3</span>],<span class="pl-c1">I</span><span class="pl-k">=</span>d[<span class="pl-c1">7</span>],<span class="pl-c1">K</span><span class="pl-k">=</span>d[<span class="pl-c1">11</span>];d<span class="pl-k">=</span>d[<span class="pl-c1">15</span>];b[<span class="pl-c1">0</span>]<span class="pl-k">=</span>a<span class="pl-k">*</span>x<span class="pl-k">+</span>e<span class="pl-k">*</span><span class="pl-c1">Q</span><span class="pl-k">+</span>f<span class="pl-k">*</span><span class="pl-c1">G</span><span class="pl-k">+</span>g<span class="pl-k">*</span><span class="pl-c1">L</span>;b[<span class="pl-c1">4</span>]<span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">A</span><span class="pl-k">+</span>e<span class="pl-k">*</span>z<span class="pl-k">+</span>f<span class="pl-k">*</span><span class="pl-c1">D</span><span class="pl-k">+</span>g<span class="pl-k">*</span><span class="pl-c1">I</span>;b[<span class="pl-c1">8</span>]<span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">C</span><span class="pl-k">+</span>e<span class="pl-k">*</span><span class="pl-c1">B</span><span class="pl-k">+</span>f<span class="pl-k">*</span><span class="pl-c1">E</span><span class="pl-k">+</span>g<span class="pl-k">*</span><span class="pl-c1">K</span>;b[<span class="pl-c1">12</span>]<span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">O</span><span class="pl-k">+</span>e<span class="pl-k">*</span><span class="pl-c1">H</span><span class="pl-k">+</span>f<span class="pl-k">*</span><span class="pl-c1">J</span><span class="pl-k">+</span>g<span class="pl-k">*</span>d;b[<span class="pl-c1">1</span>]<span class="pl-k">=</span>h<span class="pl-k">*</span>x<span class="pl-k">+</span>l<span class="pl-k">*</span><span class="pl-c1">Q</span><span class="pl-k">+</span>m<span class="pl-k">*</span><span class="pl-c1">G</span><span class="pl-k">+</span>k<span class="pl-k">*</span><span class="pl-c1">L</span>;b[<span class="pl-c1">5</span>]<span class="pl-k">=</span>h<span class="pl-k">*</span><span class="pl-c1">A</span><span class="pl-k">+</span>l<span class="pl-k">*</span>z<span class="pl-k">+</span>m<span class="pl-k">*</span><span class="pl-c1">D</span><span class="pl-k">+</span>k<span class="pl-k">*</span><span class="pl-c1">I</span>;b[<span class="pl-c1">9</span>]<span class="pl-k">=</span>h<span class="pl-k">*</span><span class="pl-c1">C</span><span class="pl-k">+</span>l<span class="pl-k">*</span><span class="pl-c1">B</span><span class="pl-k">+</span>m<span class="pl-k">*</span><span class="pl-c1">E</span><span class="pl-k">+</span>k<span class="pl-k">*</span><span class="pl-c1">K</span>;b[<span class="pl-c1">13</span>]<span class="pl-k">=</span>h<span class="pl-k">*</span><span class="pl-c1">O</span><span class="pl-k">+</span>l<span class="pl-k">*</span><span class="pl-c1">H</span><span class="pl-k">+</span>m<span class="pl-k">*</span><span class="pl-c1">J</span><span class="pl-k">+</span>k<span class="pl-k">*</span>d;b[<span class="pl-c1">2</span>]<span class="pl-k">=</span>n<span class="pl-k">*</span>x<span class="pl-k">+</span>t<span class="pl-k">*</span><span class="pl-c1">Q</span><span class="pl-k">+</span>q<span class="pl-k">*</span><span class="pl-c1">G</span><span class="pl-k">+</span>r<span class="pl-k">*</span><span class="pl-c1">L</span>;b[<span class="pl-c1">6</span>]<span class="pl-k">=</span>n<span class="pl-k">*</span><span class="pl-c1">A</span><span class="pl-k">+</span>t<span class="pl-k">*</span>z<span class="pl-k">+</span>q<span class="pl-k">*</span><span class="pl-c1">D</span><span class="pl-k">+</span>r<span class="pl-k">*</span><span class="pl-c1">I</span>;b[<span class="pl-c1">10</span>]<span class="pl-k">=</span>n<span class="pl-k">*</span><span class="pl-c1">C</span><span class="pl-k">+</span>t<span class="pl-k">*</span><span class="pl-c1">B</span><span class="pl-k">+</span>q<span class="pl-k">*</span><span class="pl-c1">E</span><span class="pl-k">+</span>r<span class="pl-k">*</span><span class="pl-c1">K</span>;b[<span class="pl-c1">14</span>]<span class="pl-k">=</span>n<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">O</span><span class="pl-k">+</span>t<span class="pl-k">*</span><span class="pl-c1">H</span><span class="pl-k">+</span>q<span class="pl-k">*</span><span class="pl-c1">J</span><span class="pl-k">+</span>r<span class="pl-k">*</span>d;b[<span class="pl-c1">3</span>]<span class="pl-k">=</span>p<span class="pl-k">*</span>x<span class="pl-k">+</span>y<span class="pl-k">*</span><span class="pl-c1">Q</span><span class="pl-k">+</span>w<span class="pl-k">*</span><span class="pl-c1">G</span><span class="pl-k">+</span>c<span class="pl-k">*</span><span class="pl-c1">L</span>;b[<span class="pl-c1">7</span>]<span class="pl-k">=</span>p<span class="pl-k">*</span><span class="pl-c1">A</span><span class="pl-k">+</span>y<span class="pl-k">*</span>z<span class="pl-k">+</span>w<span class="pl-k">*</span><span class="pl-c1">D</span><span class="pl-k">+</span>c<span class="pl-k">*</span><span class="pl-c1">I</span>;b[<span class="pl-c1">11</span>]<span class="pl-k">=</span>p<span class="pl-k">*</span><span class="pl-c1">C</span><span class="pl-k">+</span>y<span class="pl-k">*</span><span class="pl-c1">B</span><span class="pl-k">+</span>w<span class="pl-k">*</span><span class="pl-c1">E</span><span class="pl-k">+</span>c<span class="pl-k">*</span><span class="pl-c1">K</span>;b[<span class="pl-c1">15</span>]<span class="pl-k">=</span>p<span class="pl-k">*</span><span class="pl-c1">O</span><span class="pl-k">+</span>y<span class="pl-k">*</span><span class="pl-c1">H</span><span class="pl-k">+</span>w<span class="pl-k">*</span><span class="pl-c1">J</span><span class="pl-k">+</span>c<span class="pl-k">*</span>d;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">multiplyScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;b[<span class="pl-c1">0</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">4</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">8</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">12</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">1</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">5</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">9</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">13</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">2</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">6</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">10</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">14</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">3</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">7</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">11</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">15</span>]<span class="pl-k">*=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">applyToBufferAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">count</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getX</span>(c),<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getY</span>(c),<span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getZ</span>(c),<span class="pl-smi">a</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-c1">this</span>),<span class="pl-smi">b</span>.<span class="pl-en">setXYZ</span>(c,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> b}}(),</td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code blob-code-inner js-file-line"><span class="pl-en">determinant</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>,b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],c<span class="pl-k">=</span>a[<span class="pl-c1">4</span>],d<span class="pl-k">=</span>a[<span class="pl-c1">8</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">12</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],g<span class="pl-k">=</span>a[<span class="pl-c1">5</span>],h<span class="pl-k">=</span>a[<span class="pl-c1">9</span>],l<span class="pl-k">=</span>a[<span class="pl-c1">13</span>],m<span class="pl-k">=</span>a[<span class="pl-c1">2</span>],k<span class="pl-k">=</span>a[<span class="pl-c1">6</span>],n<span class="pl-k">=</span>a[<span class="pl-c1">10</span>],t<span class="pl-k">=</span>a[<span class="pl-c1">14</span>];<span class="pl-k">return</span> a[<span class="pl-c1">3</span>]<span class="pl-k">*</span>(<span class="pl-k">+</span>e<span class="pl-k">*</span>h<span class="pl-k">*</span>k<span class="pl-k">-</span>d<span class="pl-k">*</span>l<span class="pl-k">*</span>k<span class="pl-k">-</span>e<span class="pl-k">*</span>g<span class="pl-k">*</span>n<span class="pl-k">+</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>n<span class="pl-k">+</span>d<span class="pl-k">*</span>g<span class="pl-k">*</span>t<span class="pl-k">-</span>c<span class="pl-k">*</span>h<span class="pl-k">*</span>t)<span class="pl-k">+</span>a[<span class="pl-c1">7</span>]<span class="pl-k">*</span>(<span class="pl-k">+</span>b<span class="pl-k">*</span>h<span class="pl-k">*</span>t<span class="pl-k">-</span>b<span class="pl-k">*</span>l<span class="pl-k">*</span>n<span class="pl-k">+</span>e<span class="pl-k">*</span>f<span class="pl-k">*</span>n<span class="pl-k">-</span>d<span class="pl-k">*</span>f<span class="pl-k">*</span>t<span class="pl-k">+</span>d<span class="pl-k">*</span>l<span class="pl-k">*</span>m<span class="pl-k">-</span>e<span class="pl-k">*</span>h<span class="pl-k">*</span>m)<span class="pl-k">+</span>a[<span class="pl-c1">11</span>]<span class="pl-k">*</span>(<span class="pl-k">+</span>b<span class="pl-k">*</span>l<span class="pl-k">*</span>k<span class="pl-k">-</span>b<span class="pl-k">*</span>g<span class="pl-k">*</span>t<span class="pl-k">-</span>e<span class="pl-k">*</span>f<span class="pl-k">*</span>k<span class="pl-k">+</span>c<span class="pl-k">*</span>f<span class="pl-k">*</span>t<span class="pl-k">+</span>e<span class="pl-k">*</span>g<span class="pl-k">*</span>m<span class="pl-k">-</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>m)<span class="pl-k">+</span>a[<span class="pl-c1">15</span>]<span class="pl-k">*</span>(<span class="pl-k">-</span>d<span class="pl-k">*</span>g<span class="pl-k">*</span>m<span class="pl-k">-</span>b<span class="pl-k">*</span>h<span class="pl-k">*</span>k<span class="pl-k">+</span>b<span class="pl-k">*</span>g<span class="pl-k">*</span>n<span class="pl-k">+</span>d<span class="pl-k">*</span>f<span class="pl-k">*</span>k<span class="pl-k">-</span>c<span class="pl-k">*</span>f<span class="pl-k">*</span>n<span class="pl-k">+</span>c<span class="pl-k">*</span>h<span class="pl-k">*</span>m)},<span class="pl-en">transpose</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];a[<span class="pl-c1">1</span>]<span class="pl-k">=</span>a[<span class="pl-c1">4</span>];a[<span class="pl-c1">4</span>]<span class="pl-k">=</span>b;b<span class="pl-k">=</span>a[<span class="pl-c1">2</span>];a[<span class="pl-c1">2</span>]<span class="pl-k">=</span>a[<span class="pl-c1">8</span>];a[<span class="pl-c1">8</span>]<span class="pl-k">=</span>b;b<span class="pl-k">=</span>a[<span class="pl-c1">6</span>];a[<span class="pl-c1">6</span>]<span class="pl-k">=</span>a[<span class="pl-c1">9</span>];a[<span class="pl-c1">9</span>]<span class="pl-k">=</span>b;b<span class="pl-k">=</span>a[<span class="pl-c1">3</span>];a[<span class="pl-c1">3</span>]<span class="pl-k">=</span>a[<span class="pl-c1">12</span>];a[<span class="pl-c1">12</span>]<span class="pl-k">=</span>b;b<span class="pl-k">=</span>a[<span class="pl-c1">7</span>];a[<span class="pl-c1">7</span>]<span class="pl-k">=</span>a[<span class="pl-c1">13</span>];a[<span class="pl-c1">13</span>]<span class="pl-k">=</span>b;b<span class="pl-k">=</span>a[<span class="pl-c1">11</span>];a[<span class="pl-c1">11</span>]<span class="pl-k">=</span>a[<span class="pl-c1">14</span>];</td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code blob-code-inner js-file-line">a[<span class="pl-c1">14</span>]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;b[<span class="pl-c1">12</span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;b[<span class="pl-c1">13</span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;b[<span class="pl-c1">14</span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getInverse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;a<span class="pl-k">=</span>d[<span class="pl-c1">0</span>];<span class="pl-k">var</span> e<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],f<span class="pl-k">=</span>d[<span class="pl-c1">2</span>],g<span class="pl-k">=</span>d[<span class="pl-c1">3</span>],h<span class="pl-k">=</span>d[<span class="pl-c1">4</span>],l<span class="pl-k">=</span>d[<span class="pl-c1">5</span>],m<span class="pl-k">=</span>d[<span class="pl-c1">6</span>],k<span class="pl-k">=</span>d[<span class="pl-c1">7</span>],n<span class="pl-k">=</span>d[<span class="pl-c1">8</span>],t<span class="pl-k">=</span>d[<span class="pl-c1">9</span>],q<span class="pl-k">=</span>d[<span class="pl-c1">10</span>],r<span class="pl-k">=</span>d[<span class="pl-c1">11</span>],p<span class="pl-k">=</span>d[<span class="pl-c1">12</span>],y<span class="pl-k">=</span>d[<span class="pl-c1">13</span>],w<span class="pl-k">=</span>d[<span class="pl-c1">14</span>];d<span class="pl-k">=</span>d[<span class="pl-c1">15</span>];<span class="pl-k">var</span> x<span class="pl-k">=</span>t<span class="pl-k">*</span>w<span class="pl-k">*</span>k<span class="pl-k">-</span>y<span class="pl-k">*</span>q<span class="pl-k">*</span>k<span class="pl-k">+</span>y<span class="pl-k">*</span>m<span class="pl-k">*</span>r<span class="pl-k">-</span>l<span class="pl-k">*</span>w<span class="pl-k">*</span>r<span class="pl-k">-</span>t<span class="pl-k">*</span>m<span class="pl-k">*</span>d<span class="pl-k">+</span>l<span class="pl-k">*</span>q<span class="pl-k">*</span>d,<span class="pl-c1">A</span><span class="pl-k">=</span>p<span class="pl-k">*</span>q<span class="pl-k">*</span>k<span class="pl-k">-</span>n<span class="pl-k">*</span>w<span class="pl-k">*</span>k<span class="pl-k">-</span>p<span class="pl-k">*</span>m<span class="pl-k">*</span>r<span class="pl-k">+</span>h<span class="pl-k">*</span>w<span class="pl-k">*</span>r<span class="pl-k">+</span>n<span class="pl-k">*</span>m<span class="pl-k">*</span>d<span class="pl-k">-</span>h<span class="pl-k">*</span>q<span class="pl-k">*</span>d,<span class="pl-c1">C</span><span class="pl-k">=</span>n<span class="pl-k">*</span>y<span class="pl-k">*</span>k<span class="pl-k">-</span>p<span class="pl-k">*</span>t<span class="pl-k">*</span>k<span class="pl-k">+</span>p<span class="pl-k">*</span>l<span class="pl-k">*</span>r<span class="pl-k">-</span>h<span class="pl-k">*</span>y<span class="pl-k">*</span>r<span class="pl-k">-</span>n<span class="pl-k">*</span>l<span class="pl-k">*</span>d<span class="pl-k">+</span>h<span class="pl-k">*</span>t<span class="pl-k">*</span>d,<span class="pl-c1">O</span><span class="pl-k">=</span>p<span class="pl-k">*</span>t<span class="pl-k">*</span>m<span class="pl-k">-</span>n<span class="pl-k">*</span>y<span class="pl-k">*</span>m<span class="pl-k">-</span>p<span class="pl-k">*</span>l<span class="pl-k">*</span>q<span class="pl-k">+</span>h<span class="pl-k">*</span>y<span class="pl-k">*</span>q<span class="pl-k">+</span>n<span class="pl-k">*</span>l<span class="pl-k">*</span>w<span class="pl-k">-</span>h<span class="pl-k">*</span>t<span class="pl-k">*</span>w,<span class="pl-c1">Q</span><span class="pl-k">=</span>a<span class="pl-k">*</span>x<span class="pl-k">+</span>e<span class="pl-k">*</span><span class="pl-c1">A</span><span class="pl-k">+</span>f<span class="pl-k">*</span><span class="pl-c1">C</span><span class="pl-k">+</span>g<span class="pl-k">*</span><span class="pl-c1">O</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">Q</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .getInverse() can&#39;t invert matrix, determinant is 0<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code blob-code-inner js-file-line"><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .getInverse() can&#39;t invert matrix, determinant is 0<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">identity</span>()}b<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">Q</span>;c[<span class="pl-c1">0</span>]<span class="pl-k">=</span>x<span class="pl-k">*</span>b;c[<span class="pl-c1">1</span>]<span class="pl-k">=</span>(y<span class="pl-k">*</span>q<span class="pl-k">*</span>g<span class="pl-k">-</span>t<span class="pl-k">*</span>w<span class="pl-k">*</span>g<span class="pl-k">-</span>y<span class="pl-k">*</span>f<span class="pl-k">*</span>r<span class="pl-k">+</span>e<span class="pl-k">*</span>w<span class="pl-k">*</span>r<span class="pl-k">+</span>t<span class="pl-k">*</span>f<span class="pl-k">*</span>d<span class="pl-k">-</span>e<span class="pl-k">*</span>q<span class="pl-k">*</span>d)<span class="pl-k">*</span>b;c[<span class="pl-c1">2</span>]<span class="pl-k">=</span>(l<span class="pl-k">*</span>w<span class="pl-k">*</span>g<span class="pl-k">-</span>y<span class="pl-k">*</span>m<span class="pl-k">*</span>g<span class="pl-k">+</span>y<span class="pl-k">*</span>f<span class="pl-k">*</span>k<span class="pl-k">-</span>e<span class="pl-k">*</span>w<span class="pl-k">*</span>k<span class="pl-k">-</span>l<span class="pl-k">*</span>f<span class="pl-k">*</span>d<span class="pl-k">+</span>e<span class="pl-k">*</span>m<span class="pl-k">*</span>d)<span class="pl-k">*</span>b;c[<span class="pl-c1">3</span>]<span class="pl-k">=</span>(t<span class="pl-k">*</span>m<span class="pl-k">*</span>g<span class="pl-k">-</span>l<span class="pl-k">*</span>q<span class="pl-k">*</span>g<span class="pl-k">-</span>t<span class="pl-k">*</span>f<span class="pl-k">*</span>k<span class="pl-k">+</span>e<span class="pl-k">*</span>q<span class="pl-k">*</span>k<span class="pl-k">+</span>l<span class="pl-k">*</span>f<span class="pl-k">*</span>r<span class="pl-k">-</span>e<span class="pl-k">*</span>m<span class="pl-k">*</span>r)<span class="pl-k">*</span>b;c[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">A</span><span class="pl-k">*</span>b;c[<span class="pl-c1">5</span>]<span class="pl-k">=</span>(n<span class="pl-k">*</span>w<span class="pl-k">*</span>g<span class="pl-k">-</span>p<span class="pl-k">*</span>q<span class="pl-k">*</span>g<span class="pl-k">+</span>p<span class="pl-k">*</span>f<span class="pl-k">*</span>r<span class="pl-k">-</span>a<span class="pl-k">*</span>w<span class="pl-k">*</span>r<span class="pl-k">-</span>n<span class="pl-k">*</span>f<span class="pl-k">*</span>d<span class="pl-k">+</span>a<span class="pl-k">*</span>q<span class="pl-k">*</span>d)<span class="pl-k">*</span>b;c[<span class="pl-c1">6</span>]<span class="pl-k">=</span>(p<span class="pl-k">*</span>m<span class="pl-k">*</span>g<span class="pl-k">-</span>h<span class="pl-k">*</span>w<span class="pl-k">*</span>g<span class="pl-k">-</span>p<span class="pl-k">*</span>f<span class="pl-k">*</span>k<span class="pl-k">+</span>a<span class="pl-k">*</span>w<span class="pl-k">*</span>k<span class="pl-k">+</span>h<span class="pl-k">*</span>f<span class="pl-k">*</span>d<span class="pl-k">-</span>a<span class="pl-k">*</span>m<span class="pl-k">*</span>d)<span class="pl-k">*</span>b;c[<span class="pl-c1">7</span>]<span class="pl-k">=</span>(h<span class="pl-k">*</span>q<span class="pl-k">*</span>g<span class="pl-k">-</span>n<span class="pl-k">*</span>m<span class="pl-k">*</span>g<span class="pl-k">+</span>n<span class="pl-k">*</span>f<span class="pl-k">*</span>k<span class="pl-k">-</span>a<span class="pl-k">*</span>q<span class="pl-k">*</span>k<span class="pl-k">-</span>h<span class="pl-k">*</span>f<span class="pl-k">*</span>r<span class="pl-k">+</span>a<span class="pl-k">*</span>m<span class="pl-k">*</span>r)<span class="pl-k">*</span>b;c[<span class="pl-c1">8</span>]<span class="pl-k">=</span><span class="pl-c1">C</span><span class="pl-k">*</span>b;c[<span class="pl-c1">9</span>]<span class="pl-k">=</span>(p<span class="pl-k">*</span>t<span class="pl-k">*</span>g<span class="pl-k">-</span>n<span class="pl-k">*</span>y<span class="pl-k">*</span>g<span class="pl-k">-</span>p<span class="pl-k">*</span>e<span class="pl-k">*</span>r<span class="pl-k">+</span>a<span class="pl-k">*</span>y<span class="pl-k">*</span>r<span class="pl-k">+</span>n<span class="pl-k">*</span>e<span class="pl-k">*</span>d<span class="pl-k">-</span>a<span class="pl-k">*</span>t<span class="pl-k">*</span>d)<span class="pl-k">*</span>b;c[<span class="pl-c1">10</span>]<span class="pl-k">=</span>(h<span class="pl-k">*</span>y<span class="pl-k">*</span>g<span class="pl-k">-</span>p<span class="pl-k">*</span>l<span class="pl-k">*</span>g<span class="pl-k">+</span>p<span class="pl-k">*</span>e<span class="pl-k">*</span>k<span class="pl-k">-</span>a<span class="pl-k">*</span>y<span class="pl-k">*</span>k<span class="pl-k">-</span>h<span class="pl-k">*</span>e<span class="pl-k">*</span>d<span class="pl-k">+</span>a<span class="pl-k">*</span>l<span class="pl-k">*</span>d)<span class="pl-k">*</span>b;c[<span class="pl-c1">11</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code blob-code-inner js-file-line">(n<span class="pl-k">*</span>l<span class="pl-k">*</span>g<span class="pl-k">-</span>h<span class="pl-k">*</span>t<span class="pl-k">*</span>g<span class="pl-k">-</span>n<span class="pl-k">*</span>e<span class="pl-k">*</span>k<span class="pl-k">+</span>a<span class="pl-k">*</span>t<span class="pl-k">*</span>k<span class="pl-k">+</span>h<span class="pl-k">*</span>e<span class="pl-k">*</span>r<span class="pl-k">-</span>a<span class="pl-k">*</span>l<span class="pl-k">*</span>r)<span class="pl-k">*</span>b;c[<span class="pl-c1">12</span>]<span class="pl-k">=</span><span class="pl-c1">O</span><span class="pl-k">*</span>b;c[<span class="pl-c1">13</span>]<span class="pl-k">=</span>(n<span class="pl-k">*</span>y<span class="pl-k">*</span>f<span class="pl-k">-</span>p<span class="pl-k">*</span>t<span class="pl-k">*</span>f<span class="pl-k">+</span>p<span class="pl-k">*</span>e<span class="pl-k">*</span>q<span class="pl-k">-</span>a<span class="pl-k">*</span>y<span class="pl-k">*</span>q<span class="pl-k">-</span>n<span class="pl-k">*</span>e<span class="pl-k">*</span>w<span class="pl-k">+</span>a<span class="pl-k">*</span>t<span class="pl-k">*</span>w)<span class="pl-k">*</span>b;c[<span class="pl-c1">14</span>]<span class="pl-k">=</span>(p<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">-</span>h<span class="pl-k">*</span>y<span class="pl-k">*</span>f<span class="pl-k">-</span>p<span class="pl-k">*</span>e<span class="pl-k">*</span>m<span class="pl-k">+</span>a<span class="pl-k">*</span>y<span class="pl-k">*</span>m<span class="pl-k">+</span>h<span class="pl-k">*</span>e<span class="pl-k">*</span>w<span class="pl-k">-</span>a<span class="pl-k">*</span>l<span class="pl-k">*</span>w)<span class="pl-k">*</span>b;c[<span class="pl-c1">15</span>]<span class="pl-k">=</span>(h<span class="pl-k">*</span>t<span class="pl-k">*</span>f<span class="pl-k">-</span>n<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">+</span>n<span class="pl-k">*</span>e<span class="pl-k">*</span>m<span class="pl-k">-</span>a<span class="pl-k">*</span>t<span class="pl-k">*</span>m<span class="pl-k">-</span>h<span class="pl-k">*</span>e<span class="pl-k">*</span>q<span class="pl-k">+</span>a<span class="pl-k">*</span>l<span class="pl-k">*</span>q)<span class="pl-k">*</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">scale</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;b[<span class="pl-c1">0</span>]<span class="pl-k">*=</span>c;b[<span class="pl-c1">4</span>]<span class="pl-k">*=</span>d;b[<span class="pl-c1">8</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">1</span>]<span class="pl-k">*=</span>c;b[<span class="pl-c1">5</span>]<span class="pl-k">*=</span>d;b[<span class="pl-c1">9</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">2</span>]<span class="pl-k">*=</span>c;b[<span class="pl-c1">6</span>]<span class="pl-k">*=</span>d;b[<span class="pl-c1">10</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">3</span>]<span class="pl-k">*=</span>c;b[<span class="pl-c1">7</span>]<span class="pl-k">*=</span>d;b[<span class="pl-c1">11</span>]<span class="pl-k">*=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getMaxScaleOnAxis</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>a[<span class="pl-c1">0</span>]<span class="pl-k">+</span>a[<span class="pl-c1">1</span>]<span class="pl-k">*</span>a[<span class="pl-c1">1</span>]<span class="pl-k">+</span>a[<span class="pl-c1">2</span>]<span class="pl-k">*</span>a[<span class="pl-c1">2</span>],a[<span class="pl-c1">4</span>]<span class="pl-k">*</span>a[<span class="pl-c1">4</span>]<span class="pl-k">+</span>a[<span class="pl-c1">5</span>]<span class="pl-k">*</span>a[<span class="pl-c1">5</span>]<span class="pl-k">+</span>a[<span class="pl-c1">6</span>]<span class="pl-k">*</span>a[<span class="pl-c1">6</span>],</td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code blob-code-inner js-file-line">a[<span class="pl-c1">8</span>]<span class="pl-k">*</span>a[<span class="pl-c1">8</span>]<span class="pl-k">+</span>a[<span class="pl-c1">9</span>]<span class="pl-k">*</span>a[<span class="pl-c1">9</span>]<span class="pl-k">+</span>a[<span class="pl-c1">10</span>]<span class="pl-k">*</span>a[<span class="pl-c1">10</span>]))},<span class="pl-en">makeTranslation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,a,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,c,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">makeRotationX</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a);a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a);<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,b,<span class="pl-k">-</span>a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,a,b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">makeRotationY</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a);a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a);<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(b,<span class="pl-c1">0</span>,a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span>a,<span class="pl-c1">0</span>,b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">makeRotationZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a);a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a);<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(b,<span class="pl-k">-</span>a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,a,b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">makeRotationAxis</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(b);b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(b);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span>c,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span>d<span class="pl-k">*</span>e,h<span class="pl-k">=</span>d<span class="pl-k">*</span>f;<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(g<span class="pl-k">*</span>e<span class="pl-k">+</span>c,g<span class="pl-k">*</span>f<span class="pl-k">-</span>b<span class="pl-k">*</span>a,g<span class="pl-k">*</span>a<span class="pl-k">+</span>b<span class="pl-k">*</span>f,<span class="pl-c1">0</span>,g<span class="pl-k">*</span>f<span class="pl-k">+</span>b<span class="pl-k">*</span>a,h<span class="pl-k">*</span>f<span class="pl-k">+</span>c,h<span class="pl-k">*</span>a<span class="pl-k">-</span>b<span class="pl-k">*</span>e,<span class="pl-c1">0</span>,g<span class="pl-k">*</span>a<span class="pl-k">-</span>b<span class="pl-k">*</span>f,h<span class="pl-k">*</span>a<span class="pl-k">+</span>b<span class="pl-k">*</span>e,d<span class="pl-k">*</span>a<span class="pl-k">*</span>a<span class="pl-k">+</span>c,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">makeScale</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,c,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">makeShear</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,b,c,<span class="pl-c1">0</span>,a,<span class="pl-c1">1</span>,c,<span class="pl-c1">0</span>,a,b,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">compose</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_x</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_y</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_z</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_w</span>,l<span class="pl-k">=</span>e<span class="pl-k">+</span>e,m<span class="pl-k">=</span>f<span class="pl-k">+</span>f,k<span class="pl-k">=</span>g<span class="pl-k">+</span>g;b<span class="pl-k">=</span>e<span class="pl-k">*</span>l;<span class="pl-k">var</span> n<span class="pl-k">=</span>e<span class="pl-k">*</span>m;e<span class="pl-k">*=</span>k;<span class="pl-k">var</span> t<span class="pl-k">=</span>f<span class="pl-k">*</span>m;f<span class="pl-k">*=</span>k;g<span class="pl-k">*=</span>k;l<span class="pl-k">*=</span>h;m<span class="pl-k">*=</span>h;h<span class="pl-k">*=</span>k;k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>;<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>;c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">z</span>;d[<span class="pl-c1">0</span>]<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>(t<span class="pl-k">+</span>g))<span class="pl-k">*</span>k;d[<span class="pl-c1">1</span>]<span class="pl-k">=</span>(n<span class="pl-k">+</span>h)<span class="pl-k">*</span>k;d[<span class="pl-c1">2</span>]<span class="pl-k">=</span>(e<span class="pl-k">-</span>m)<span class="pl-k">*</span>k;d[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;d[<span class="pl-c1">4</span>]<span class="pl-k">=</span>(n<span class="pl-k">-</span>h)<span class="pl-k">*</span>q;d[<span class="pl-c1">5</span>]<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>(b<span class="pl-k">+</span>g))<span class="pl-k">*</span>q;d[<span class="pl-c1">6</span>]<span class="pl-k">=</span>(f<span class="pl-k">+</span>l)<span class="pl-k">*</span>q;d[<span class="pl-c1">7</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;d[<span class="pl-c1">8</span>]<span class="pl-k">=</span>(e<span class="pl-k">+</span>m)<span class="pl-k">*</span>c;d[<span class="pl-c1">9</span>]<span class="pl-k">=</span>(f<span class="pl-k">-</span>l)<span class="pl-k">*</span>c;d[<span class="pl-c1">10</span>]<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>(b<span class="pl-k">+</span>t))<span class="pl-k">*</span>c;d[<span class="pl-c1">11</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;d[<span class="pl-c1">12</span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;d[<span class="pl-c1">13</span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;d[<span class="pl-c1">14</span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;d[<span class="pl-c1">15</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">decompose</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">set</span>(f[<span class="pl-c1">0</span>],f[<span class="pl-c1">1</span>],f[<span class="pl-c1">2</span>]).<span class="pl-c1">length</span>(),h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">set</span>(f[<span class="pl-c1">4</span>],f[<span class="pl-c1">5</span>],f[<span class="pl-c1">6</span>]).<span class="pl-c1">length</span>(),l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">set</span>(f[<span class="pl-c1">8</span>],f[<span class="pl-c1">9</span>],f[<span class="pl-c1">10</span>]).<span class="pl-c1">length</span>();<span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-en">determinant</span>()<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-k">-</span>g);<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>f[<span class="pl-c1">12</span>];<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>f[<span class="pl-c1">13</span>];<span class="pl-smi">c</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>f[<span class="pl-c1">14</span>];<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>);c<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>g;f<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>h;<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>l;<span class="pl-smi">b</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">0</span>]<span class="pl-k">*=</span>c;</td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">1</span>]<span class="pl-k">*=</span>c;<span class="pl-smi">b</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">2</span>]<span class="pl-k">*=</span>c;<span class="pl-smi">b</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">4</span>]<span class="pl-k">*=</span>f;<span class="pl-smi">b</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">5</span>]<span class="pl-k">*=</span>f;<span class="pl-smi">b</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">6</span>]<span class="pl-k">*=</span>f;<span class="pl-smi">b</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">8</span>]<span class="pl-k">*=</span>m;<span class="pl-smi">b</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">9</span>]<span class="pl-k">*=</span>m;<span class="pl-smi">b</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">10</span>]<span class="pl-k">*=</span>m;<span class="pl-smi">d</span>.<span class="pl-en">setFromRotationMatrix</span>(b);<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>g;<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>h;<span class="pl-smi">e</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>l;<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">makePerspective</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;g[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">/</span>(b<span class="pl-k">-</span>a);g[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">8</span>]<span class="pl-k">=</span>(b<span class="pl-k">+</span>a)<span class="pl-k">/</span>(b<span class="pl-k">-</span>a);g[<span class="pl-c1">12</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">5</span>]<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">/</span>(c<span class="pl-k">-</span>d);g[<span class="pl-c1">9</span>]<span class="pl-k">=</span>(c<span class="pl-k">+</span>d)<span class="pl-k">/</span>(c<span class="pl-k">-</span>d);g[<span class="pl-c1">13</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">6</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">10</span>]<span class="pl-k">=</span><span class="pl-k">-</span>(f<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code blob-code-inner js-file-line">e)<span class="pl-k">/</span>(f<span class="pl-k">-</span>e);g[<span class="pl-c1">14</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>f<span class="pl-k">*</span>e<span class="pl-k">/</span>(f<span class="pl-k">-</span>e);g[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">7</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">11</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;g[<span class="pl-c1">15</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">makeOrthographic</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>,h<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>(b<span class="pl-k">-</span>a),l<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>(c<span class="pl-k">-</span>d),m<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>(f<span class="pl-k">-</span>e);g[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>h;g[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">8</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">12</span>]<span class="pl-k">=</span><span class="pl-k">-</span>((b<span class="pl-k">+</span>a)<span class="pl-k">*</span>h);g[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">5</span>]<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>l;g[<span class="pl-c1">9</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">13</span>]<span class="pl-k">=</span><span class="pl-k">-</span>((c<span class="pl-k">+</span>d)<span class="pl-k">*</span>l);g[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">6</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">10</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>m;g[<span class="pl-c1">14</span>]<span class="pl-k">=</span><span class="pl-k">-</span>((f<span class="pl-k">+</span>e)<span class="pl-k">*</span>m);g[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">7</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">11</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">15</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">16</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(b[c]<span class="pl-k">!==</span>a[c])<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">fromArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">16</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-c1">elements</span>[c]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code blob-code-inner js-file-line">a[c<span class="pl-k">+</span>b];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>[]);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;a[b]<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];a[b<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>c[<span class="pl-c1">1</span>];a[b<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>c[<span class="pl-c1">2</span>];a[b<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span>c[<span class="pl-c1">3</span>];a[b<span class="pl-k">+</span><span class="pl-c1">4</span>]<span class="pl-k">=</span>c[<span class="pl-c1">4</span>];a[b<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">=</span>c[<span class="pl-c1">5</span>];a[b<span class="pl-k">+</span><span class="pl-c1">6</span>]<span class="pl-k">=</span>c[<span class="pl-c1">6</span>];a[b<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">=</span>c[<span class="pl-c1">7</span>];a[b<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">=</span>c[<span class="pl-c1">8</span>];a[b<span class="pl-k">+</span><span class="pl-c1">9</span>]<span class="pl-k">=</span>c[<span class="pl-c1">9</span>];a[b<span class="pl-k">+</span><span class="pl-c1">10</span>]<span class="pl-k">=</span>c[<span class="pl-c1">10</span>];a[b<span class="pl-k">+</span><span class="pl-c1">11</span>]<span class="pl-k">=</span>c[<span class="pl-c1">11</span>];a[b<span class="pl-k">+</span><span class="pl-c1">12</span>]<span class="pl-k">=</span>c[<span class="pl-c1">12</span>];a[b<span class="pl-k">+</span><span class="pl-c1">13</span>]<span class="pl-k">=</span>c[<span class="pl-c1">13</span>];a[b<span class="pl-k">+</span><span class="pl-c1">14</span>]<span class="pl-k">=</span>c[<span class="pl-c1">14</span>];a[b<span class="pl-k">+</span><span class="pl-c1">15</span>]<span class="pl-k">=</span>c[<span class="pl-c1">15</span>];<span class="pl-k">return</span> a}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(ca,{<span class="pl-en">slerp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-en">copy</span>(a).<span class="pl-en">slerp</span>(b,d)},<span class="pl-en">slerpFlat</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>c[d<span class="pl-k">+</span><span class="pl-c1">0</span>],l<span class="pl-k">=</span>c[d<span class="pl-k">+</span><span class="pl-c1">1</span>],m<span class="pl-k">=</span>c[d<span class="pl-k">+</span><span class="pl-c1">2</span>];c<span class="pl-k">=</span>c[d<span class="pl-k">+</span><span class="pl-c1">3</span>];d<span class="pl-k">=</span>e[f<span class="pl-k">+</span><span class="pl-c1">0</span>];<span class="pl-k">var</span> k<span class="pl-k">=</span>e[f<span class="pl-k">+</span><span class="pl-c1">1</span>],n<span class="pl-k">=</span>e[f<span class="pl-k">+</span><span class="pl-c1">2</span>];e<span class="pl-k">=</span>e[f<span class="pl-k">+</span><span class="pl-c1">3</span>];<span class="pl-k">if</span>(c<span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">||</span>h<span class="pl-k">!==</span>d<span class="pl-k">||</span>l<span class="pl-k">!==</span>k<span class="pl-k">||</span>m<span class="pl-k">!==</span>n){f<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span>g;<span class="pl-k">var</span> t<span class="pl-k">=</span>h<span class="pl-k">*</span>d<span class="pl-k">+</span>l<span class="pl-k">*</span>k<span class="pl-k">+</span>m<span class="pl-k">*</span>n<span class="pl-k">+</span>c<span class="pl-k">*</span>e,q<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>t<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>,p<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span>t<span class="pl-k">*</span>t;p<span class="pl-k">&gt;</span><span class="pl-c1">Number</span>.<span class="pl-c1">EPSILON</span><span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(p),t<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(p,t<span class="pl-k">*</span>q),f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(f<span class="pl-k">*</span>t)<span class="pl-k">/</span>p,g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(g<span class="pl-k">*</span>t)<span class="pl-k">/</span>p);q<span class="pl-k">*=</span>g;h<span class="pl-k">=</span>h<span class="pl-k">*</span>f<span class="pl-k">+</span>d<span class="pl-k">*</span>q;l<span class="pl-k">=</span>l<span class="pl-k">*</span>f<span class="pl-k">+</span>k<span class="pl-k">*</span>q;m<span class="pl-k">=</span>m<span class="pl-k">*</span>f<span class="pl-k">+</span>n<span class="pl-k">*</span>q;c<span class="pl-k">=</span>c<span class="pl-k">*</span>f<span class="pl-k">+</span>e<span class="pl-k">*</span>q;f<span class="pl-k">===</span><span class="pl-c1">1</span><span class="pl-k">-</span>g<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(h<span class="pl-k">*</span>h<span class="pl-k">+</span>l<span class="pl-k">*</span>l<span class="pl-k">+</span>m<span class="pl-k">*</span>m<span class="pl-k">+</span>c<span class="pl-k">*</span>c),h<span class="pl-k">*=</span>g,l<span class="pl-k">*=</span>g,m<span class="pl-k">*=</span>g,c<span class="pl-k">*=</span>g)}a[b]<span class="pl-k">=</span>h;a[b<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>l;a[b<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>m;a[b<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span>c}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">ca</span>.<span class="pl-c1">prototype</span>,{x<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_x</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>()}},y<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_y</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>()}},</td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code blob-code-inner js-file-line">z<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_z</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>()}},w<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_w</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>()}}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ca</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_w</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span>;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromEuler</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">isEuler</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_x</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_y</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_z</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">order</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-smi">cos</span>,g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-smi">sin</span>,h<span class="pl-k">=</span><span class="pl-en">f</span>(c<span class="pl-k">/</span><span class="pl-c1">2</span>),l<span class="pl-k">=</span><span class="pl-en">f</span>(d<span class="pl-k">/</span><span class="pl-c1">2</span>);f<span class="pl-k">=</span><span class="pl-en">f</span>(e<span class="pl-k">/</span><span class="pl-c1">2</span>);c<span class="pl-k">=</span><span class="pl-en">g</span>(c<span class="pl-k">/</span><span class="pl-c1">2</span>);d<span class="pl-k">=</span><span class="pl-en">g</span>(d<span class="pl-k">/</span><span class="pl-c1">2</span>);e<span class="pl-k">=</span><span class="pl-en">g</span>(e<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>XYZ<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">+</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>f<span class="pl-k">-</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>e<span class="pl-k">+</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span>f,<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">-</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span>e)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>YXZ<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">+</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>f<span class="pl-k">-</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>e<span class="pl-k">-</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span>f,<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">+</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span>e)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ZXY<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">-</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>f<span class="pl-k">+</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>e<span class="pl-k">+</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code blob-code-inner js-file-line">f,<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">-</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span>e)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ZYX<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">-</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>f<span class="pl-k">+</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>e<span class="pl-k">-</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span>f,<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">+</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span>e)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>YZX<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">+</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>f<span class="pl-k">+</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>e<span class="pl-k">-</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span>f,<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">-</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span>e)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>XZY<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">-</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>h<span class="pl-k">*</span>d<span class="pl-k">*</span>f<span class="pl-k">-</span>c<span class="pl-k">*</span>l<span class="pl-k">*</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>e<span class="pl-k">+</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span>f,<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>h<span class="pl-k">*</span>l<span class="pl-k">*</span>f<span class="pl-k">+</span>c<span class="pl-k">*</span>d<span class="pl-k">*</span>e);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span>b)<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromAxisAngle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">/=</span><span class="pl-c1">2</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(b);<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">*</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(b);<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromRotationMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>,c<span class="pl-k">=</span>b[<span class="pl-c1">0</span>];a<span class="pl-k">=</span>b[<span class="pl-c1">4</span>];<span class="pl-k">var</span> d<span class="pl-k">=</span>b[<span class="pl-c1">8</span>],e<span class="pl-k">=</span>b[<span class="pl-c1">1</span>],f<span class="pl-k">=</span>b[<span class="pl-c1">5</span>],g<span class="pl-k">=</span>b[<span class="pl-c1">9</span>],h<span class="pl-k">=</span>b[<span class="pl-c1">2</span>],l<span class="pl-k">=</span>b[<span class="pl-c1">6</span>];b<span class="pl-k">=</span>b[<span class="pl-c1">10</span>];<span class="pl-k">var</span> m<span class="pl-k">=</span>c<span class="pl-k">+</span>f<span class="pl-k">+</span>b;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>m<span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(m<span class="pl-k">+</span><span class="pl-c1">1</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span><span class="pl-c1">.25</span><span class="pl-k">/</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>(l<span class="pl-k">-</span>g)<span class="pl-k">*</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>(d<span class="pl-k">-</span>h)<span class="pl-k">*</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>(e<span class="pl-k">-</span>a)<span class="pl-k">*</span>c)<span class="pl-k">:</span>c<span class="pl-k">&gt;</span>f<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&gt;</span>b<span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>c<span class="pl-k">-</span>f<span class="pl-k">-</span>b),<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>(l<span class="pl-k">-</span>g)<span class="pl-k">/</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-c1">.25</span><span class="pl-k">*</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>(a<span class="pl-k">+</span>e)<span class="pl-k">/</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>(d<span class="pl-k">+</span>h)<span class="pl-k">/</span>c)<span class="pl-k">:</span>f<span class="pl-k">&gt;</span>b<span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>f<span class="pl-k">-</span>c<span class="pl-k">-</span>b),<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>(d<span class="pl-k">-</span>h)<span class="pl-k">/</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>(a<span class="pl-k">+</span>e)<span class="pl-k">/</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">.25</span><span class="pl-k">*</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>(g<span class="pl-k">+</span>l)<span class="pl-k">/</span>c)<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>b<span class="pl-k">-</span>c<span class="pl-k">-</span>f),<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>(e<span class="pl-k">-</span>a)<span class="pl-k">/</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>(d<span class="pl-k">+</span>h)<span class="pl-k">/</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>(g<span class="pl-k">+</span>l)<span class="pl-k">/</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">.25</span><span class="pl-k">*</span>c);<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromUnitVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">p</span>,b;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">dot</span>(d)<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-c1">1E-6</span><span class="pl-k">&gt;</span>b<span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">c</span>.<span class="pl-c1">x</span>)<span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">c</span>.<span class="pl-c1">z</span>)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">set</span>(<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>,<span class="pl-smi">c</span>.<span class="pl-c1">x</span>,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-c1">z</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span>))<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">crossVectors</span>(c,d);<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">normalize</span>()}}(),<span class="pl-en">inverse</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">conjugate</span>()},<span class="pl-en">conjugate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">dot</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">_x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">_y</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">_z</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">_w</span>},<span class="pl-en">lengthSq</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_w</span>},<span class="pl-en">length</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_w</span>)},<span class="pl-en">normalize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">length</span>();<span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>a,<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">*=</span>a,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">*=</span>a,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">*=</span>a,<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">*=</span>a);<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">multiply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">multiplyQuaternions</span>(a,b))<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">multiplyQuaternions</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code blob-code-inner js-file-line">a)},<span class="pl-en">premultiply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">multiplyQuaternions</span>(a,<span class="pl-c1">this</span>)},<span class="pl-en">multiplyQuaternions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_x</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_y</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_z</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_w</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_x</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_y</span>,h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_z</span>;b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_w</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>c<span class="pl-k">*</span>b<span class="pl-k">+</span>a<span class="pl-k">*</span>f<span class="pl-k">+</span>d<span class="pl-k">*</span>h<span class="pl-k">-</span>e<span class="pl-k">*</span>g;<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>d<span class="pl-k">*</span>b<span class="pl-k">+</span>a<span class="pl-k">*</span>g<span class="pl-k">+</span>e<span class="pl-k">*</span>f<span class="pl-k">-</span>c<span class="pl-k">*</span>h;<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>e<span class="pl-k">*</span>b<span class="pl-k">+</span>a<span class="pl-k">*</span>h<span class="pl-k">+</span>c<span class="pl-k">*</span>g<span class="pl-k">-</span>d<span class="pl-k">*</span>f;<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>a<span class="pl-k">*</span>b<span class="pl-k">-</span>c<span class="pl-k">*</span>f<span class="pl-k">-</span>d<span class="pl-k">*</span>g<span class="pl-k">-</span>e<span class="pl-k">*</span>h;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">slerp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-c1">this</span>;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">copy</span>(a);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_x</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_z</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_w</span>,g<span class="pl-k">=</span>f<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">_w</span><span class="pl-k">+</span>c<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">_x</span><span class="pl-k">+</span>d<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">_y</span><span class="pl-k">+</span>e<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">_z</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;</span>g<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">_w</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">_x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">_y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">_z</span>,</td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span><span class="pl-k">-</span>g)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">copy</span>(a);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;=</span>g)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>f,<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>d,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>e,<span class="pl-c1">this</span>;a<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span>g<span class="pl-k">*</span>g;<span class="pl-k">if</span>(a<span class="pl-k">&lt;=</span><span class="pl-c1">Number</span>.<span class="pl-c1">EPSILON</span>)<span class="pl-k">return</span> g<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span>b,<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>g<span class="pl-k">*</span>f<span class="pl-k">+</span>b<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_w</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>g<span class="pl-k">*</span>c<span class="pl-k">+</span>b<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>g<span class="pl-k">*</span>d<span class="pl-k">+</span>b<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>g<span class="pl-k">*</span>e<span class="pl-k">+</span>b<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">_z</span>,<span class="pl-c1">this</span>.<span class="pl-c1">normalize</span>();a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(a);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(a,g);g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>((<span class="pl-c1">1</span><span class="pl-k">-</span>b)<span class="pl-k">*</span>h)<span class="pl-k">/</span>a;b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(b<span class="pl-k">*</span>h)<span class="pl-k">/</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>f<span class="pl-k">*</span>g<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>c<span class="pl-k">*</span>g<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>d<span class="pl-k">*</span>g<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>e<span class="pl-k">*</span>g<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">_x</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">_y</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">_z</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">_w</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">_w</span>},<span class="pl-en">fromArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>a[b];<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-c1">this</span>.<span class="pl-smi">_w</span><span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-c1">3</span>];<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>[]);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);a[b]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_x</span>;a[b<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span>;a[b<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_z</span>;a[b<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_w</span>;<span class="pl-k">return</span> a},<span class="pl-en">onChange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">onChangeCallback</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">onChangeCallback</span><span class="pl-k">:</span><span class="pl-k">function</span>(){}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">p</span>.<span class="pl-c1">prototype</span>,{isVector3<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setX</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setY</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setComponent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">switch</span>(a){<span class="pl-k">case</span> <span class="pl-c1">0</span>:<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>b;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>b;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>b;<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>index is out of range: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);}<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getComponent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">switch</span>(a){<span class="pl-k">case</span> <span class="pl-c1">0</span>:<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">y</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">z</span>;<span class="pl-k">default</span>:<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>index is out of range: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);}},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>,</td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-c1">z</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b)<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">addVectors</span>(a,b);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">+=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addScaledVector</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">*</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">sub</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b)<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">subVectors</span>(a,b);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">-=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">subScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">-=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">subVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">multiply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b)<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">multiplyVectors</span>(a,b);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">multiplyScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">*=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">multiplyVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">applyEuler</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">isEuler</span><span class="pl-k">||</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">applyQuaternion</span>(<span class="pl-smi">a</span>.<span class="pl-en">setFromEuler</span>(b))}}(),<span class="pl-en">applyAxisAngle</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">applyQuaternion</span>(<span class="pl-smi">a</span>.<span class="pl-en">setFromAxisAngle</span>(b,c))}}(),<span class="pl-en">applyMatrix3</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">3</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">6</span>]<span class="pl-k">*</span>d;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">4</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">7</span>]<span class="pl-k">*</span>d;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>a[<span class="pl-c1">2</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">5</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">8</span>]<span class="pl-k">*</span>d;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">applyMatrix4</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>(a[<span class="pl-c1">3</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">7</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">11</span>]<span class="pl-k">*</span>d<span class="pl-k">+</span>a[<span class="pl-c1">15</span>]);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">4</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">8</span>]<span class="pl-k">*</span>d<span class="pl-k">+</span>a[<span class="pl-c1">12</span>])<span class="pl-k">*</span>e;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>(a[<span class="pl-c1">1</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">5</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">9</span>]<span class="pl-k">*</span>d<span class="pl-k">+</span>a[<span class="pl-c1">13</span>])<span class="pl-k">*</span>e;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>(a[<span class="pl-c1">2</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">6</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">10</span>]<span class="pl-k">*</span>d<span class="pl-k">+</span>a[<span class="pl-c1">14</span>])<span class="pl-k">*</span>e;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">applyQuaternion</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>,</td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span>;<span class="pl-k">var</span> h<span class="pl-k">=</span>a<span class="pl-k">*</span>b<span class="pl-k">+</span>f<span class="pl-k">*</span>d<span class="pl-k">-</span>g<span class="pl-k">*</span>c,l<span class="pl-k">=</span>a<span class="pl-k">*</span>c<span class="pl-k">+</span>g<span class="pl-k">*</span>b<span class="pl-k">-</span>e<span class="pl-k">*</span>d,m<span class="pl-k">=</span>a<span class="pl-k">*</span>d<span class="pl-k">+</span>e<span class="pl-k">*</span>c<span class="pl-k">-</span>f<span class="pl-k">*</span>b;b<span class="pl-k">=</span><span class="pl-k">-</span>e<span class="pl-k">*</span>b<span class="pl-k">-</span>f<span class="pl-k">*</span>c<span class="pl-k">-</span>g<span class="pl-k">*</span>d;<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>h<span class="pl-k">*</span>a<span class="pl-k">+</span>b<span class="pl-k">*-</span>e<span class="pl-k">+</span>l<span class="pl-k">*-</span>g<span class="pl-k">-</span>m<span class="pl-k">*-</span>f;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>l<span class="pl-k">*</span>a<span class="pl-k">+</span>b<span class="pl-k">*-</span>f<span class="pl-k">+</span>m<span class="pl-k">*-</span>e<span class="pl-k">-</span>h<span class="pl-k">*-</span>g;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>m<span class="pl-k">*</span>a<span class="pl-k">+</span>b<span class="pl-k">*-</span>g<span class="pl-k">+</span>h<span class="pl-k">*-</span>f<span class="pl-k">-</span>l<span class="pl-k">*-</span>e;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">project</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">multiplyMatrices</span>(<span class="pl-smi">b</span>.<span class="pl-smi">projectionMatrix</span>,<span class="pl-smi">a</span>.<span class="pl-en">getInverse</span>(<span class="pl-smi">b</span>.<span class="pl-smi">matrixWorld</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">applyMatrix4</span>(a)}}(),<span class="pl-en">unproject</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">multiplyMatrices</span>(<span class="pl-smi">b</span>.<span class="pl-smi">matrixWorld</span>,<span class="pl-smi">a</span>.<span class="pl-en">getInverse</span>(<span class="pl-smi">b</span>.<span class="pl-smi">projectionMatrix</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">applyMatrix4</span>(a)}}(),<span class="pl-en">transformDirection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">x</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">4</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">8</span>]<span class="pl-k">*</span>d;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">5</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">9</span>]<span class="pl-k">*</span>d;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>a[<span class="pl-c1">2</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">6</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">10</span>]<span class="pl-k">*</span>d;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">normalize</span>()},<span class="pl-en">divide</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">/=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">/=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">/=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">divideScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">1</span><span class="pl-k">/</span>a)},<span class="pl-en">min</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">max</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clamp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-c1">x</span>));<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-c1">y</span>));<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-c1">z</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">b</span>.<span class="pl-c1">z</span>,<span class="pl-c1">this</span>.<span class="pl-c1">z</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clampScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-c1">set</span>(c,c,c);<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(d,d,d);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">clamp</span>(a,b)}}(),<span class="pl-en">clampLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">length</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">divideScalar</span>(c<span class="pl-k">||</span><span class="pl-c1">1</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(a,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(b,c)))},<span class="pl-en">floor</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">ceil</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">round</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">roundToZero</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>)<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>)<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">negate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">dot</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>},<span class="pl-en">lengthSq</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>},<span class="pl-en">length</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>)},<span class="pl-en">manhattanLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>)},<span class="pl-en">normalize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">divideScalar</span>(<span class="pl-c1">this</span>.<span class="pl-c1">length</span>()<span class="pl-k">||</span><span class="pl-c1">1</span>)},<span class="pl-en">setLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">normalize</span>().<span class="pl-en">multiplyScalar</span>(a)},<span class="pl-en">lerp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>)<span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>)<span class="pl-k">*</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">lerpVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">subVectors</span>(b,a).<span class="pl-en">multiplyScalar</span>(c).<span class="pl-c1">add</span>(a)},<span class="pl-en">cross</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">crossVectors</span>(a,b))<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">crossVectors</span>(<span class="pl-c1">this</span>,a)},<span class="pl-en">crossVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>;<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>d<span class="pl-k">*</span>b<span class="pl-k">-</span>a<span class="pl-k">*</span>f;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a<span class="pl-k">*</span>e<span class="pl-k">-</span>c<span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>c<span class="pl-k">*</span>f<span class="pl-k">-</span>d<span class="pl-k">*</span>e;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">projectOnVector</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">dot</span>(<span class="pl-c1">this</span>)<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-en">lengthSq</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">copy</span>(a).<span class="pl-en">multiplyScalar</span>(b)},<span class="pl-en">projectOnPlane</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>).<span class="pl-en">projectOnVector</span>(b);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">sub</span>(a)}}(),<span class="pl-en">reflect</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">sub</span>(<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(b).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-en">dot</span>(b)))}}(),<span class="pl-en">angleTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">dot</span>(a)<span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">this</span>.<span class="pl-en">lengthSq</span>()<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-en">lengthSq</span>());<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">acos</span>(<span class="pl-c1">J</span>.<span class="pl-en">clamp</span>(a,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>))},<span class="pl-en">distanceTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">this</span>.<span class="pl-en">distanceToSquared</span>(a))},<span class="pl-en">distanceToSquared</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> b<span class="pl-k">*</span>b<span class="pl-k">+</span>c<span class="pl-k">*</span>c<span class="pl-k">+</span>a<span class="pl-k">*</span>a},<span class="pl-en">manhattanDistanceTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">x</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>)},<span class="pl-en">setFromSpherical</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-smi">a</span>.<span class="pl-smi">phi</span>)<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span>;<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>b<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-smi">a</span>.<span class="pl-smi">theta</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-smi">a</span>.<span class="pl-smi">phi</span>)<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>b<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-smi">a</span>.<span class="pl-smi">theta</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromCylindrical</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-smi">a</span>.<span class="pl-smi">theta</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-smi">a</span>.<span class="pl-smi">theta</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromMatrixPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a[<span class="pl-c1">12</span>];<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a[<span class="pl-c1">13</span>];<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>a[<span class="pl-c1">14</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromMatrixScale</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">setFromMatrixColumn</span>(a,<span class="pl-c1">0</span>).<span class="pl-c1">length</span>(),</td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">setFromMatrixColumn</span>(a,<span class="pl-c1">1</span>).<span class="pl-c1">length</span>();a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">setFromMatrixColumn</span>(a,<span class="pl-c1">2</span>).<span class="pl-c1">length</span>();<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromMatrixColumn</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-c1">elements</span>,<span class="pl-c1">4</span><span class="pl-k">*</span>b)},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>},<span class="pl-en">fromArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a[b];<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>[]);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);a[b]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>;a[b<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>;a[b<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>;<span class="pl-k">return</span> a},<span class="pl-en">fromBufferAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: offset has been removed from .fromBufferAttribute().<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getX</span>(b);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getY</span>(b);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getZ</span>(b);<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">la</span>.<span class="pl-c1">prototype</span>,{isMatrix3<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">l</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;m[<span class="pl-c1">0</span>]<span class="pl-k">=</span>a;m[<span class="pl-c1">1</span>]<span class="pl-k">=</span>d;m[<span class="pl-c1">2</span>]<span class="pl-k">=</span>g;m[<span class="pl-c1">3</span>]<span class="pl-k">=</span>b;m[<span class="pl-c1">4</span>]<span class="pl-k">=</span>e;m[<span class="pl-c1">5</span>]<span class="pl-k">=</span>h;m[<span class="pl-c1">6</span>]<span class="pl-k">=</span>c;m[<span class="pl-c1">7</span>]<span class="pl-k">=</span>f;m[<span class="pl-c1">8</span>]<span class="pl-k">=</span>l;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">identity</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">fromArray</span>(<span class="pl-c1">this</span>.<span class="pl-c1">elements</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;</td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code blob-code-inner js-file-line">b[<span class="pl-c1">0</span>]<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];b[<span class="pl-c1">1</span>]<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];b[<span class="pl-c1">2</span>]<span class="pl-k">=</span>a[<span class="pl-c1">2</span>];b[<span class="pl-c1">3</span>]<span class="pl-k">=</span>a[<span class="pl-c1">3</span>];b[<span class="pl-c1">4</span>]<span class="pl-k">=</span>a[<span class="pl-c1">4</span>];b[<span class="pl-c1">5</span>]<span class="pl-k">=</span>a[<span class="pl-c1">5</span>];b[<span class="pl-c1">6</span>]<span class="pl-k">=</span>a[<span class="pl-c1">6</span>];b[<span class="pl-c1">7</span>]<span class="pl-k">=</span>a[<span class="pl-c1">7</span>];b[<span class="pl-c1">8</span>]<span class="pl-k">=</span>a[<span class="pl-c1">8</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromMatrix4</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(a[<span class="pl-c1">0</span>],a[<span class="pl-c1">4</span>],a[<span class="pl-c1">8</span>],a[<span class="pl-c1">1</span>],a[<span class="pl-c1">5</span>],a[<span class="pl-c1">9</span>],a[<span class="pl-c1">2</span>],a[<span class="pl-c1">6</span>],a[<span class="pl-c1">10</span>]);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">applyToBufferAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">count</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getX</span>(c),<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getY</span>(c),<span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getZ</span>(c),<span class="pl-smi">a</span>.<span class="pl-en">applyMatrix3</span>(<span class="pl-c1">this</span>),<span class="pl-smi">b</span>.<span class="pl-en">setXYZ</span>(c,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> b}}(),<span class="pl-en">multiply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">multiplyMatrices</span>(<span class="pl-c1">this</span>,a)},<span class="pl-en">premultiply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">multiplyMatrices</span>(a,</td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>)},<span class="pl-en">multiplyMatrices</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">elements</span>;b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;a<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];<span class="pl-k">var</span> e<span class="pl-k">=</span>c[<span class="pl-c1">3</span>],f<span class="pl-k">=</span>c[<span class="pl-c1">6</span>],g<span class="pl-k">=</span>c[<span class="pl-c1">1</span>],h<span class="pl-k">=</span>c[<span class="pl-c1">4</span>],l<span class="pl-k">=</span>c[<span class="pl-c1">7</span>],m<span class="pl-k">=</span>c[<span class="pl-c1">2</span>],k<span class="pl-k">=</span>c[<span class="pl-c1">5</span>];c<span class="pl-k">=</span>c[<span class="pl-c1">8</span>];<span class="pl-k">var</span> n<span class="pl-k">=</span>d[<span class="pl-c1">0</span>],t<span class="pl-k">=</span>d[<span class="pl-c1">3</span>],q<span class="pl-k">=</span>d[<span class="pl-c1">6</span>],p<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],u<span class="pl-k">=</span>d[<span class="pl-c1">4</span>],y<span class="pl-k">=</span>d[<span class="pl-c1">7</span>],w<span class="pl-k">=</span>d[<span class="pl-c1">2</span>],x<span class="pl-k">=</span>d[<span class="pl-c1">5</span>];d<span class="pl-k">=</span>d[<span class="pl-c1">8</span>];b[<span class="pl-c1">0</span>]<span class="pl-k">=</span>a<span class="pl-k">*</span>n<span class="pl-k">+</span>e<span class="pl-k">*</span>p<span class="pl-k">+</span>f<span class="pl-k">*</span>w;b[<span class="pl-c1">3</span>]<span class="pl-k">=</span>a<span class="pl-k">*</span>t<span class="pl-k">+</span>e<span class="pl-k">*</span>u<span class="pl-k">+</span>f<span class="pl-k">*</span>x;b[<span class="pl-c1">6</span>]<span class="pl-k">=</span>a<span class="pl-k">*</span>q<span class="pl-k">+</span>e<span class="pl-k">*</span>y<span class="pl-k">+</span>f<span class="pl-k">*</span>d;b[<span class="pl-c1">1</span>]<span class="pl-k">=</span>g<span class="pl-k">*</span>n<span class="pl-k">+</span>h<span class="pl-k">*</span>p<span class="pl-k">+</span>l<span class="pl-k">*</span>w;b[<span class="pl-c1">4</span>]<span class="pl-k">=</span>g<span class="pl-k">*</span>t<span class="pl-k">+</span>h<span class="pl-k">*</span>u<span class="pl-k">+</span>l<span class="pl-k">*</span>x;b[<span class="pl-c1">7</span>]<span class="pl-k">=</span>g<span class="pl-k">*</span>q<span class="pl-k">+</span>h<span class="pl-k">*</span>y<span class="pl-k">+</span>l<span class="pl-k">*</span>d;b[<span class="pl-c1">2</span>]<span class="pl-k">=</span>m<span class="pl-k">*</span>n<span class="pl-k">+</span>k<span class="pl-k">*</span>p<span class="pl-k">+</span>c<span class="pl-k">*</span>w;b[<span class="pl-c1">5</span>]<span class="pl-k">=</span>m<span class="pl-k">*</span>t<span class="pl-k">+</span>k<span class="pl-k">*</span>u<span class="pl-k">+</span>c<span class="pl-k">*</span>x;b[<span class="pl-c1">8</span>]<span class="pl-k">=</span>m<span class="pl-k">*</span>q<span class="pl-k">+</span>k<span class="pl-k">*</span>y<span class="pl-k">+</span>c<span class="pl-k">*</span>d;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">multiplyScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;b[<span class="pl-c1">0</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">3</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">6</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">1</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">4</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">7</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">2</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">5</span>]<span class="pl-k">*=</span>a;b[<span class="pl-c1">8</span>]<span class="pl-k">*=</span></td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code blob-code-inner js-file-line">a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">determinant</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>,b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>],c<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],d<span class="pl-k">=</span>a[<span class="pl-c1">2</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">3</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">4</span>],g<span class="pl-k">=</span>a[<span class="pl-c1">5</span>],h<span class="pl-k">=</span>a[<span class="pl-c1">6</span>],l<span class="pl-k">=</span>a[<span class="pl-c1">7</span>];a<span class="pl-k">=</span>a[<span class="pl-c1">8</span>];<span class="pl-k">return</span> b<span class="pl-k">*</span>f<span class="pl-k">*</span>a<span class="pl-k">-</span>b<span class="pl-k">*</span>g<span class="pl-k">*</span>l<span class="pl-k">-</span>c<span class="pl-k">*</span>e<span class="pl-k">*</span>a<span class="pl-k">+</span>c<span class="pl-k">*</span>g<span class="pl-k">*</span>h<span class="pl-k">+</span>d<span class="pl-k">*</span>e<span class="pl-k">*</span>l<span class="pl-k">-</span>d<span class="pl-k">*</span>f<span class="pl-k">*</span>h},<span class="pl-en">getInverse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">isMatrix4</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span>c[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>c[<span class="pl-c1">1</span>],f<span class="pl-k">=</span>c[<span class="pl-c1">2</span>],g<span class="pl-k">=</span>c[<span class="pl-c1">3</span>],h<span class="pl-k">=</span>c[<span class="pl-c1">4</span>],l<span class="pl-k">=</span>c[<span class="pl-c1">5</span>],m<span class="pl-k">=</span>c[<span class="pl-c1">6</span>],k<span class="pl-k">=</span>c[<span class="pl-c1">7</span>];c<span class="pl-k">=</span>c[<span class="pl-c1">8</span>];<span class="pl-k">var</span> n<span class="pl-k">=</span>c<span class="pl-k">*</span>h<span class="pl-k">-</span>l<span class="pl-k">*</span>k,p<span class="pl-k">=</span>l<span class="pl-k">*</span>m<span class="pl-k">-</span>c<span class="pl-k">*</span>g,q<span class="pl-k">=</span>k<span class="pl-k">*</span>g<span class="pl-k">-</span>h<span class="pl-k">*</span>m,r<span class="pl-k">=</span>d<span class="pl-k">*</span>n<span class="pl-k">+</span>e<span class="pl-k">*</span>p<span class="pl-k">+</span>f<span class="pl-k">*</span>q;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>r){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix3: .getInverse() can&#39;t invert matrix, determinant is 0<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code blob-code-inner js-file-line"><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix3: .getInverse() can&#39;t invert matrix, determinant is 0<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">identity</span>()}b<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>r;a[<span class="pl-c1">0</span>]<span class="pl-k">=</span>n<span class="pl-k">*</span>b;a[<span class="pl-c1">1</span>]<span class="pl-k">=</span>(f<span class="pl-k">*</span>k<span class="pl-k">-</span>c<span class="pl-k">*</span>e)<span class="pl-k">*</span>b;a[<span class="pl-c1">2</span>]<span class="pl-k">=</span>(l<span class="pl-k">*</span>e<span class="pl-k">-</span>f<span class="pl-k">*</span>h)<span class="pl-k">*</span>b;a[<span class="pl-c1">3</span>]<span class="pl-k">=</span>p<span class="pl-k">*</span>b;a[<span class="pl-c1">4</span>]<span class="pl-k">=</span>(c<span class="pl-k">*</span>d<span class="pl-k">-</span>f<span class="pl-k">*</span>m)<span class="pl-k">*</span>b;a[<span class="pl-c1">5</span>]<span class="pl-k">=</span>(f<span class="pl-k">*</span>g<span class="pl-k">-</span>l<span class="pl-k">*</span>d)<span class="pl-k">*</span>b;a[<span class="pl-c1">6</span>]<span class="pl-k">=</span>q<span class="pl-k">*</span>b;a[<span class="pl-c1">7</span>]<span class="pl-k">=</span>(e<span class="pl-k">*</span>m<span class="pl-k">-</span>k<span class="pl-k">*</span>d)<span class="pl-k">*</span>b;a[<span class="pl-c1">8</span>]<span class="pl-k">=</span>(h<span class="pl-k">*</span>d<span class="pl-k">-</span>e<span class="pl-k">*</span>g)<span class="pl-k">*</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">transpose</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];a[<span class="pl-c1">1</span>]<span class="pl-k">=</span>a[<span class="pl-c1">3</span>];a[<span class="pl-c1">3</span>]<span class="pl-k">=</span>b;b<span class="pl-k">=</span>a[<span class="pl-c1">2</span>];a[<span class="pl-c1">2</span>]<span class="pl-k">=</span>a[<span class="pl-c1">6</span>];a[<span class="pl-c1">6</span>]<span class="pl-k">=</span>b;b<span class="pl-k">=</span>a[<span class="pl-c1">5</span>];a[<span class="pl-c1">5</span>]<span class="pl-k">=</span>a[<span class="pl-c1">7</span>];a[<span class="pl-c1">7</span>]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getNormalMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">setFromMatrix4</span>(a).<span class="pl-en">getInverse</span>(<span class="pl-c1">this</span>).<span class="pl-en">transpose</span>()},<span class="pl-en">transposeIntoArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;a[<span class="pl-c1">0</span>]<span class="pl-k">=</span>b[<span class="pl-c1">0</span>];a[<span class="pl-c1">1</span>]<span class="pl-k">=</span>b[<span class="pl-c1">3</span>];a[<span class="pl-c1">2</span>]<span class="pl-k">=</span>b[<span class="pl-c1">6</span>];a[<span class="pl-c1">3</span>]<span class="pl-k">=</span>b[<span class="pl-c1">1</span>];a[<span class="pl-c1">4</span>]<span class="pl-k">=</span>b[<span class="pl-c1">4</span>];a[<span class="pl-c1">5</span>]<span class="pl-k">=</span>b[<span class="pl-c1">7</span>];a[<span class="pl-c1">6</span>]<span class="pl-k">=</span>b[<span class="pl-c1">2</span>];a[<span class="pl-c1">7</span>]<span class="pl-k">=</span>b[<span class="pl-c1">5</span>];a[<span class="pl-c1">8</span>]<span class="pl-k">=</span>b[<span class="pl-c1">8</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setUvTransform</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(e);e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(e);<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(c<span class="pl-k">*</span>h,c<span class="pl-k">*</span>e,<span class="pl-k">-</span>c<span class="pl-k">*</span>(h<span class="pl-k">*</span>f<span class="pl-k">+</span>e<span class="pl-k">*</span>g)<span class="pl-k">+</span>f<span class="pl-k">+</span>a,<span class="pl-k">-</span>d<span class="pl-k">*</span>e,d<span class="pl-k">*</span>h,<span class="pl-k">-</span>d<span class="pl-k">*</span>(<span class="pl-k">-</span>e<span class="pl-k">*</span>f<span class="pl-k">+</span>h<span class="pl-k">*</span>g)<span class="pl-k">+</span>g<span class="pl-k">+</span>b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)},<span class="pl-en">scale</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;c[<span class="pl-c1">0</span>]<span class="pl-k">*=</span>a;c[<span class="pl-c1">3</span>]<span class="pl-k">*=</span>a;c[<span class="pl-c1">6</span>]<span class="pl-k">*=</span>a;c[<span class="pl-c1">1</span>]<span class="pl-k">*=</span>b;c[<span class="pl-c1">4</span>]<span class="pl-k">*=</span>b;c[<span class="pl-c1">7</span>]<span class="pl-k">*=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">rotate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(a);a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(a);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>,d<span class="pl-k">=</span>c[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>c[<span class="pl-c1">3</span>],f<span class="pl-k">=</span>c[<span class="pl-c1">6</span>],g<span class="pl-k">=</span>c[<span class="pl-c1">1</span>],h<span class="pl-k">=</span>c[<span class="pl-c1">4</span>],l<span class="pl-k">=</span>c[<span class="pl-c1">7</span>];c[<span class="pl-c1">0</span>]<span class="pl-k">=</span>b<span class="pl-k">*</span>d<span class="pl-k">+</span>a<span class="pl-k">*</span>g;c[<span class="pl-c1">3</span>]<span class="pl-k">=</span>b<span class="pl-k">*</span>e<span class="pl-k">+</span>a<span class="pl-k">*</span>h;c[<span class="pl-c1">6</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">*</span>f<span class="pl-k">+</span>a<span class="pl-k">*</span>l;c[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">-</span>a<span class="pl-k">*</span>d<span class="pl-k">+</span>b<span class="pl-k">*</span>g;c[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-k">-</span>a<span class="pl-k">*</span>e<span class="pl-k">+</span>b<span class="pl-k">*</span>h;c[<span class="pl-c1">7</span>]<span class="pl-k">=</span><span class="pl-k">-</span>a<span class="pl-k">*</span>f<span class="pl-k">+</span>b<span class="pl-k">*</span>l;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;c[<span class="pl-c1">0</span>]<span class="pl-k">+=</span>a<span class="pl-k">*</span>c[<span class="pl-c1">2</span>];c[<span class="pl-c1">3</span>]<span class="pl-k">+=</span>a<span class="pl-k">*</span>c[<span class="pl-c1">5</span>];c[<span class="pl-c1">6</span>]<span class="pl-k">+=</span>a<span class="pl-k">*</span>c[<span class="pl-c1">8</span>];c[<span class="pl-c1">1</span>]<span class="pl-k">+=</span>b<span class="pl-k">*</span>c[<span class="pl-c1">2</span>];c[<span class="pl-c1">4</span>]<span class="pl-k">+=</span>b<span class="pl-k">*</span>c[<span class="pl-c1">5</span>];c[<span class="pl-c1">7</span>]<span class="pl-k">+=</span>b<span class="pl-k">*</span>c[<span class="pl-c1">8</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">9</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(b[c]<span class="pl-k">!==</span>a[c])<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">fromArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">9</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-c1">elements</span>[c]<span class="pl-k">=</span>a[c<span class="pl-k">+</span>b];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>[]);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">elements</span>;a[b]<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];a[b<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>c[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code blob-code-inner js-file-line">a[b<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>c[<span class="pl-c1">2</span>];a[b<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span>c[<span class="pl-c1">3</span>];a[b<span class="pl-k">+</span><span class="pl-c1">4</span>]<span class="pl-k">=</span>c[<span class="pl-c1">4</span>];a[b<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">=</span>c[<span class="pl-c1">5</span>];a[b<span class="pl-k">+</span><span class="pl-c1">6</span>]<span class="pl-k">=</span>c[<span class="pl-c1">6</span>];a[b<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">=</span>c[<span class="pl-c1">7</span>];a[b<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">=</span>c[<span class="pl-c1">8</span>];<span class="pl-k">return</span> a}});<span class="pl-k">var</span> Ff<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">ea</span>.<span class="pl-c1">DEFAULT_IMAGE</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-smi">ea</span>.<span class="pl-c1">DEFAULT_MAPPING</span><span class="pl-k">=</span><span class="pl-c1">300</span>;<span class="pl-smi">ea</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">za</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:ea,isTexture:!0,updateMatrix:<span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">setUvTransform</span>(<span class="pl-c1">this</span>.<span class="pl-smi">offset</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">offset</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">repeat</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">repeat</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">rotation</span>,<span class="pl-c1">this</span>.<span class="pl-smi">center</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">center</span>.<span class="pl-c1">y</span>)},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>;<span class="pl-c1">this</span>.<span class="pl-smi">image</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">image</span>;<span class="pl-c1">this</span>.<span class="pl-smi">mipmaps</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">mipmaps</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">mapping</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">mapping</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wrapS</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wrapS</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wrapT</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wrapT</span>;<span class="pl-c1">this</span>.<span class="pl-smi">magFilter</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">magFilter</span>;<span class="pl-c1">this</span>.<span class="pl-smi">minFilter</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">minFilter</span>;<span class="pl-c1">this</span>.<span class="pl-smi">anisotropy</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">anisotropy</span>;<span class="pl-c1">this</span>.<span class="pl-smi">format</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">format</span>;<span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>;<span class="pl-c1">this</span>.<span class="pl-smi">offset</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">offset</span>);<span class="pl-c1">this</span>.<span class="pl-smi">repeat</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">repeat</span>);<span class="pl-c1">this</span>.<span class="pl-smi">center</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">center</span>);<span class="pl-c1">this</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">rotation</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">matrixAutoUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrix</span>);<span class="pl-c1">this</span>.<span class="pl-smi">generateMipmaps</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">generateMipmaps</span>;<span class="pl-c1">this</span>.<span class="pl-smi">premultiplyAlpha</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">premultiplyAlpha</span>;<span class="pl-c1">this</span>.<span class="pl-smi">flipY</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">flipY</span>;<span class="pl-c1">this</span>.<span class="pl-smi">unpackAlignment</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">unpackAlignment</span>;</td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">encoding</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">encoding</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a <span class="pl-k">instanceof</span> <span class="pl-c1">HTMLCanvasElement</span>)<span class="pl-k">var</span> b<span class="pl-k">=</span>a;<span class="pl-k">else</span>{b<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElementNS</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>;<span class="pl-smi">b</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);a <span class="pl-k">instanceof</span> <span class="pl-c1">ImageData</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-en">putImageData</span>(a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-en">drawImage</span>(a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">height</span>)}<span class="pl-k">return</span> <span class="pl-c1">2048</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-c1">2048</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">height</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">toDataURL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>image/jpeg<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">.6</span>)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">toDataURL</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>image/png<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a;<span class="pl-k">if</span>(<span class="pl-k">!</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">textures</span>[<span class="pl-c1">this</span>.<span class="pl-smi">uuid</span>])<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">textures</span>[<span class="pl-c1">this</span>.<span class="pl-smi">uuid</span>];</td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> d<span class="pl-k">=</span>{metadata<span class="pl-k">:</span>{version<span class="pl-k">:</span><span class="pl-c1">4.5</span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Texture<span class="pl-pds">&quot;</span></span>,generator<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Texture.toJSON<span class="pl-pds">&quot;</span></span>},uuid<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">uuid</span>,name<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span>,mapping<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">mapping</span>,repeat<span class="pl-k">:</span>[<span class="pl-c1">this</span>.<span class="pl-smi">repeat</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">repeat</span>.<span class="pl-c1">y</span>],offset<span class="pl-k">:</span>[<span class="pl-c1">this</span>.<span class="pl-smi">offset</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">offset</span>.<span class="pl-c1">y</span>],center<span class="pl-k">:</span>[<span class="pl-c1">this</span>.<span class="pl-smi">center</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">center</span>.<span class="pl-c1">y</span>],rotation<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">rotation</span>,wrap<span class="pl-k">:</span>[<span class="pl-c1">this</span>.<span class="pl-smi">wrapS</span>,<span class="pl-c1">this</span>.<span class="pl-smi">wrapT</span>],format<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">format</span>,minFilter<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">minFilter</span>,magFilter<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">magFilter</span>,anisotropy<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">anisotropy</span>,flipY<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">flipY</span>};<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">image</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">image</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">uuid</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">generateUUID</span>());<span class="pl-k">if</span>(<span class="pl-k">!</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">images</span>[<span class="pl-smi">e</span>.<span class="pl-smi">uuid</span>]){<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(e)){<span class="pl-k">var</span> f<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code blob-code-inner js-file-line">[];<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>h;g<span class="pl-k">++</span>)<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-en">b</span>(e[g]))}<span class="pl-k">else</span> f<span class="pl-k">=</span><span class="pl-en">b</span>(e);<span class="pl-smi">a</span>.<span class="pl-c1">images</span>[<span class="pl-smi">e</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>{uuid<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">uuid</span>,url<span class="pl-k">:</span>f}}<span class="pl-smi">d</span>.<span class="pl-smi">image</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">uuid</span>}c<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-smi">textures</span>[<span class="pl-c1">this</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>d);<span class="pl-k">return</span> d},<span class="pl-en">dispose</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dispose<span class="pl-pds">&quot;</span></span>})},<span class="pl-en">transformUv</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">300</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">mapping</span>){<span class="pl-smi">a</span>.<span class="pl-en">applyMatrix3</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>)<span class="pl-k">switch</span>(<span class="pl-c1">this</span>.<span class="pl-smi">wrapS</span>){<span class="pl-k">case</span> <span class="pl-c1">1E3</span>:<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1001</span>:<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1002</span>:<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>)<span class="pl-k">%</span><span class="pl-c1">2</span>)<span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>)<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>)}<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>)<span class="pl-k">switch</span>(<span class="pl-c1">this</span>.<span class="pl-smi">wrapT</span>){<span class="pl-k">case</span> <span class="pl-c1">1E3</span>:<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span></td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1001</span>:<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1002</span>:<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span>)<span class="pl-k">%</span><span class="pl-c1">2</span>)<span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span>)<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span>)}<span class="pl-c1">this</span>.<span class="pl-smi">flipY</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>)}}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">ea</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>needsUpdate<span class="pl-pds">&quot;</span></span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">version</span><span class="pl-k">++</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">W</span>.<span class="pl-c1">prototype</span>,{isVector4<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span>d;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setX</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setY</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="LC376" class="blob-code blob-code-inner js-file-line"><span class="pl-en">setZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setW</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setComponent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">switch</span>(a){<span class="pl-k">case</span> <span class="pl-c1">0</span>:<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>b;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>b;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>b;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span>:<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span>b;<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>index is out of range: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);}<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getComponent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">switch</span>(a){<span class="pl-k">case</span> <span class="pl-c1">0</span>:<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">y</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">z</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span>:<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">w</span>;<span class="pl-k">default</span>:<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>index is out of range: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);}},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-c1">z</span>,</td>
      </tr>
      <tr>
        <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="LC377" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">w</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b)<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">addVectors</span>(a,b);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">+=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">+=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">w</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addScaledVector</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="LC378" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span><span class="pl-k">*</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">sub</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b)<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">subVectors</span>(a,b);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">-=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">-=</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">subScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">-=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">-=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">subVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">w</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">multiplyScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*=</span></td>
      </tr>
      <tr>
        <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="LC379" class="blob-code blob-code-inner js-file-line">a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">*=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">*=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">applyMatrix4</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">w</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">4</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">8</span>]<span class="pl-k">*</span>d<span class="pl-k">+</span>a[<span class="pl-c1">12</span>]<span class="pl-k">*</span>e;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">5</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">9</span>]<span class="pl-k">*</span>d<span class="pl-k">+</span>a[<span class="pl-c1">13</span>]<span class="pl-k">*</span>e;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>a[<span class="pl-c1">2</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">6</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">10</span>]<span class="pl-k">*</span>d<span class="pl-k">+</span>a[<span class="pl-c1">14</span>]<span class="pl-k">*</span>e;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span>a[<span class="pl-c1">3</span>]<span class="pl-k">*</span>b<span class="pl-k">+</span>a[<span class="pl-c1">7</span>]<span class="pl-k">*</span>c<span class="pl-k">+</span>a[<span class="pl-c1">11</span>]<span class="pl-k">*</span>d<span class="pl-k">+</span>a[<span class="pl-c1">15</span>]<span class="pl-k">*</span>e;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">divideScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">1</span><span class="pl-k">/</span>a)},<span class="pl-en">setAxisAngleFromQuaternion</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">acos</span>(<span class="pl-smi">a</span>.<span class="pl-smi">w</span>);<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span>);<span class="pl-c1">1E-4</span><span class="pl-k">&gt;</span>b<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">/</span>b,<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">/</span>b,<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="LC380" class="blob-code blob-code-inner js-file-line">b);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setAxisAngleFromRotationMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];<span class="pl-k">var</span> c<span class="pl-k">=</span>a[<span class="pl-c1">4</span>];<span class="pl-k">var</span> d<span class="pl-k">=</span>a[<span class="pl-c1">8</span>],e<span class="pl-k">=</span>a[<span class="pl-c1">1</span>],f<span class="pl-k">=</span>a[<span class="pl-c1">5</span>],g<span class="pl-k">=</span>a[<span class="pl-c1">9</span>];<span class="pl-k">var</span> h<span class="pl-k">=</span>a[<span class="pl-c1">2</span>];<span class="pl-k">var</span> l<span class="pl-k">=</span>a[<span class="pl-c1">6</span>];<span class="pl-k">var</span> m<span class="pl-k">=</span>a[<span class="pl-c1">10</span>];<span class="pl-k">if</span>(<span class="pl-c1">.01</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(c<span class="pl-k">-</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">.01</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d<span class="pl-k">-</span>h)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">.01</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(g<span class="pl-k">-</span>l)){<span class="pl-k">if</span>(<span class="pl-c1">.1</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(c<span class="pl-k">+</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">.1</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d<span class="pl-k">+</span>h)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">.1</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(g<span class="pl-k">+</span>l)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">.1</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(b<span class="pl-k">+</span>f<span class="pl-k">+</span>m<span class="pl-k">-</span><span class="pl-c1">3</span>))<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>),<span class="pl-c1">this</span>;a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>;b<span class="pl-k">=</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>;f<span class="pl-k">=</span>(f<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>;m<span class="pl-k">=</span>(m<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>;c<span class="pl-k">=</span>(c<span class="pl-k">+</span>e)<span class="pl-k">/</span><span class="pl-c1">4</span>;d<span class="pl-k">=</span>(d<span class="pl-k">+</span>h)<span class="pl-k">/</span><span class="pl-c1">4</span>;g<span class="pl-k">=</span>(g<span class="pl-k">+</span>l)<span class="pl-k">/</span><span class="pl-c1">4</span>;b<span class="pl-k">&gt;</span>f<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&gt;</span>m<span class="pl-k">?</span><span class="pl-c1">.01</span><span class="pl-k">&gt;</span>b<span class="pl-k">?</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span>h<span class="pl-k">=</span><span class="pl-c1">.707106781</span>)<span class="pl-k">:</span>(l<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(b),h<span class="pl-k">=</span>c<span class="pl-k">/</span>l,c<span class="pl-k">=</span>d<span class="pl-k">/</span>l)<span class="pl-k">:</span>f<span class="pl-k">&gt;</span>m<span class="pl-k">?</span><span class="pl-c1">.01</span><span class="pl-k">&gt;</span>f<span class="pl-k">?</span>(l<span class="pl-k">=</span><span class="pl-c1">.707106781</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">.707106781</span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="LC381" class="blob-code blob-code-inner js-file-line">(h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(f),l<span class="pl-k">=</span>c<span class="pl-k">/</span>h,c<span class="pl-k">=</span>g<span class="pl-k">/</span>h)<span class="pl-k">:</span><span class="pl-c1">.01</span><span class="pl-k">&gt;</span>m<span class="pl-k">?</span>(h<span class="pl-k">=</span>l<span class="pl-k">=</span><span class="pl-c1">.707106781</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(m),l<span class="pl-k">=</span>d<span class="pl-k">/</span>c,h<span class="pl-k">=</span>g<span class="pl-k">/</span>c);<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(l,h,c,a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>((l<span class="pl-k">-</span>g)<span class="pl-k">*</span>(l<span class="pl-k">-</span>g)<span class="pl-k">+</span>(d<span class="pl-k">-</span>h)<span class="pl-k">*</span>(d<span class="pl-k">-</span>h)<span class="pl-k">+</span>(e<span class="pl-k">-</span>c)<span class="pl-k">*</span>(e<span class="pl-k">-</span>c));<span class="pl-c1">.001</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(a)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>(l<span class="pl-k">-</span>g)<span class="pl-k">/</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>(d<span class="pl-k">-</span>h)<span class="pl-k">/</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>(e<span class="pl-k">-</span>c)<span class="pl-k">/</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">acos</span>((b<span class="pl-k">+</span>f<span class="pl-k">+</span>m<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">min</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">this</span>.<span class="pl-smi">w</span>,<span class="pl-smi">a</span>.<span class="pl-smi">w</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">max</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>,</td>
      </tr>
      <tr>
        <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="LC382" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-smi">w</span>,<span class="pl-smi">a</span>.<span class="pl-smi">w</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clamp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-c1">x</span>));<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-c1">y</span>));<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-c1">z</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">b</span>.<span class="pl-c1">z</span>,<span class="pl-c1">this</span>.<span class="pl-c1">z</span>));<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-smi">w</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">b</span>.<span class="pl-smi">w</span>,<span class="pl-c1">this</span>.<span class="pl-smi">w</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clampScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>);<span class="pl-smi">a</span>.<span class="pl-c1">set</span>(c,c,c,c);<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(d,d,d,d);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">clamp</span>(a,b)}}(),<span class="pl-en">clampLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">length</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">divideScalar</span>(c<span class="pl-k">||</span><span class="pl-c1">1</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(a,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(b,c)))},</td>
      </tr>
      <tr>
        <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="LC383" class="blob-code blob-code-inner js-file-line"><span class="pl-en">floor</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>);<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">w</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">ceil</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>);<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-smi">w</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">round</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>);<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">this</span>.<span class="pl-smi">w</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">roundToZero</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="LC384" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>)<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>);<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">?</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">this</span>.<span class="pl-smi">w</span>)<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">w</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">negate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">w</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">dot</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span>},<span class="pl-en">lengthSq</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">w</span>},<span class="pl-en">length</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">w</span>)},<span class="pl-en">manhattanLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="LC385" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">y</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-c1">z</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">this</span>.<span class="pl-smi">w</span>)},<span class="pl-en">normalize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">divideScalar</span>(<span class="pl-c1">this</span>.<span class="pl-c1">length</span>()<span class="pl-k">||</span><span class="pl-c1">1</span>)},<span class="pl-en">setLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">normalize</span>().<span class="pl-en">multiplyScalar</span>(a)},<span class="pl-en">lerp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>)<span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>)<span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>)<span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">w</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">w</span>)<span class="pl-k">*</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">lerpVectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">subVectors</span>(b,a).<span class="pl-en">multiplyScalar</span>(c).<span class="pl-c1">add</span>(a)},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">w</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">w</span>},<span class="pl-en">fromArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="LC386" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>a[b];<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-c1">3</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>[]);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);a[b]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">x</span>;a[b<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">y</span>;a[b<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">z</span>;a[b<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">w</span>;<span class="pl-k">return</span> a},<span class="pl-en">fromBufferAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector4: offset has been removed from .fromBufferAttribute().<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getX</span>(b);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getY</span>(b);<span class="pl-c1">this</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getZ</span>(b);<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getW</span>(b);<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">kb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">za</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:kb,isWebGLRenderTarget:!0,</td>
      </tr>
      <tr>
        <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="LC387" class="blob-code blob-code-inner js-file-line">setSize:<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">!==</span>a<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">!==</span>b)<span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>a,<span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>b,<span class="pl-c1">this</span>.<span class="pl-en">dispose</span>();<span class="pl-c1">this</span>.<span class="pl-smi">viewport</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,a,b);<span class="pl-c1">this</span>.<span class="pl-smi">scissor</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,a,b)},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>;<span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>;<span class="pl-c1">this</span>.<span class="pl-smi">viewport</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">viewport</span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">texture</span>.<span class="pl-en">clone</span>();<span class="pl-c1">this</span>.<span class="pl-smi">depthBuffer</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">depthBuffer</span>;<span class="pl-c1">this</span>.<span class="pl-smi">stencilBuffer</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stencilBuffer</span>;<span class="pl-c1">this</span>.<span class="pl-smi">depthTexture</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">depthTexture</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">dispose</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dispose<span class="pl-pds">&quot;</span></span>})}});</td>
      </tr>
      <tr>
        <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="LC388" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Lb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">kb</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Lb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Lb;<span class="pl-smi">Lb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isWebGLRenderTargetCube</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">lb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">ea</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">lb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>lb;<span class="pl-smi">lb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isDataTexture</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Xa</span>.<span class="pl-c1">prototype</span>,{isBox3<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">copy</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">copy</span>(b);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Infinity</span>,c<span class="pl-k">=</span><span class="pl-c1">Infinity</span>,d<span class="pl-k">=</span><span class="pl-c1">Infinity</span>,e<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>,f<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>,g<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;h<span class="pl-k">&lt;</span>l;h<span class="pl-k">+=</span><span class="pl-c1">3</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span>a[h],k<span class="pl-k">=</span>a[h<span class="pl-k">+</span><span class="pl-c1">1</span>],n<span class="pl-k">=</span>a[h<span class="pl-k">+</span><span class="pl-c1">2</span>];m<span class="pl-k">&lt;</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>m);k<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>k);n<span class="pl-k">&lt;</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>n);m<span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="LC389" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>m);k<span class="pl-k">&gt;</span>f<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>k);n<span class="pl-k">&gt;</span>g<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>n)}<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">set</span>(b,c,d);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">set</span>(e,f,g);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromBufferAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Infinity</span>,c<span class="pl-k">=</span><span class="pl-c1">Infinity</span>,d<span class="pl-k">=</span><span class="pl-c1">Infinity</span>,e<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>,f<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>,g<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">count</span>;h<span class="pl-k">&lt;</span>l;h<span class="pl-k">++</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getX</span>(h),k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getY</span>(h),n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getZ</span>(h);m<span class="pl-k">&lt;</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>m);k<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>k);n<span class="pl-k">&lt;</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>n);m<span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>m);k<span class="pl-k">&gt;</span>f<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>k);n<span class="pl-k">&gt;</span>g<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>n)}<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">set</span>(b,c,d);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">set</span>(e,f,g);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">makeEmpty</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-en">expandByPoint</span>(a[b]);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromCenterAndSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="LC390" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">copy</span>(c).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">.5</span>);<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">copy</span>(b).<span class="pl-c1">sub</span>(c);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">copy</span>(b).<span class="pl-c1">add</span>(c);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">setFromObject</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">makeEmpty</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">expandByObject</span>(a)},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">makeEmpty</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Infinity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">isEmpty</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="LC391" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span>},<span class="pl-en">getCenter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box3: .getCenter() target is now required<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">isEmpty</span>()<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">addVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">min</span>,<span class="pl-c1">this</span>.<span class="pl-smi">max</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">.5</span>)},<span class="pl-en">getSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box3: .getSize() target is now required<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">isEmpty</span>()<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>,<span class="pl-c1">this</span>.<span class="pl-smi">min</span>)},<span class="pl-en">expandByPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">min</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">max</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">expandByVector</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">sub</span>(a);</td>
      </tr>
      <tr>
        <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="LC392" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">add</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">expandByScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">addScalar</span>(<span class="pl-k">-</span>a);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">addScalar</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">expandByObject</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f)<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-smi">isGeometry</span>)<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">vertices</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)<span class="pl-smi">e</span>.<span class="pl-en">copy</span>(f[c]),<span class="pl-smi">e</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>),<span class="pl-smi">b</span>.<span class="pl-en">expandByPoint</span>(e);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-smi">isBufferGeometry</span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f))<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">count</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)<span class="pl-smi">e</span>.<span class="pl-en">fromBufferAttribute</span>(f,c).<span class="pl-en">applyMatrix4</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>),<span class="pl-smi">b</span>.<span class="pl-en">expandByPoint</span>(e)}<span class="pl-k">var</span> b,c,d,e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>){b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="LC393" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>;<span class="pl-smi">c</span>.<span class="pl-en">updateMatrixWorld</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">c</span>.<span class="pl-en">traverse</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">containsPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">containsBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span><span class="pl-k">&lt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span>},<span class="pl-en">getParameter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box3: .getParameter() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">set</span>((<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>)<span class="pl-k">/</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="LC394" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>),(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>)<span class="pl-k">/</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>),(<span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span>)<span class="pl-k">/</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span>))},<span class="pl-en">intersectsBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">intersectsSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-en">clampPoint</span>(<span class="pl-smi">b</span>.<span class="pl-smi">center</span>,a);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">distanceToSquared</span>(<span class="pl-smi">b</span>.<span class="pl-smi">center</span>)<span class="pl-k">&lt;=</span><span class="pl-smi">b</span>.<span class="pl-smi">radius</span><span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-smi">radius</span>}}(),<span class="pl-en">intersectsPlane</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">x</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span>}<span class="pl-k">else</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="LC395" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">y</span><span class="pl-k">?</span>(b<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>,c<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span>)<span class="pl-k">:</span>(b<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span>,c<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">z</span><span class="pl-k">?</span>(b<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span>,c<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span>)<span class="pl-k">:</span>(b<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span>,c<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> b<span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">constant</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&gt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">constant</span>},<span class="pl-en">intersectsTriangle</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">3</span>;f<span class="pl-k">&lt;=</span>e;f<span class="pl-k">+=</span><span class="pl-c1">3</span>){<span class="pl-smi">h</span>.<span class="pl-en">fromArray</span>(a,f);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>)<span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-c1">y</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">h</span>.<span class="pl-c1">y</span>)<span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">h</span>.<span class="pl-c1">z</span>),l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">dot</span>(h),k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">dot</span>(h),</td>
      </tr>
      <tr>
        <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="LC396" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">dot</span>(h);<span class="pl-k">if</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(l,k,n),<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(l,k,n))<span class="pl-k">&gt;</span>g)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">h</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">isEmpty</span>())<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-en">getCenter</span>(l);<span class="pl-smi">m</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>,l);<span class="pl-smi">b</span>.<span class="pl-en">subVectors</span>(<span class="pl-smi">h</span>.<span class="pl-smi">a</span>,l);<span class="pl-smi">c</span>.<span class="pl-en">subVectors</span>(<span class="pl-smi">h</span>.<span class="pl-smi">b</span>,l);<span class="pl-smi">d</span>.<span class="pl-en">subVectors</span>(<span class="pl-smi">h</span>.<span class="pl-smi">c</span>,l);<span class="pl-smi">e</span>.<span class="pl-en">subVectors</span>(c,b);<span class="pl-smi">f</span>.<span class="pl-en">subVectors</span>(d,c);<span class="pl-smi">g</span>.<span class="pl-en">subVectors</span>(b,d);h<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">z</span>,<span class="pl-smi">e</span>.<span class="pl-c1">y</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">z</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-c1">z</span>,<span class="pl-smi">g</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-c1">z</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span>,<span class="pl-smi">f</span>.<span class="pl-c1">z</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>,<span class="pl-smi">g</span>.<span class="pl-c1">z</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-c1">x</span>,<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-c1">x</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>,<span class="pl-smi">f</span>.<span class="pl-c1">x</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span>,<span class="pl-smi">g</span>.<span class="pl-c1">x</span>,<span class="pl-c1">0</span>];<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">a</span>(h))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;h<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="LC397" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,<span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">a</span>(h))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-en">crossVectors</span>(e,f);h<span class="pl-k">=</span>[<span class="pl-smi">k</span>.<span class="pl-c1">x</span>,<span class="pl-smi">k</span>.<span class="pl-c1">y</span>,<span class="pl-smi">k</span>.<span class="pl-c1">z</span>];<span class="pl-k">return</span> <span class="pl-en">a</span>(h)}}(),<span class="pl-en">clampPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box3: .clampPoint() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">copy</span>(a).<span class="pl-en">clamp</span>(<span class="pl-c1">this</span>.<span class="pl-smi">min</span>,<span class="pl-c1">this</span>.<span class="pl-smi">max</span>)},<span class="pl-en">distanceToPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">copy</span>(b).<span class="pl-en">clamp</span>(<span class="pl-c1">this</span>.<span class="pl-smi">min</span>,<span class="pl-c1">this</span>.<span class="pl-smi">max</span>).<span class="pl-c1">sub</span>(b).<span class="pl-c1">length</span>()}}(),<span class="pl-en">getBoundingSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box3: .getBoundingSphere() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ha</span>);</td>
      </tr>
      <tr>
        <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="LC398" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">getCenter</span>(<span class="pl-smi">b</span>.<span class="pl-smi">center</span>);<span class="pl-smi">b</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-en">getSize</span>(a).<span class="pl-c1">length</span>();<span class="pl-k">return</span> b}}(),<span class="pl-en">intersect</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">max</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">min</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>);<span class="pl-c1">this</span>.<span class="pl-en">isEmpty</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">makeEmpty</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">union</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">min</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">max</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">applyMatrix4</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">isEmpty</span>())<span class="pl-k">return</span> <span class="pl-c1">this</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span>a[<span class="pl-c1">0</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>,c<span class="pl-k">=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>,d<span class="pl-k">=</span>a[<span class="pl-c1">2</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>,e<span class="pl-k">=</span>a[<span class="pl-c1">0</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span>,f<span class="pl-k">=</span>a[<span class="pl-c1">1</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span>,g<span class="pl-k">=</span>a[<span class="pl-c1">2</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span>,h<span class="pl-k">=</span>a[<span class="pl-c1">4</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>,l<span class="pl-k">=</span>a[<span class="pl-c1">5</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>,m<span class="pl-k">=</span>a[<span class="pl-c1">6</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>,k<span class="pl-k">=</span>a[<span class="pl-c1">4</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span>,</td>
      </tr>
      <tr>
        <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="LC399" class="blob-code blob-code-inner js-file-line">n<span class="pl-k">=</span>a[<span class="pl-c1">5</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span>,p<span class="pl-k">=</span>a[<span class="pl-c1">6</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span>,q<span class="pl-k">=</span>a[<span class="pl-c1">8</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span>,r<span class="pl-k">=</span>a[<span class="pl-c1">9</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span>,u<span class="pl-k">=</span>a[<span class="pl-c1">10</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span>,y<span class="pl-k">=</span>a[<span class="pl-c1">8</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span>,w<span class="pl-k">=</span>a[<span class="pl-c1">9</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span>,x<span class="pl-k">=</span>a[<span class="pl-c1">10</span>]<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span>;<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(b,e)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(h,k)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(q,y)<span class="pl-k">+</span>a[<span class="pl-c1">12</span>];<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(c,f)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(l,n)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(r,w)<span class="pl-k">+</span>a[<span class="pl-c1">13</span>];<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(d,g)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(m,p)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(u,x)<span class="pl-k">+</span>a[<span class="pl-c1">14</span>];<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(b,e)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(h,k)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(q,y)<span class="pl-k">+</span>a[<span class="pl-c1">12</span>];<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(c,f)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(l,n)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(r,w)<span class="pl-k">+</span>a[<span class="pl-c1">13</span>];<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(d,g)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(m,p)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(u,x)<span class="pl-k">+</span>a[<span class="pl-c1">14</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="LC400" class="blob-code blob-code-inner js-file-line"><span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">add</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">add</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Ha</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">center</span>.<span class="pl-en">copy</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Xa</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">center</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-en">copy</span>(c)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">setFromPoints</span>(b).<span class="pl-en">getCenter</span>(d);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">++</span>)c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(c,<span class="pl-smi">d</span>.<span class="pl-en">distanceToSquared</span>(b[e]));<span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(c);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},</td>
      </tr>
      <tr>
        <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="LC401" class="blob-code blob-code-inner js-file-line"><span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">center</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">center</span>);<span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">empty</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span>},<span class="pl-en">containsPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">distanceToSquared</span>(<span class="pl-c1">this</span>.<span class="pl-smi">center</span>)<span class="pl-k">&lt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span>},<span class="pl-en">distanceToPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">distanceTo</span>(<span class="pl-c1">this</span>.<span class="pl-smi">center</span>)<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span>},<span class="pl-en">intersectsSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span>;<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">center</span>.<span class="pl-en">distanceToSquared</span>(<span class="pl-c1">this</span>.<span class="pl-smi">center</span>)<span class="pl-k">&lt;=</span>b<span class="pl-k">*</span>b},<span class="pl-en">intersectsBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">intersectsSphere</span>(<span class="pl-c1">this</span>)},<span class="pl-en">intersectsPlane</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-smi">a</span>.<span class="pl-en">distanceToPoint</span>(<span class="pl-c1">this</span>.<span class="pl-smi">center</span>))<span class="pl-k">&lt;=</span></td>
      </tr>
      <tr>
        <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="LC402" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">radius</span>},<span class="pl-en">clampPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">center</span>.<span class="pl-en">distanceToSquared</span>(a);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Sphere: .clampPoint() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(a);c<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-c1">sub</span>(<span class="pl-c1">this</span>.<span class="pl-smi">center</span>).<span class="pl-c1">normalize</span>(),<span class="pl-smi">b</span>.<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">this</span>.<span class="pl-smi">radius</span>).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">center</span>));<span class="pl-k">return</span> b},<span class="pl-en">getBoundingBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Sphere: .getBoundingBox() target is now required<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Xa</span>);<span class="pl-smi">a</span>.<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-smi">center</span>,<span class="pl-c1">this</span>.<span class="pl-smi">center</span>);<span class="pl-smi">a</span>.<span class="pl-en">expandByScalar</span>(<span class="pl-c1">this</span>.<span class="pl-smi">radius</span>);<span class="pl-k">return</span> a},<span class="pl-en">applyMatrix4</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">center</span>.<span class="pl-en">applyMatrix4</span>(a);</td>
      </tr>
      <tr>
        <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="LC403" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-en">getMaxScaleOnAxis</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">center</span>.<span class="pl-c1">add</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">center</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">center</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Ia</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>.<span class="pl-en">copy</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">constant</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setComponents</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">set</span>(a,b,c);<span class="pl-c1">this</span>.<span class="pl-smi">constant</span><span class="pl-k">=</span>d;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromNormalAndCoplanarPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>.<span class="pl-en">copy</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">constant</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-en">dot</span>(<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromCoplanarPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="LC404" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(e,d).<span class="pl-en">cross</span>(<span class="pl-smi">b</span>.<span class="pl-en">subVectors</span>(c,d)).<span class="pl-c1">normalize</span>();<span class="pl-c1">this</span>.<span class="pl-en">setFromNormalAndCoplanarPoint</span>(d,c);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">normal</span>);<span class="pl-c1">this</span>.<span class="pl-smi">constant</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">constant</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">normalize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">length</span>();<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>.<span class="pl-en">multiplyScalar</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">constant</span><span class="pl-k">*=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">negate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">constant</span><span class="pl-k">*=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>.<span class="pl-en">negate</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">distanceToPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">normal</span>.<span class="pl-en">dot</span>(a)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="LC405" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">constant</span>},<span class="pl-en">distanceToSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">distanceToPoint</span>(<span class="pl-smi">a</span>.<span class="pl-smi">center</span>)<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span>},<span class="pl-en">projectPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Plane: .projectPoint() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-en">distanceToPoint</span>(a)).<span class="pl-c1">add</span>(a)},<span class="pl-en">intersectLine</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Plane: .intersectLine() target is now required<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">delta</span>(a),e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">normal</span>.<span class="pl-en">dot</span>(d);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>e){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-en">distanceToPoint</span>(<span class="pl-smi">b</span>.<span class="pl-c1">start</span>))<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-en">copy</span>(<span class="pl-smi">b</span>.<span class="pl-c1">start</span>)}<span class="pl-k">else</span> <span class="pl-k">if</span>(e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="LC406" class="blob-code blob-code-inner js-file-line"><span class="pl-k">-</span>(<span class="pl-smi">b</span>.<span class="pl-c1">start</span>.<span class="pl-en">dot</span>(<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>)<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">constant</span>)<span class="pl-k">/</span>e,<span class="pl-k">!</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>e<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span>e))<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-en">copy</span>(d).<span class="pl-en">multiplyScalar</span>(e).<span class="pl-c1">add</span>(<span class="pl-smi">b</span>.<span class="pl-c1">start</span>)}}(),<span class="pl-en">intersectsLine</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">distanceToPoint</span>(<span class="pl-smi">a</span>.<span class="pl-c1">start</span>);a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">distanceToPoint</span>(<span class="pl-smi">a</span>.<span class="pl-smi">end</span>);<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>a<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>b},<span class="pl-en">intersectsBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">intersectsPlane</span>(<span class="pl-c1">this</span>)},<span class="pl-en">intersectsSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">intersectsPlane</span>(<span class="pl-c1">this</span>)},<span class="pl-en">coplanarPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Plane: .coplanarPoint() target is now required<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">constant</span>)},</td>
      </tr>
      <tr>
        <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="LC407" class="blob-code blob-code-inner js-file-line"><span class="pl-en">applyMatrix4</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">la</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){d<span class="pl-k">=</span>d<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-en">getNormalMatrix</span>(c);c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">coplanarPoint</span>(a).<span class="pl-en">applyMatrix4</span>(c);d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">normal</span>.<span class="pl-en">applyMatrix3</span>(d).<span class="pl-c1">normalize</span>();<span class="pl-c1">this</span>.<span class="pl-smi">constant</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-en">dot</span>(d);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">constant</span><span class="pl-k">-=</span><span class="pl-smi">a</span>.<span class="pl-en">dot</span>(<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">constant</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">constant</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">td</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">planes</span>;g[<span class="pl-c1">0</span>].<span class="pl-en">copy</span>(a);g[<span class="pl-c1">1</span>].<span class="pl-en">copy</span>(b);g[<span class="pl-c1">2</span>].<span class="pl-en">copy</span>(c);g[<span class="pl-c1">3</span>].<span class="pl-en">copy</span>(d);g[<span class="pl-c1">4</span>].<span class="pl-en">copy</span>(e);</td>
      </tr>
      <tr>
        <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="LC408" class="blob-code blob-code-inner js-file-line">g[<span class="pl-c1">5</span>].<span class="pl-en">copy</span>(f);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">planes</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)b[c].<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">planes</span>[c]);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">planes</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;a<span class="pl-k">=</span>c[<span class="pl-c1">0</span>];<span class="pl-k">var</span> d<span class="pl-k">=</span>c[<span class="pl-c1">1</span>],e<span class="pl-k">=</span>c[<span class="pl-c1">2</span>],f<span class="pl-k">=</span>c[<span class="pl-c1">3</span>],g<span class="pl-k">=</span>c[<span class="pl-c1">4</span>],h<span class="pl-k">=</span>c[<span class="pl-c1">5</span>],l<span class="pl-k">=</span>c[<span class="pl-c1">6</span>],m<span class="pl-k">=</span>c[<span class="pl-c1">7</span>],k<span class="pl-k">=</span>c[<span class="pl-c1">8</span>],n<span class="pl-k">=</span>c[<span class="pl-c1">9</span>],p<span class="pl-k">=</span>c[<span class="pl-c1">10</span>],q<span class="pl-k">=</span>c[<span class="pl-c1">11</span>],r<span class="pl-k">=</span>c[<span class="pl-c1">12</span>],u<span class="pl-k">=</span>c[<span class="pl-c1">13</span>],y<span class="pl-k">=</span>c[<span class="pl-c1">14</span>];c<span class="pl-k">=</span>c[<span class="pl-c1">15</span>];b[<span class="pl-c1">0</span>].<span class="pl-en">setComponents</span>(f<span class="pl-k">-</span>a,m<span class="pl-k">-</span>g,q<span class="pl-k">-</span>k,c<span class="pl-k">-</span>r).<span class="pl-c1">normalize</span>();b[<span class="pl-c1">1</span>].<span class="pl-en">setComponents</span>(f<span class="pl-k">+</span>a,m<span class="pl-k">+</span>g,q<span class="pl-k">+</span>k,c<span class="pl-k">+</span>r).<span class="pl-c1">normalize</span>();b[<span class="pl-c1">2</span>].<span class="pl-en">setComponents</span>(f<span class="pl-k">+</span>d,m<span class="pl-k">+</span>h,q<span class="pl-k">+</span>n,c<span class="pl-k">+</span>u).<span class="pl-c1">normalize</span>();b[<span class="pl-c1">3</span>].<span class="pl-en">setComponents</span>(f<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="LC409" class="blob-code blob-code-inner js-file-line">d,m<span class="pl-k">-</span>h,q<span class="pl-k">-</span>n,c<span class="pl-k">-</span>u).<span class="pl-c1">normalize</span>();b[<span class="pl-c1">4</span>].<span class="pl-en">setComponents</span>(f<span class="pl-k">-</span>e,m<span class="pl-k">-</span>l,q<span class="pl-k">-</span>p,c<span class="pl-k">-</span>y).<span class="pl-c1">normalize</span>();b[<span class="pl-c1">5</span>].<span class="pl-en">setComponents</span>(f<span class="pl-k">+</span>e,m<span class="pl-k">+</span>l,q<span class="pl-k">+</span>p,c<span class="pl-k">+</span>y).<span class="pl-c1">normalize</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">intersectsObject</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ha</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">geometry</span>;<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">computeBoundingSphere</span>();<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(<span class="pl-smi">c</span>.<span class="pl-smi">boundingSphere</span>).<span class="pl-en">applyMatrix4</span>(<span class="pl-smi">b</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">intersectsSphere</span>(a)}}(),<span class="pl-en">intersectsSprite</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ha</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">center</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-c1">.7071067811865476</span>;<span class="pl-smi">a</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-smi">b</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">intersectsSphere</span>(a)}}(),</td>
      </tr>
      <tr>
        <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="LC410" class="blob-code blob-code-inner js-file-line"><span class="pl-en">intersectsSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">planes</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">center</span>;a<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">&gt;</span>d;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(b[d].<span class="pl-en">distanceToPoint</span>(c)<span class="pl-k">&lt;</span>a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">intersectsBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">planes</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>d[e];<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span>;<span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>;<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span>;<span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>;<span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">z</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span>;<span class="pl-smi">b</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">z</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span><span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">distanceToPoint</span>(a);f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">distanceToPoint</span>(b);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="LC411" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>f)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}(),<span class="pl-en">containsPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">planes</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>b[c].<span class="pl-en">distanceToPoint</span>(a))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}});<span class="pl-k">var</span> <span class="pl-c1">S</span><span class="pl-k">=</span>{alphamap_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_ALPHAMAP<span class="pl-cce">\n\t</span>diffuseColor.a *= texture2D( alphaMap, vUv ).g;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,alphamap_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_ALPHAMAP<span class="pl-cce">\n\t</span>uniform sampler2D alphaMap;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,alphatest_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef ALPHATEST<span class="pl-cce">\n\t</span>if ( diffuseColor.a &lt; ALPHATEST ) discard;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,aomap_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_AOMAP<span class="pl-cce">\n\t</span>float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;<span class="pl-cce">\n\t</span>reflectedLight.indirectDiffuse *= ambientOcclusion;<span class="pl-cce">\n\t</span>#if defined( USE_ENVMAP ) &amp;&amp; defined( PHYSICAL )<span class="pl-cce">\n\t\t</span>float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );<span class="pl-cce">\n\t\t</span>reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="LC412" class="blob-code blob-code-inner js-file-line">aomap_pars_fragment:&quot;#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif&quot;,begin_vertex:&quot;\nvec3 transformed = vec3( position );\n&quot;,beginnormal_vertex:&quot;\nvec3 objectNormal = vec3( normal );\n&quot;,bsdfs:&quot;float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent &gt; 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x &gt; 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) &lt; 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="LC413" class="blob-code blob-code-inner js-file-line">bumpmap_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_BUMPMAP<span class="pl-cce">\n\t</span>uniform sampler2D bumpMap;<span class="pl-cce">\n\t</span>uniform float bumpScale;<span class="pl-cce">\n\t</span>vec2 dHdxy_fwd() {<span class="pl-cce">\n\t\t</span>vec2 dSTdx = dFdx( vUv );<span class="pl-cce">\n\t\t</span>vec2 dSTdy = dFdy( vUv );<span class="pl-cce">\n\t\t</span>float Hll = bumpScale * texture2D( bumpMap, vUv ).x;<span class="pl-cce">\n\t\t</span>float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;<span class="pl-cce">\n\t\t</span>float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;<span class="pl-cce">\n\t\t</span>return vec2( dBx, dBy );<span class="pl-cce">\n\t</span>}<span class="pl-cce">\n\t</span>vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {<span class="pl-cce">\n\t\t</span>vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );<span class="pl-cce">\n\t\t</span>vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );<span class="pl-cce">\n\t\t</span>vec3 vN = surf_norm;<span class="pl-cce">\n\t\t</span>vec3 R1 = cross( vSigmaY, vN );<span class="pl-cce">\n\t\t</span>vec3 R2 = cross( vN, vSigmaX );<span class="pl-cce">\n\t\t</span>float fDet = dot( vSigmaX, R1 );<span class="pl-cce">\n\t\t</span>fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );<span class="pl-cce">\n\t\t</span>vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );<span class="pl-cce">\n\t\t</span>return normalize( abs( fDet ) * surf_norm - vGrad );<span class="pl-cce">\n\t</span>}<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="LC414" class="blob-code blob-code-inner js-file-line">clipping_planes_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if NUM_CLIPPING_PLANES &gt; 0<span class="pl-cce">\n\t</span>vec4 plane;<span class="pl-cce">\n\t</span>#pragma unroll_loop<span class="pl-cce">\n\t</span>for ( int i = 0; i &lt; UNION_CLIPPING_PLANES; i ++ ) {<span class="pl-cce">\n\t\t</span>plane = clippingPlanes[ i ];<span class="pl-cce">\n\t\t</span>if ( dot( vViewPosition, plane.xyz ) &gt; plane.w ) discard;<span class="pl-cce">\n\t</span>}<span class="pl-cce">\n\t</span>#if UNION_CLIPPING_PLANES &lt; NUM_CLIPPING_PLANES<span class="pl-cce">\n\t\t</span>bool clipped = true;<span class="pl-cce">\n\t\t</span>#pragma unroll_loop<span class="pl-cce">\n\t\t</span>for ( int i = UNION_CLIPPING_PLANES; i &lt; NUM_CLIPPING_PLANES; i ++ ) {<span class="pl-cce">\n\t\t\t</span>plane = clippingPlanes[ i ];<span class="pl-cce">\n\t\t\t</span>clipped = ( dot( vViewPosition, plane.xyz ) &gt; plane.w ) &amp;&amp; clipped;<span class="pl-cce">\n\t\t</span>}<span class="pl-cce">\n\t\t</span>if ( clipped ) discard;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="LC415" class="blob-code blob-code-inner js-file-line">clipping_planes_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if NUM_CLIPPING_PLANES &gt; 0<span class="pl-cce">\n\t</span>#if ! defined( PHYSICAL ) &amp;&amp; ! defined( PHONG )<span class="pl-cce">\n\t\t</span>varying vec3 vViewPosition;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,clipping_planes_pars_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if NUM_CLIPPING_PLANES &gt; 0 &amp;&amp; ! defined( PHYSICAL ) &amp;&amp; ! defined( PHONG )<span class="pl-cce">\n\t</span>varying vec3 vViewPosition;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,clipping_planes_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if NUM_CLIPPING_PLANES &gt; 0 &amp;&amp; ! defined( PHYSICAL ) &amp;&amp; ! defined( PHONG )<span class="pl-cce">\n\t</span>vViewPosition = - mvPosition.xyz;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="LC416" class="blob-code blob-code-inner js-file-line">color_fragment:&quot;#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif&quot;,color_pars_fragment:&quot;#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n&quot;,color_pars_vertex:&quot;#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif&quot;,color_vertex:&quot;#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif&quot;,common:&quot;#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="LC417" class="blob-code blob-code-inner js-file-line">cube_uv_reflection_fragment:&quot;#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x &gt; absDirection.z ) {\n\t\tif(absDirection.x &gt; absDirection.y )\n\t\t\tface = direction.x &gt; 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y &gt; 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z &gt; absDirection.y )\n\t\t\tface = direction.z &gt; 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y &gt; 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel &gt; cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes &amp;&amp; (scale &lt; a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes &amp;&amp; (offset.y &lt; 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes &amp;&amp; (offset.y &lt; 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes &amp;&amp; (offset.y &lt; 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes &amp;&amp; (offset.y &lt; 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes &amp;&amp; (offset.y &lt; 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes &amp;&amp; (offset.y &lt; 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 &gt; 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n&quot;,</td>
      </tr>
      <tr>
        <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="LC418" class="blob-code blob-code-inner js-file-line">defaultnormal_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vec3 transformedNormal = normalMatrix * objectNormal;<span class="pl-cce">\n</span>#ifdef FLIP_SIDED<span class="pl-cce">\n\t</span>transformedNormal = - transformedNormal;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,displacementmap_pars_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_DISPLACEMENTMAP<span class="pl-cce">\n\t</span>uniform sampler2D displacementMap;<span class="pl-cce">\n\t</span>uniform float displacementScale;<span class="pl-cce">\n\t</span>uniform float displacementBias;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,displacementmap_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_DISPLACEMENTMAP<span class="pl-cce">\n\t</span>transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="LC419" class="blob-code blob-code-inner js-file-line">emissivemap_fragment:&quot;#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n&quot;,emissivemap_pars_fragment:&quot;#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n&quot;,encodings_fragment:&quot;  gl_FragColor = linearToOutputTexel( gl_FragColor );\n&quot;,encodings_pars_fragment:&quot;\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="LC420" class="blob-code blob-code-inner js-file-line">envmap_fragment:&quot;#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n&quot;,</td>
      </tr>
      <tr>
        <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="LC421" class="blob-code blob-code-inner js-file-line">envmap_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( USE_ENVMAP ) || defined( PHYSICAL )<span class="pl-cce">\n\t</span>uniform float reflectivity;<span class="pl-cce">\n\t</span>uniform float envMapIntensity;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span>#ifdef USE_ENVMAP<span class="pl-cce">\n\t</span>#if ! defined( PHYSICAL ) &amp;&amp; ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )<span class="pl-cce">\n\t\t</span>varying vec3 vWorldPosition;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>#ifdef ENVMAP_TYPE_CUBE<span class="pl-cce">\n\t\t</span>uniform samplerCube envMap;<span class="pl-cce">\n\t</span>#else<span class="pl-cce">\n\t\t</span>uniform sampler2D envMap;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>uniform float flipEnvMap;<span class="pl-cce">\n\t</span>uniform int maxMipLevel;<span class="pl-cce">\n\t</span>#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )<span class="pl-cce">\n\t\t</span>uniform float refractionRatio;<span class="pl-cce">\n\t</span>#else<span class="pl-cce">\n\t\t</span>varying vec3 vReflect;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="LC422" class="blob-code blob-code-inner js-file-line">envmap_pars_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_ENVMAP<span class="pl-cce">\n\t</span>#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )<span class="pl-cce">\n\t\t</span>varying vec3 vWorldPosition;<span class="pl-cce">\n\t</span>#else<span class="pl-cce">\n\t\t</span>varying vec3 vReflect;<span class="pl-cce">\n\t\t</span>uniform float refractionRatio;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,envmap_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_ENVMAP<span class="pl-cce">\n\t</span>#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )<span class="pl-cce">\n\t\t</span>vWorldPosition = worldPosition.xyz;<span class="pl-cce">\n\t</span>#else<span class="pl-cce">\n\t\t</span>vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );<span class="pl-cce">\n\t\t</span>vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );<span class="pl-cce">\n\t\t</span>#ifdef ENVMAP_MODE_REFLECTION<span class="pl-cce">\n\t\t\t</span>vReflect = reflect( cameraToVertex, worldNormal );<span class="pl-cce">\n\t\t</span>#else<span class="pl-cce">\n\t\t\t</span>vReflect = refract( cameraToVertex, worldNormal, refractionRatio );<span class="pl-cce">\n\t\t</span>#endif<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="LC423" class="blob-code blob-code-inner js-file-line">fog_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>#ifdef USE_FOG<span class="pl-cce">\n</span>fogDepth = -mvPosition.z;<span class="pl-cce">\n</span>#endif<span class="pl-pds">&quot;</span></span>,fog_pars_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_FOG<span class="pl-cce">\n</span>  varying float fogDepth;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,fog_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_FOG<span class="pl-cce">\n\t</span>#ifdef FOG_EXP2<span class="pl-cce">\n\t\t</span>float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );<span class="pl-cce">\n\t</span>#else<span class="pl-cce">\n\t\t</span>float fogFactor = smoothstep( fogNear, fogFar, fogDepth );<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,fog_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_FOG<span class="pl-cce">\n\t</span>uniform vec3 fogColor;<span class="pl-cce">\n\t</span>varying float fogDepth;<span class="pl-cce">\n\t</span>#ifdef FOG_EXP2<span class="pl-cce">\n\t\t</span>uniform float fogDensity;<span class="pl-cce">\n\t</span>#else<span class="pl-cce">\n\t\t</span>uniform float fogNear;<span class="pl-cce">\n\t\t</span>uniform float fogFar;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="LC424" class="blob-code blob-code-inner js-file-line">gradientmap_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef TOON<span class="pl-cce">\n\t</span>uniform sampler2D gradientMap;<span class="pl-cce">\n\t</span>vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {<span class="pl-cce">\n\t\t</span>float dotNL = dot( normal, lightDirection );<span class="pl-cce">\n\t\t</span>vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );<span class="pl-cce">\n\t\t</span>#ifdef USE_GRADIENTMAP<span class="pl-cce">\n\t\t\t</span>return texture2D( gradientMap, coord ).rgb;<span class="pl-cce">\n\t\t</span>#else<span class="pl-cce">\n\t\t\t</span>return ( coord.x &lt; 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );<span class="pl-cce">\n\t\t</span>#endif<span class="pl-cce">\n\t</span>}<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,lightmap_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_LIGHTMAP<span class="pl-cce">\n\t</span>reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="LC425" class="blob-code blob-code-inner js-file-line">lightmap_pars_fragment:&quot;#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif&quot;,lights_lambert_vertex:&quot;vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS &gt; 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i &lt; NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS &gt; 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i &lt; NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS &gt; 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i &lt; NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS &gt; 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i &lt; NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n&quot;,</td>
      </tr>
      <tr>
        <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="LC426" class="blob-code blob-code-inner js-file-line">lights_pars_begin:&quot;uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS &gt; 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS &gt; 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS &gt; 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos &gt; spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS &gt; 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS &gt; 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n&quot;,</td>
      </tr>
      <tr>
        <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="LC427" class="blob-code blob-code-inner js-file-line">lights_pars_maps:&quot;#if defined( USE_ENVMAP ) &amp;&amp; defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n&quot;,</td>
      </tr>
      <tr>
        <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="LC428" class="blob-code blob-code-inner js-file-line">lights_phong_fragment:&quot;BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n&quot;,lights_phong_pars_fragment:&quot;varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n&quot;,</td>
      </tr>
      <tr>
        <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="LC429" class="blob-code blob-code-inner js-file-line">lights_physical_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>PhysicalMaterial material;<span class="pl-cce">\n</span>material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );<span class="pl-cce">\n</span>material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );<span class="pl-cce">\n</span>#ifdef STANDARD<span class="pl-cce">\n\t</span>material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );<span class="pl-cce">\n</span>#else<span class="pl-cce">\n\t</span>material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );<span class="pl-cce">\n\t</span>material.clearCoat = saturate( clearCoat );<span class="pl-cce">\t</span>material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="LC430" class="blob-code blob-code-inner js-file-line">lights_physical_pars_fragment:&quot;struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS &gt; 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="LC431" class="blob-code blob-code-inner js-file-line">lights_fragment_begin:&quot;\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS &gt; 0 ) &amp;&amp; defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i &lt; NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS &gt; 0 ) &amp;&amp; defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i &lt; NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS &gt; 0 ) &amp;&amp; defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i &lt; NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS &gt; 0 ) &amp;&amp; defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i &lt; NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if ( NUM_HEMI_LIGHTS &gt; 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i &lt; NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearCoatRadiance = vec3( 0.0 );\n#endif\n&quot;,</td>
      </tr>
      <tr>
        <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="LC432" class="blob-code blob-code-inner js-file-line">lights_fragment_maps<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( RE_IndirectDiffuse )<span class="pl-cce">\n\t</span>#ifdef USE_LIGHTMAP<span class="pl-cce">\n\t\t</span>vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;<span class="pl-cce">\n\t\t</span>#ifndef PHYSICALLY_CORRECT_LIGHTS<span class="pl-cce">\n\t\t\t</span>lightMapIrradiance *= PI;<span class="pl-cce">\n\t\t</span>#endif<span class="pl-cce">\n\t\t</span>irradiance += lightMapIrradiance;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>#if defined( USE_ENVMAP ) &amp;&amp; defined( PHYSICAL ) &amp;&amp; defined( ENVMAP_TYPE_CUBE_UV )<span class="pl-cce">\n\t\t</span>irradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span>#if defined( USE_ENVMAP ) &amp;&amp; defined( RE_IndirectSpecular )<span class="pl-cce">\n\t</span>radiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );<span class="pl-cce">\n\t</span>#ifndef STANDARD<span class="pl-cce">\n\t\t</span>clearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="LC433" class="blob-code blob-code-inner js-file-line">lights_fragment_end<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( RE_IndirectDiffuse )<span class="pl-cce">\n\t</span>RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span>#if defined( RE_IndirectSpecular )<span class="pl-cce">\n\t</span>RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,logdepthbuf_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( USE_LOGDEPTHBUF ) &amp;&amp; defined( USE_LOGDEPTHBUF_EXT )<span class="pl-cce">\n\t</span>gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;<span class="pl-cce">\n</span>#endif<span class="pl-pds">&quot;</span></span>,logdepthbuf_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_LOGDEPTHBUF<span class="pl-cce">\n\t</span>uniform float logDepthBufFC;<span class="pl-cce">\n\t</span>#ifdef USE_LOGDEPTHBUF_EXT<span class="pl-cce">\n\t\t</span>varying float vFragDepth;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="LC434" class="blob-code blob-code-inner js-file-line">logdepthbuf_pars_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_LOGDEPTHBUF<span class="pl-cce">\n\t</span>#ifdef USE_LOGDEPTHBUF_EXT<span class="pl-cce">\n\t\t</span>varying float vFragDepth;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>uniform float logDepthBufFC;<span class="pl-cce">\n</span>#endif<span class="pl-pds">&quot;</span></span>,logdepthbuf_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_LOGDEPTHBUF<span class="pl-cce">\n\t</span>#ifdef USE_LOGDEPTHBUF_EXT<span class="pl-cce">\n\t\t</span>vFragDepth = 1.0 + gl_Position.w;<span class="pl-cce">\n\t</span>#else<span class="pl-cce">\n\t\t</span>gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;<span class="pl-cce">\n\t\t</span>gl_Position.z *= gl_Position.w;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,map_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_MAP<span class="pl-cce">\n\t</span>vec4 texelColor = texture2D( map, vUv );<span class="pl-cce">\n\t</span>texelColor = mapTexelToLinear( texelColor );<span class="pl-cce">\n\t</span>diffuseColor *= texelColor;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="LC435" class="blob-code blob-code-inner js-file-line">map_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_MAP<span class="pl-cce">\n\t</span>uniform sampler2D map;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,map_particle_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_MAP<span class="pl-cce">\n\t</span>vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;<span class="pl-cce">\n\t</span>vec4 mapTexel = texture2D( map, uv );<span class="pl-cce">\n\t</span>diffuseColor *= mapTexelToLinear( mapTexel );<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,map_particle_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_MAP<span class="pl-cce">\n\t</span>uniform mat3 uvTransform;<span class="pl-cce">\n\t</span>uniform sampler2D map;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,metalnessmap_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>float metalnessFactor = metalness;<span class="pl-cce">\n</span>#ifdef USE_METALNESSMAP<span class="pl-cce">\n\t</span>vec4 texelMetalness = texture2D( metalnessMap, vUv );<span class="pl-cce">\n\t</span>metalnessFactor *= texelMetalness.b;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="LC436" class="blob-code blob-code-inner js-file-line">metalnessmap_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_METALNESSMAP<span class="pl-cce">\n\t</span>uniform sampler2D metalnessMap;<span class="pl-cce">\n</span>#endif<span class="pl-pds">&quot;</span></span>,morphnormal_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_MORPHNORMALS<span class="pl-cce">\n\t</span>objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];<span class="pl-cce">\n\t</span>objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];<span class="pl-cce">\n\t</span>objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];<span class="pl-cce">\n\t</span>objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,morphtarget_pars_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_MORPHTARGETS<span class="pl-cce">\n\t</span>#ifndef USE_MORPHNORMALS<span class="pl-cce">\n\t</span>uniform float morphTargetInfluences[ 8 ];<span class="pl-cce">\n\t</span>#else<span class="pl-cce">\n\t</span>uniform float morphTargetInfluences[ 4 ];<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="LC437" class="blob-code blob-code-inner js-file-line">morphtarget_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_MORPHTARGETS<span class="pl-cce">\n\t</span>transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];<span class="pl-cce">\n\t</span>transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];<span class="pl-cce">\n\t</span>transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];<span class="pl-cce">\n\t</span>transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];<span class="pl-cce">\n\t</span>#ifndef USE_MORPHNORMALS<span class="pl-cce">\n\t</span>transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];<span class="pl-cce">\n\t</span>transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];<span class="pl-cce">\n\t</span>transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];<span class="pl-cce">\n\t</span>transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="LC438" class="blob-code blob-code-inner js-file-line">normal_fragment_begin<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef FLAT_SHADED<span class="pl-cce">\n\t</span>vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );<span class="pl-cce">\n\t</span>vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );<span class="pl-cce">\n\t</span>vec3 normal = normalize( cross( fdx, fdy ) );<span class="pl-cce">\n</span>#else<span class="pl-cce">\n\t</span>vec3 normal = normalize( vNormal );<span class="pl-cce">\n\t</span>#ifdef DOUBLE_SIDED<span class="pl-cce">\n\t\t</span>normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,normal_fragment_maps<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_NORMALMAP<span class="pl-cce">\n\t</span>#ifdef OBJECTSPACE_NORMALMAP<span class="pl-cce">\n\t\t</span>normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;<span class="pl-cce">\n\t\t</span>#ifdef FLIP_SIDED<span class="pl-cce">\n\t\t\t</span>normal = - normal;<span class="pl-cce">\n\t\t</span>#endif<span class="pl-cce">\n\t\t</span>#ifdef DOUBLE_SIDED<span class="pl-cce">\n\t\t\t</span>normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );<span class="pl-cce">\n\t\t</span>#endif<span class="pl-cce">\n\t\t</span>normal = normalize( normalMatrix * normal );<span class="pl-cce">\n\t</span>#else<span class="pl-cce">\n\t\t</span>normal = perturbNormal2Arb( -vViewPosition, normal );<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#elif defined( USE_BUMPMAP )<span class="pl-cce">\n\t</span>normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="LC439" class="blob-code blob-code-inner js-file-line">normalmap_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_NORMALMAP<span class="pl-cce">\n\t</span>uniform sampler2D normalMap;<span class="pl-cce">\n\t</span>uniform vec2 normalScale;<span class="pl-cce">\n\t</span>#ifdef OBJECTSPACE_NORMALMAP<span class="pl-cce">\n\t\t</span>uniform mat3 normalMatrix;<span class="pl-cce">\n\t</span>#else<span class="pl-cce">\n\t\t</span>vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {<span class="pl-cce">\n\t\t\t</span>vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );<span class="pl-cce">\n\t\t\t</span>vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );<span class="pl-cce">\n\t\t\t</span>vec2 st0 = dFdx( vUv.st );<span class="pl-cce">\n\t\t\t</span>vec2 st1 = dFdy( vUv.st );<span class="pl-cce">\n\t\t\t</span>float scale = sign( st1.t * st0.s - st0.t * st1.s );<span class="pl-cce">\n\t\t\t</span>vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );<span class="pl-cce">\n\t\t\t</span>vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );<span class="pl-cce">\n\t\t\t</span>vec3 N = normalize( surf_norm );<span class="pl-cce">\n\t\t\t</span>mat3 tsn = mat3( S, T, N );<span class="pl-cce">\n\t\t\t</span>vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;<span class="pl-cce">\n\t\t\t</span>mapN.xy *= normalScale;<span class="pl-cce">\n\t\t\t</span>mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );<span class="pl-cce">\n\t\t\t</span>return normalize( tsn * mapN );<span class="pl-cce">\n\t\t</span>}<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="LC440" class="blob-code blob-code-inner js-file-line">packing:&quot;vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="LC441" class="blob-code blob-code-inner js-file-line">premultiplied_alpha_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef PREMULTIPLIED_ALPHA<span class="pl-cce">\n\t</span>gl_FragColor.rgb *= gl_FragColor.a;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,project_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );<span class="pl-cce">\n</span>gl_Position = projectionMatrix * mvPosition;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,dithering_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( DITHERING )<span class="pl-cce">\n</span>  gl_FragColor.rgb = dithering( gl_FragColor.rgb );<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,dithering_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( DITHERING )<span class="pl-cce">\n\t</span>vec3 dithering( vec3 color ) {<span class="pl-cce">\n\t\t</span>float grid_position = rand( gl_FragCoord.xy );<span class="pl-cce">\n\t\t</span>vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );<span class="pl-cce">\n\t\t</span>dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );<span class="pl-cce">\n\t\t</span>return color + dither_shift_RGB;<span class="pl-cce">\n\t</span>}<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="LC442" class="blob-code blob-code-inner js-file-line">roughnessmap_fragment:&quot;float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n&quot;,roughnessmap_pars_fragment:&quot;#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif&quot;,shadowmap_pars_fragment:&quot;#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS &gt; 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS &gt; 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS &gt; 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x &gt;= 0.0, shadowCoord.x &lt;= 1.0, shadowCoord.y &gt;= 0.0, shadowCoord.y &lt;= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z &lt;= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z &gt;= almostOne ) {\n\t\t\tif ( v.z &gt; 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x &gt;= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y &gt;= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n&quot;,</td>
      </tr>
      <tr>
        <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="LC443" class="blob-code blob-code-inner js-file-line">shadowmap_pars_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_SHADOWMAP<span class="pl-cce">\n\t</span>#if NUM_DIR_LIGHTS &gt; 0<span class="pl-cce">\n\t\t</span>uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];<span class="pl-cce">\n\t\t</span>varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>#if NUM_SPOT_LIGHTS &gt; 0<span class="pl-cce">\n\t\t</span>uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];<span class="pl-cce">\n\t\t</span>varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>#if NUM_POINT_LIGHTS &gt; 0<span class="pl-cce">\n\t\t</span>uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];<span class="pl-cce">\n\t\t</span>varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="LC444" class="blob-code blob-code-inner js-file-line">shadowmap_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_SHADOWMAP<span class="pl-cce">\n\t</span>#if NUM_DIR_LIGHTS &gt; 0<span class="pl-cce">\n\t</span>#pragma unroll_loop<span class="pl-cce">\n\t</span>for ( int i = 0; i &lt; NUM_DIR_LIGHTS; i ++ ) {<span class="pl-cce">\n\t\t</span>vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;<span class="pl-cce">\n\t</span>}<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>#if NUM_SPOT_LIGHTS &gt; 0<span class="pl-cce">\n\t</span>#pragma unroll_loop<span class="pl-cce">\n\t</span>for ( int i = 0; i &lt; NUM_SPOT_LIGHTS; i ++ ) {<span class="pl-cce">\n\t\t</span>vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;<span class="pl-cce">\n\t</span>}<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>#if NUM_POINT_LIGHTS &gt; 0<span class="pl-cce">\n\t</span>#pragma unroll_loop<span class="pl-cce">\n\t</span>for ( int i = 0; i &lt; NUM_POINT_LIGHTS; i ++ ) {<span class="pl-cce">\n\t\t</span>vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;<span class="pl-cce">\n\t</span>}<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="LC445" class="blob-code blob-code-inner js-file-line">shadowmask_pars_fragment:&quot;float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS &gt; 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i &lt; NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS &gt; 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i &lt; NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS &gt; 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i &lt; NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="LC446" class="blob-code blob-code-inner js-file-line">skinbase_vertex:&quot;#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif&quot;,skinning_pars_vertex:&quot;#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n&quot;,</td>
      </tr>
      <tr>
        <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="LC447" class="blob-code blob-code-inner js-file-line">skinning_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_SKINNING<span class="pl-cce">\n\t</span>vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );<span class="pl-cce">\n\t</span>vec4 skinned = vec4( 0.0 );<span class="pl-cce">\n\t</span>skinned += boneMatX * skinVertex * skinWeight.x;<span class="pl-cce">\n\t</span>skinned += boneMatY * skinVertex * skinWeight.y;<span class="pl-cce">\n\t</span>skinned += boneMatZ * skinVertex * skinWeight.z;<span class="pl-cce">\n\t</span>skinned += boneMatW * skinVertex * skinWeight.w;<span class="pl-cce">\n\t</span>transformed = ( bindMatrixInverse * skinned ).xyz;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,skinnormal_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#ifdef USE_SKINNING<span class="pl-cce">\n\t</span>mat4 skinMatrix = mat4( 0.0 );<span class="pl-cce">\n\t</span>skinMatrix += skinWeight.x * boneMatX;<span class="pl-cce">\n\t</span>skinMatrix += skinWeight.y * boneMatY;<span class="pl-cce">\n\t</span>skinMatrix += skinWeight.z * boneMatZ;<span class="pl-cce">\n\t</span>skinMatrix += skinWeight.w * boneMatW;<span class="pl-cce">\n\t</span>skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;<span class="pl-cce">\n\t</span>objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="LC448" class="blob-code blob-code-inner js-file-line">specularmap_fragment:&quot;float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif&quot;,specularmap_pars_fragment:&quot;#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif&quot;,tonemapping_fragment:&quot;#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n&quot;,tonemapping_pars_fragment:&quot;#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="LC449" class="blob-code blob-code-inner js-file-line">uv_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )<span class="pl-cce">\n\t</span>varying vec2 vUv;<span class="pl-cce">\n</span>#endif<span class="pl-pds">&quot;</span></span>,uv_pars_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )<span class="pl-cce">\n\t</span>varying vec2 vUv;<span class="pl-cce">\n\t</span>uniform mat3 uvTransform;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="LC450" class="blob-code blob-code-inner js-file-line">uv_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )<span class="pl-cce">\n\t</span>vUv = ( uvTransform * vec3( uv, 1 ) ).xy;<span class="pl-cce">\n</span>#endif<span class="pl-pds">&quot;</span></span>,uv2_pars_fragment<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )<span class="pl-cce">\n\t</span>varying vec2 vUv2;<span class="pl-cce">\n</span>#endif<span class="pl-pds">&quot;</span></span>,uv2_pars_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )<span class="pl-cce">\n\t</span>attribute vec2 uv2;<span class="pl-cce">\n\t</span>varying vec2 vUv2;<span class="pl-cce">\n</span>#endif<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="LC451" class="blob-code blob-code-inner js-file-line">uv2_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )<span class="pl-cce">\n\t</span>vUv2 = uv2;<span class="pl-cce">\n</span>#endif<span class="pl-pds">&quot;</span></span>,worldpos_vertex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )<span class="pl-cce">\n\t</span>vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,cube_frag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>uniform samplerCube tCube;<span class="pl-cce">\n</span>uniform float tFlip;<span class="pl-cce">\n</span>uniform float opacity;<span class="pl-cce">\n</span>varying vec3 vWorldPosition;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );<span class="pl-cce">\n\t</span>gl_FragColor.a *= opacity;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="LC452" class="blob-code blob-code-inner js-file-line">cube_vert<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>varying vec3 vWorldPosition;<span class="pl-cce">\n</span>#include &lt;common&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>vWorldPosition = transformDirection( position, modelMatrix );<span class="pl-cce">\n\t</span>#include &lt;begin_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;project_vertex&gt;<span class="pl-cce">\n\t</span>gl_Position.z = gl_Position.w;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,depth_frag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#if DEPTH_PACKING == 3200<span class="pl-cce">\n\t</span>uniform float opacity;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span>#include &lt;common&gt;<span class="pl-cce">\n</span>#include &lt;packing&gt;<span class="pl-cce">\n</span>#include &lt;uv_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;map_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;alphamap_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;logdepthbuf_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;clipping_planes_pars_fragment&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>#include &lt;clipping_planes_fragment&gt;<span class="pl-cce">\n\t</span>vec4 diffuseColor = vec4( 1.0 );<span class="pl-cce">\n\t</span>#if DEPTH_PACKING == 3200<span class="pl-cce">\n\t\t</span>diffuseColor.a = opacity;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>#include &lt;map_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;alphamap_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;alphatest_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;logdepthbuf_fragment&gt;<span class="pl-cce">\n\t</span>#if DEPTH_PACKING == 3200<span class="pl-cce">\n\t\t</span>gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );<span class="pl-cce">\n\t</span>#elif DEPTH_PACKING == 3201<span class="pl-cce">\n\t\t</span>gl_FragColor = packDepthToRGBA( gl_FragCoord.z );<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="LC453" class="blob-code blob-code-inner js-file-line">depth_vert<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#include &lt;common&gt;<span class="pl-cce">\n</span>#include &lt;uv_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;displacementmap_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;morphtarget_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;skinning_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;logdepthbuf_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;clipping_planes_pars_vertex&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>#include &lt;uv_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;skinbase_vertex&gt;<span class="pl-cce">\n\t</span>#ifdef USE_DISPLACEMENTMAP<span class="pl-cce">\n\t\t</span>#include &lt;beginnormal_vertex&gt;<span class="pl-cce">\n\t\t</span>#include &lt;morphnormal_vertex&gt;<span class="pl-cce">\n\t\t</span>#include &lt;skinnormal_vertex&gt;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>#include &lt;begin_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;morphtarget_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;skinning_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;displacementmap_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;project_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;logdepthbuf_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;clipping_planes_vertex&gt;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="LC454" class="blob-code blob-code-inner js-file-line">distanceRGBA_frag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define DISTANCE<span class="pl-cce">\n</span>uniform vec3 referencePosition;<span class="pl-cce">\n</span>uniform float nearDistance;<span class="pl-cce">\n</span>uniform float farDistance;<span class="pl-cce">\n</span>varying vec3 vWorldPosition;<span class="pl-cce">\n</span>#include &lt;common&gt;<span class="pl-cce">\n</span>#include &lt;packing&gt;<span class="pl-cce">\n</span>#include &lt;uv_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;map_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;alphamap_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;clipping_planes_pars_fragment&gt;<span class="pl-cce">\n</span>void main () {<span class="pl-cce">\n\t</span>#include &lt;clipping_planes_fragment&gt;<span class="pl-cce">\n\t</span>vec4 diffuseColor = vec4( 1.0 );<span class="pl-cce">\n\t</span>#include &lt;map_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;alphamap_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;alphatest_fragment&gt;<span class="pl-cce">\n\t</span>float dist = length( vWorldPosition - referencePosition );<span class="pl-cce">\n\t</span>dist = ( dist - nearDistance ) / ( farDistance - nearDistance );<span class="pl-cce">\n\t</span>dist = saturate( dist );<span class="pl-cce">\n\t</span>gl_FragColor = packDepthToRGBA( dist );<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="LC455" class="blob-code blob-code-inner js-file-line">distanceRGBA_vert<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define DISTANCE<span class="pl-cce">\n</span>varying vec3 vWorldPosition;<span class="pl-cce">\n</span>#include &lt;common&gt;<span class="pl-cce">\n</span>#include &lt;uv_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;displacementmap_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;morphtarget_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;skinning_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;clipping_planes_pars_vertex&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>#include &lt;uv_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;skinbase_vertex&gt;<span class="pl-cce">\n\t</span>#ifdef USE_DISPLACEMENTMAP<span class="pl-cce">\n\t\t</span>#include &lt;beginnormal_vertex&gt;<span class="pl-cce">\n\t\t</span>#include &lt;morphnormal_vertex&gt;<span class="pl-cce">\n\t\t</span>#include &lt;skinnormal_vertex&gt;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>#include &lt;begin_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;morphtarget_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;skinning_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;displacementmap_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;project_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;worldpos_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;clipping_planes_vertex&gt;<span class="pl-cce">\n\t</span>vWorldPosition = worldPosition.xyz;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="LC456" class="blob-code blob-code-inner js-file-line">equirect_frag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>uniform sampler2D tEquirect;<span class="pl-cce">\n</span>varying vec3 vWorldPosition;<span class="pl-cce">\n</span>#include &lt;common&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>vec3 direction = normalize( vWorldPosition );<span class="pl-cce">\n\t</span>vec2 sampleUV;<span class="pl-cce">\n\t</span>sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;<span class="pl-cce">\n\t</span>sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;<span class="pl-cce">\n\t</span>gl_FragColor = texture2D( tEquirect, sampleUV );<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,equirect_vert<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>varying vec3 vWorldPosition;<span class="pl-cce">\n</span>#include &lt;common&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>vWorldPosition = transformDirection( position, modelMatrix );<span class="pl-cce">\n\t</span>#include &lt;begin_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;project_vertex&gt;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="LC457" class="blob-code blob-code-inner js-file-line">linedashed_frag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>uniform vec3 diffuse;<span class="pl-cce">\n</span>uniform float opacity;<span class="pl-cce">\n</span>uniform float dashSize;<span class="pl-cce">\n</span>uniform float totalSize;<span class="pl-cce">\n</span>varying float vLineDistance;<span class="pl-cce">\n</span>#include &lt;common&gt;<span class="pl-cce">\n</span>#include &lt;color_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;fog_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;logdepthbuf_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;clipping_planes_pars_fragment&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>#include &lt;clipping_planes_fragment&gt;<span class="pl-cce">\n\t</span>if ( mod( vLineDistance, totalSize ) &gt; dashSize ) {<span class="pl-cce">\n\t\t</span>discard;<span class="pl-cce">\n\t</span>}<span class="pl-cce">\n\t</span>vec3 outgoingLight = vec3( 0.0 );<span class="pl-cce">\n\t</span>vec4 diffuseColor = vec4( diffuse, opacity );<span class="pl-cce">\n\t</span>#include &lt;logdepthbuf_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;color_fragment&gt;<span class="pl-cce">\n\t</span>outgoingLight = diffuseColor.rgb;<span class="pl-cce">\n\t</span>gl_FragColor = vec4( outgoingLight, diffuseColor.a );<span class="pl-cce">\n\t</span>#include &lt;premultiplied_alpha_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;tonemapping_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;encodings_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;fog_fragment&gt;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="LC458" class="blob-code blob-code-inner js-file-line">linedashed_vert<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>uniform float scale;<span class="pl-cce">\n</span>attribute float lineDistance;<span class="pl-cce">\n</span>varying float vLineDistance;<span class="pl-cce">\n</span>#include &lt;common&gt;<span class="pl-cce">\n</span>#include &lt;color_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;fog_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;logdepthbuf_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;clipping_planes_pars_vertex&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>#include &lt;color_vertex&gt;<span class="pl-cce">\n\t</span>vLineDistance = scale * lineDistance;<span class="pl-cce">\n\t</span>vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );<span class="pl-cce">\n\t</span>gl_Position = projectionMatrix * mvPosition;<span class="pl-cce">\n\t</span>#include &lt;logdepthbuf_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;clipping_planes_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;fog_vertex&gt;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="LC459" class="blob-code blob-code-inner js-file-line">meshbasic_frag:&quot;uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include &lt;common&gt;\n#include &lt;color_pars_fragment&gt;\n#include &lt;uv_pars_fragment&gt;\n#include &lt;uv2_pars_fragment&gt;\n#include &lt;map_pars_fragment&gt;\n#include &lt;alphamap_pars_fragment&gt;\n#include &lt;aomap_pars_fragment&gt;\n#include &lt;lightmap_pars_fragment&gt;\n#include &lt;envmap_pars_fragment&gt;\n#include &lt;fog_pars_fragment&gt;\n#include &lt;specularmap_pars_fragment&gt;\n#include &lt;logdepthbuf_pars_fragment&gt;\n#include &lt;clipping_planes_pars_fragment&gt;\nvoid main() {\n\t#include &lt;clipping_planes_fragment&gt;\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include &lt;logdepthbuf_fragment&gt;\n\t#include &lt;map_fragment&gt;\n\t#include &lt;color_fragment&gt;\n\t#include &lt;alphamap_fragment&gt;\n\t#include &lt;alphatest_fragment&gt;\n\t#include &lt;specularmap_fragment&gt;\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include &lt;aomap_fragment&gt;\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include &lt;envmap_fragment&gt;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include &lt;premultiplied_alpha_fragment&gt;\n\t#include &lt;tonemapping_fragment&gt;\n\t#include &lt;encodings_fragment&gt;\n\t#include &lt;fog_fragment&gt;\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="LC460" class="blob-code blob-code-inner js-file-line">meshbasic_vert<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#include &lt;common&gt;<span class="pl-cce">\n</span>#include &lt;uv_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;uv2_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;envmap_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;color_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;fog_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;morphtarget_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;skinning_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;logdepthbuf_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;clipping_planes_pars_vertex&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>#include &lt;uv_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;uv2_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;color_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;skinbase_vertex&gt;<span class="pl-cce">\n\t</span>#ifdef USE_ENVMAP<span class="pl-cce">\n\t</span>#include &lt;beginnormal_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;morphnormal_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;skinnormal_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;defaultnormal_vertex&gt;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>#include &lt;begin_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;morphtarget_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;skinning_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;project_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;logdepthbuf_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;worldpos_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;clipping_planes_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;envmap_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;fog_vertex&gt;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="LC461" class="blob-code blob-code-inner js-file-line">meshlambert_frag:&quot;uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include &lt;common&gt;\n#include &lt;packing&gt;\n#include &lt;dithering_pars_fragment&gt;\n#include &lt;color_pars_fragment&gt;\n#include &lt;uv_pars_fragment&gt;\n#include &lt;uv2_pars_fragment&gt;\n#include &lt;map_pars_fragment&gt;\n#include &lt;alphamap_pars_fragment&gt;\n#include &lt;aomap_pars_fragment&gt;\n#include &lt;lightmap_pars_fragment&gt;\n#include &lt;emissivemap_pars_fragment&gt;\n#include &lt;envmap_pars_fragment&gt;\n#include &lt;bsdfs&gt;\n#include &lt;lights_pars_begin&gt;\n#include &lt;fog_pars_fragment&gt;\n#include &lt;shadowmap_pars_fragment&gt;\n#include &lt;shadowmask_pars_fragment&gt;\n#include &lt;specularmap_pars_fragment&gt;\n#include &lt;logdepthbuf_pars_fragment&gt;\n#include &lt;clipping_planes_pars_fragment&gt;\nvoid main() {\n\t#include &lt;clipping_planes_fragment&gt;\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include &lt;logdepthbuf_fragment&gt;\n\t#include &lt;map_fragment&gt;\n\t#include &lt;color_fragment&gt;\n\t#include &lt;alphamap_fragment&gt;\n\t#include &lt;alphatest_fragment&gt;\n\t#include &lt;specularmap_fragment&gt;\n\t#include &lt;emissivemap_fragment&gt;\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include &lt;lightmap_fragment&gt;\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include &lt;aomap_fragment&gt;\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include &lt;envmap_fragment&gt;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include &lt;tonemapping_fragment&gt;\n\t#include &lt;encodings_fragment&gt;\n\t#include &lt;fog_fragment&gt;\n\t#include &lt;premultiplied_alpha_fragment&gt;\n\t#include &lt;dithering_fragment&gt;\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="LC462" class="blob-code blob-code-inner js-file-line">meshlambert_vert:&quot;#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include &lt;common&gt;\n#include &lt;uv_pars_vertex&gt;\n#include &lt;uv2_pars_vertex&gt;\n#include &lt;envmap_pars_vertex&gt;\n#include &lt;bsdfs&gt;\n#include &lt;lights_pars_begin&gt;\n#include &lt;color_pars_vertex&gt;\n#include &lt;fog_pars_vertex&gt;\n#include &lt;morphtarget_pars_vertex&gt;\n#include &lt;skinning_pars_vertex&gt;\n#include &lt;shadowmap_pars_vertex&gt;\n#include &lt;logdepthbuf_pars_vertex&gt;\n#include &lt;clipping_planes_pars_vertex&gt;\nvoid main() {\n\t#include &lt;uv_vertex&gt;\n\t#include &lt;uv2_vertex&gt;\n\t#include &lt;color_vertex&gt;\n\t#include &lt;beginnormal_vertex&gt;\n\t#include &lt;morphnormal_vertex&gt;\n\t#include &lt;skinbase_vertex&gt;\n\t#include &lt;skinnormal_vertex&gt;\n\t#include &lt;defaultnormal_vertex&gt;\n\t#include &lt;begin_vertex&gt;\n\t#include &lt;morphtarget_vertex&gt;\n\t#include &lt;skinning_vertex&gt;\n\t#include &lt;project_vertex&gt;\n\t#include &lt;logdepthbuf_vertex&gt;\n\t#include &lt;clipping_planes_vertex&gt;\n\t#include &lt;worldpos_vertex&gt;\n\t#include &lt;envmap_vertex&gt;\n\t#include &lt;lights_lambert_vertex&gt;\n\t#include &lt;shadowmap_vertex&gt;\n\t#include &lt;fog_vertex&gt;\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="LC463" class="blob-code blob-code-inner js-file-line">meshphong_frag:&quot;#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include &lt;common&gt;\n#include &lt;packing&gt;\n#include &lt;dithering_pars_fragment&gt;\n#include &lt;color_pars_fragment&gt;\n#include &lt;uv_pars_fragment&gt;\n#include &lt;uv2_pars_fragment&gt;\n#include &lt;map_pars_fragment&gt;\n#include &lt;alphamap_pars_fragment&gt;\n#include &lt;aomap_pars_fragment&gt;\n#include &lt;lightmap_pars_fragment&gt;\n#include &lt;emissivemap_pars_fragment&gt;\n#include &lt;envmap_pars_fragment&gt;\n#include &lt;gradientmap_pars_fragment&gt;\n#include &lt;fog_pars_fragment&gt;\n#include &lt;bsdfs&gt;\n#include &lt;lights_pars_begin&gt;\n#include &lt;lights_phong_pars_fragment&gt;\n#include &lt;shadowmap_pars_fragment&gt;\n#include &lt;bumpmap_pars_fragment&gt;\n#include &lt;normalmap_pars_fragment&gt;\n#include &lt;specularmap_pars_fragment&gt;\n#include &lt;logdepthbuf_pars_fragment&gt;\n#include &lt;clipping_planes_pars_fragment&gt;\nvoid main() {\n\t#include &lt;clipping_planes_fragment&gt;\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include &lt;logdepthbuf_fragment&gt;\n\t#include &lt;map_fragment&gt;\n\t#include &lt;color_fragment&gt;\n\t#include &lt;alphamap_fragment&gt;\n\t#include &lt;alphatest_fragment&gt;\n\t#include &lt;specularmap_fragment&gt;\n\t#include &lt;normal_fragment_begin&gt;\n\t#include &lt;normal_fragment_maps&gt;\n\t#include &lt;emissivemap_fragment&gt;\n\t#include &lt;lights_phong_fragment&gt;\n\t#include &lt;lights_fragment_begin&gt;\n\t#include &lt;lights_fragment_maps&gt;\n\t#include &lt;lights_fragment_end&gt;\n\t#include &lt;aomap_fragment&gt;\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include &lt;envmap_fragment&gt;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include &lt;tonemapping_fragment&gt;\n\t#include &lt;encodings_fragment&gt;\n\t#include &lt;fog_fragment&gt;\n\t#include &lt;premultiplied_alpha_fragment&gt;\n\t#include &lt;dithering_fragment&gt;\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="LC464" class="blob-code blob-code-inner js-file-line">meshphong_vert:&quot;#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include &lt;common&gt;\n#include &lt;uv_pars_vertex&gt;\n#include &lt;uv2_pars_vertex&gt;\n#include &lt;displacementmap_pars_vertex&gt;\n#include &lt;envmap_pars_vertex&gt;\n#include &lt;color_pars_vertex&gt;\n#include &lt;fog_pars_vertex&gt;\n#include &lt;morphtarget_pars_vertex&gt;\n#include &lt;skinning_pars_vertex&gt;\n#include &lt;shadowmap_pars_vertex&gt;\n#include &lt;logdepthbuf_pars_vertex&gt;\n#include &lt;clipping_planes_pars_vertex&gt;\nvoid main() {\n\t#include &lt;uv_vertex&gt;\n\t#include &lt;uv2_vertex&gt;\n\t#include &lt;color_vertex&gt;\n\t#include &lt;beginnormal_vertex&gt;\n\t#include &lt;morphnormal_vertex&gt;\n\t#include &lt;skinbase_vertex&gt;\n\t#include &lt;skinnormal_vertex&gt;\n\t#include &lt;defaultnormal_vertex&gt;\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include &lt;begin_vertex&gt;\n\t#include &lt;morphtarget_vertex&gt;\n\t#include &lt;skinning_vertex&gt;\n\t#include &lt;displacementmap_vertex&gt;\n\t#include &lt;project_vertex&gt;\n\t#include &lt;logdepthbuf_vertex&gt;\n\t#include &lt;clipping_planes_vertex&gt;\n\tvViewPosition = - mvPosition.xyz;\n\t#include &lt;worldpos_vertex&gt;\n\t#include &lt;envmap_vertex&gt;\n\t#include &lt;shadowmap_vertex&gt;\n\t#include &lt;fog_vertex&gt;\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="LC465" class="blob-code blob-code-inner js-file-line">meshphysical_frag:&quot;#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include &lt;common&gt;\n#include &lt;packing&gt;\n#include &lt;dithering_pars_fragment&gt;\n#include &lt;color_pars_fragment&gt;\n#include &lt;uv_pars_fragment&gt;\n#include &lt;uv2_pars_fragment&gt;\n#include &lt;map_pars_fragment&gt;\n#include &lt;alphamap_pars_fragment&gt;\n#include &lt;aomap_pars_fragment&gt;\n#include &lt;lightmap_pars_fragment&gt;\n#include &lt;emissivemap_pars_fragment&gt;\n#include &lt;envmap_pars_fragment&gt;\n#include &lt;fog_pars_fragment&gt;\n#include &lt;bsdfs&gt;\n#include &lt;cube_uv_reflection_fragment&gt;\n#include &lt;lights_pars_begin&gt;\n#include &lt;lights_pars_maps&gt;\n#include &lt;lights_physical_pars_fragment&gt;\n#include &lt;shadowmap_pars_fragment&gt;\n#include &lt;bumpmap_pars_fragment&gt;\n#include &lt;normalmap_pars_fragment&gt;\n#include &lt;roughnessmap_pars_fragment&gt;\n#include &lt;metalnessmap_pars_fragment&gt;\n#include &lt;logdepthbuf_pars_fragment&gt;\n#include &lt;clipping_planes_pars_fragment&gt;\nvoid main() {\n\t#include &lt;clipping_planes_fragment&gt;\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include &lt;logdepthbuf_fragment&gt;\n\t#include &lt;map_fragment&gt;\n\t#include &lt;color_fragment&gt;\n\t#include &lt;alphamap_fragment&gt;\n\t#include &lt;alphatest_fragment&gt;\n\t#include &lt;roughnessmap_fragment&gt;\n\t#include &lt;metalnessmap_fragment&gt;\n\t#include &lt;normal_fragment_begin&gt;\n\t#include &lt;normal_fragment_maps&gt;\n\t#include &lt;emissivemap_fragment&gt;\n\t#include &lt;lights_physical_fragment&gt;\n\t#include &lt;lights_fragment_begin&gt;\n\t#include &lt;lights_fragment_maps&gt;\n\t#include &lt;lights_fragment_end&gt;\n\t#include &lt;aomap_fragment&gt;\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include &lt;tonemapping_fragment&gt;\n\t#include &lt;encodings_fragment&gt;\n\t#include &lt;fog_fragment&gt;\n\t#include &lt;premultiplied_alpha_fragment&gt;\n\t#include &lt;dithering_fragment&gt;\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="LC466" class="blob-code blob-code-inner js-file-line">meshphysical_vert:&quot;#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include &lt;common&gt;\n#include &lt;uv_pars_vertex&gt;\n#include &lt;uv2_pars_vertex&gt;\n#include &lt;displacementmap_pars_vertex&gt;\n#include &lt;color_pars_vertex&gt;\n#include &lt;fog_pars_vertex&gt;\n#include &lt;morphtarget_pars_vertex&gt;\n#include &lt;skinning_pars_vertex&gt;\n#include &lt;shadowmap_pars_vertex&gt;\n#include &lt;logdepthbuf_pars_vertex&gt;\n#include &lt;clipping_planes_pars_vertex&gt;\nvoid main() {\n\t#include &lt;uv_vertex&gt;\n\t#include &lt;uv2_vertex&gt;\n\t#include &lt;color_vertex&gt;\n\t#include &lt;beginnormal_vertex&gt;\n\t#include &lt;morphnormal_vertex&gt;\n\t#include &lt;skinbase_vertex&gt;\n\t#include &lt;skinnormal_vertex&gt;\n\t#include &lt;defaultnormal_vertex&gt;\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include &lt;begin_vertex&gt;\n\t#include &lt;morphtarget_vertex&gt;\n\t#include &lt;skinning_vertex&gt;\n\t#include &lt;displacementmap_vertex&gt;\n\t#include &lt;project_vertex&gt;\n\t#include &lt;logdepthbuf_vertex&gt;\n\t#include &lt;clipping_planes_vertex&gt;\n\tvViewPosition = - mvPosition.xyz;\n\t#include &lt;worldpos_vertex&gt;\n\t#include &lt;shadowmap_vertex&gt;\n\t#include &lt;fog_vertex&gt;\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="LC467" class="blob-code blob-code-inner js-file-line">normal_frag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#define NORMAL<span class="pl-cce">\n</span>uniform float opacity;<span class="pl-cce">\n</span>#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) &amp;&amp; ! defined( OBJECTSPACE_NORMALMAP ) )<span class="pl-cce">\n\t</span>varying vec3 vViewPosition;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span>#ifndef FLAT_SHADED<span class="pl-cce">\n\t</span>varying vec3 vNormal;<span class="pl-cce">\n</span>#endif<span class="pl-cce">\n</span>#include &lt;packing&gt;<span class="pl-cce">\n</span>#include &lt;uv_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;bumpmap_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;normalmap_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;logdepthbuf_pars_fragment&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>#include &lt;logdepthbuf_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;normal_fragment_begin&gt;<span class="pl-cce">\n\t</span>#include &lt;normal_fragment_maps&gt;<span class="pl-cce">\n\t</span>gl_FragColor = vec4( packNormalToRGB( normal ), opacity );<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="LC468" class="blob-code blob-code-inner js-file-line">normal_vert:&quot;#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) &amp;&amp; ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include &lt;uv_pars_vertex&gt;\n#include &lt;displacementmap_pars_vertex&gt;\n#include &lt;morphtarget_pars_vertex&gt;\n#include &lt;skinning_pars_vertex&gt;\n#include &lt;logdepthbuf_pars_vertex&gt;\nvoid main() {\n\t#include &lt;uv_vertex&gt;\n\t#include &lt;beginnormal_vertex&gt;\n\t#include &lt;morphnormal_vertex&gt;\n\t#include &lt;skinbase_vertex&gt;\n\t#include &lt;skinnormal_vertex&gt;\n\t#include &lt;defaultnormal_vertex&gt;\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include &lt;begin_vertex&gt;\n\t#include &lt;morphtarget_vertex&gt;\n\t#include &lt;skinning_vertex&gt;\n\t#include &lt;displacementmap_vertex&gt;\n\t#include &lt;project_vertex&gt;\n\t#include &lt;logdepthbuf_vertex&gt;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) &amp;&amp; ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n&quot;,</td>
      </tr>
      <tr>
        <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="LC469" class="blob-code blob-code-inner js-file-line">points_frag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>uniform vec3 diffuse;<span class="pl-cce">\n</span>uniform float opacity;<span class="pl-cce">\n</span>#include &lt;common&gt;<span class="pl-cce">\n</span>#include &lt;packing&gt;<span class="pl-cce">\n</span>#include &lt;color_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;map_particle_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;fog_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;logdepthbuf_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;clipping_planes_pars_fragment&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>#include &lt;clipping_planes_fragment&gt;<span class="pl-cce">\n\t</span>vec3 outgoingLight = vec3( 0.0 );<span class="pl-cce">\n\t</span>vec4 diffuseColor = vec4( diffuse, opacity );<span class="pl-cce">\n\t</span>#include &lt;logdepthbuf_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;map_particle_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;color_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;alphatest_fragment&gt;<span class="pl-cce">\n\t</span>outgoingLight = diffuseColor.rgb;<span class="pl-cce">\n\t</span>gl_FragColor = vec4( outgoingLight, diffuseColor.a );<span class="pl-cce">\n\t</span>#include &lt;premultiplied_alpha_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;tonemapping_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;encodings_fragment&gt;<span class="pl-cce">\n\t</span>#include &lt;fog_fragment&gt;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="LC470" class="blob-code blob-code-inner js-file-line">points_vert<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>uniform float size;<span class="pl-cce">\n</span>uniform float scale;<span class="pl-cce">\n</span>#include &lt;common&gt;<span class="pl-cce">\n</span>#include &lt;color_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;fog_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;morphtarget_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;logdepthbuf_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;clipping_planes_pars_vertex&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>#include &lt;color_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;begin_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;morphtarget_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;project_vertex&gt;<span class="pl-cce">\n\t</span>#ifdef USE_SIZEATTENUATION<span class="pl-cce">\n\t\t</span>gl_PointSize = size * ( scale / - mvPosition.z );<span class="pl-cce">\n\t</span>#else<span class="pl-cce">\n\t\t</span>gl_PointSize = size;<span class="pl-cce">\n\t</span>#endif<span class="pl-cce">\n\t</span>#include &lt;logdepthbuf_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;clipping_planes_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;worldpos_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;fog_vertex&gt;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="LC471" class="blob-code blob-code-inner js-file-line">shadow_frag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>uniform vec3 color;<span class="pl-cce">\n</span>uniform float opacity;<span class="pl-cce">\n</span>#include &lt;common&gt;<span class="pl-cce">\n</span>#include &lt;packing&gt;<span class="pl-cce">\n</span>#include &lt;fog_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;bsdfs&gt;<span class="pl-cce">\n</span>#include &lt;lights_pars_begin&gt;<span class="pl-cce">\n</span>#include &lt;shadowmap_pars_fragment&gt;<span class="pl-cce">\n</span>#include &lt;shadowmask_pars_fragment&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );<span class="pl-cce">\n\t</span>#include &lt;fog_fragment&gt;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,shadow_vert<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#include &lt;fog_pars_vertex&gt;<span class="pl-cce">\n</span>#include &lt;shadowmap_pars_vertex&gt;<span class="pl-cce">\n</span>void main() {<span class="pl-cce">\n\t</span>#include &lt;begin_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;project_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;worldpos_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;shadowmap_vertex&gt;<span class="pl-cce">\n\t</span>#include &lt;fog_vertex&gt;<span class="pl-cce">\n</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>},</td>
      </tr>
      <tr>
        <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="LC472" class="blob-code blob-code-inner js-file-line">Ba<span class="pl-k">=</span>{<span class="pl-en">merge</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>{},c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">clone</span>(a[c]),e;<span class="pl-k">for</span>(e <span class="pl-k">in</span> d)b[e]<span class="pl-k">=</span>d[e]}<span class="pl-k">return</span> b},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{},c;<span class="pl-k">for</span>(c <span class="pl-k">in</span> a){b[c]<span class="pl-k">=</span>{};<span class="pl-k">for</span>(<span class="pl-k">var</span> d <span class="pl-k">in</span> a[c]){<span class="pl-k">var</span> e<span class="pl-k">=</span>a[c][d];e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">isColor</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">isMatrix3</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">isMatrix4</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">isVector2</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">isVector3</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">isVector4</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">isTexture</span>)<span class="pl-k">?</span>b[c][d]<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">clone</span>()<span class="pl-k">:</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(e)<span class="pl-k">?</span>b[c][d]<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">slice</span>()<span class="pl-k">:</span>b[c][d]<span class="pl-k">=</span>e}}<span class="pl-k">return</span> b}},Tg<span class="pl-k">=</span>{aliceblue<span class="pl-k">:</span><span class="pl-c1">15792383</span>,antiquewhite<span class="pl-k">:</span><span class="pl-c1">16444375</span>,aqua<span class="pl-k">:</span><span class="pl-c1">65535</span>,aquamarine<span class="pl-k">:</span><span class="pl-c1">8388564</span>,azure<span class="pl-k">:</span><span class="pl-c1">15794175</span>,beige<span class="pl-k">:</span><span class="pl-c1">16119260</span>,bisque<span class="pl-k">:</span><span class="pl-c1">16770244</span>,black<span class="pl-k">:</span><span class="pl-c1">0</span>,blanchedalmond<span class="pl-k">:</span><span class="pl-c1">16772045</span>,</td>
      </tr>
      <tr>
        <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="LC473" class="blob-code blob-code-inner js-file-line">blue<span class="pl-k">:</span><span class="pl-c1">255</span>,blueviolet<span class="pl-k">:</span><span class="pl-c1">9055202</span>,brown<span class="pl-k">:</span><span class="pl-c1">10824234</span>,burlywood<span class="pl-k">:</span><span class="pl-c1">14596231</span>,cadetblue<span class="pl-k">:</span><span class="pl-c1">6266528</span>,chartreuse<span class="pl-k">:</span><span class="pl-c1">8388352</span>,chocolate<span class="pl-k">:</span><span class="pl-c1">13789470</span>,coral<span class="pl-k">:</span><span class="pl-c1">16744272</span>,cornflowerblue<span class="pl-k">:</span><span class="pl-c1">6591981</span>,cornsilk<span class="pl-k">:</span><span class="pl-c1">16775388</span>,crimson<span class="pl-k">:</span><span class="pl-c1">14423100</span>,cyan<span class="pl-k">:</span><span class="pl-c1">65535</span>,darkblue<span class="pl-k">:</span><span class="pl-c1">139</span>,darkcyan<span class="pl-k">:</span><span class="pl-c1">35723</span>,darkgoldenrod<span class="pl-k">:</span><span class="pl-c1">12092939</span>,darkgray<span class="pl-k">:</span><span class="pl-c1">11119017</span>,darkgreen<span class="pl-k">:</span><span class="pl-c1">25600</span>,darkgrey<span class="pl-k">:</span><span class="pl-c1">11119017</span>,darkkhaki<span class="pl-k">:</span><span class="pl-c1">12433259</span>,darkmagenta<span class="pl-k">:</span><span class="pl-c1">9109643</span>,darkolivegreen<span class="pl-k">:</span><span class="pl-c1">5597999</span>,darkorange<span class="pl-k">:</span><span class="pl-c1">16747520</span>,darkorchid<span class="pl-k">:</span><span class="pl-c1">10040012</span>,darkred<span class="pl-k">:</span><span class="pl-c1">9109504</span>,darksalmon<span class="pl-k">:</span><span class="pl-c1">15308410</span>,darkseagreen<span class="pl-k">:</span><span class="pl-c1">9419919</span>,darkslateblue<span class="pl-k">:</span><span class="pl-c1">4734347</span>,darkslategray<span class="pl-k">:</span><span class="pl-c1">3100495</span>,</td>
      </tr>
      <tr>
        <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="LC474" class="blob-code blob-code-inner js-file-line">darkslategrey<span class="pl-k">:</span><span class="pl-c1">3100495</span>,darkturquoise<span class="pl-k">:</span><span class="pl-c1">52945</span>,darkviolet<span class="pl-k">:</span><span class="pl-c1">9699539</span>,deeppink<span class="pl-k">:</span><span class="pl-c1">16716947</span>,deepskyblue<span class="pl-k">:</span><span class="pl-c1">49151</span>,dimgray<span class="pl-k">:</span><span class="pl-c1">6908265</span>,dimgrey<span class="pl-k">:</span><span class="pl-c1">6908265</span>,dodgerblue<span class="pl-k">:</span><span class="pl-c1">2003199</span>,firebrick<span class="pl-k">:</span><span class="pl-c1">11674146</span>,floralwhite<span class="pl-k">:</span><span class="pl-c1">16775920</span>,forestgreen<span class="pl-k">:</span><span class="pl-c1">2263842</span>,fuchsia<span class="pl-k">:</span><span class="pl-c1">16711935</span>,gainsboro<span class="pl-k">:</span><span class="pl-c1">14474460</span>,ghostwhite<span class="pl-k">:</span><span class="pl-c1">16316671</span>,gold<span class="pl-k">:</span><span class="pl-c1">16766720</span>,goldenrod<span class="pl-k">:</span><span class="pl-c1">14329120</span>,gray<span class="pl-k">:</span><span class="pl-c1">8421504</span>,green<span class="pl-k">:</span><span class="pl-c1">32768</span>,greenyellow<span class="pl-k">:</span><span class="pl-c1">11403055</span>,grey<span class="pl-k">:</span><span class="pl-c1">8421504</span>,honeydew<span class="pl-k">:</span><span class="pl-c1">15794160</span>,hotpink<span class="pl-k">:</span><span class="pl-c1">16738740</span>,indianred<span class="pl-k">:</span><span class="pl-c1">13458524</span>,indigo<span class="pl-k">:</span><span class="pl-c1">4915330</span>,ivory<span class="pl-k">:</span><span class="pl-c1">16777200</span>,khaki<span class="pl-k">:</span><span class="pl-c1">15787660</span>,lavender<span class="pl-k">:</span><span class="pl-c1">15132410</span>,lavenderblush<span class="pl-k">:</span><span class="pl-c1">16773365</span>,lawngreen<span class="pl-k">:</span><span class="pl-c1">8190976</span>,</td>
      </tr>
      <tr>
        <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="LC475" class="blob-code blob-code-inner js-file-line">lemonchiffon<span class="pl-k">:</span><span class="pl-c1">16775885</span>,lightblue<span class="pl-k">:</span><span class="pl-c1">11393254</span>,lightcoral<span class="pl-k">:</span><span class="pl-c1">15761536</span>,lightcyan<span class="pl-k">:</span><span class="pl-c1">14745599</span>,lightgoldenrodyellow<span class="pl-k">:</span><span class="pl-c1">16448210</span>,lightgray<span class="pl-k">:</span><span class="pl-c1">13882323</span>,lightgreen<span class="pl-k">:</span><span class="pl-c1">9498256</span>,lightgrey<span class="pl-k">:</span><span class="pl-c1">13882323</span>,lightpink<span class="pl-k">:</span><span class="pl-c1">16758465</span>,lightsalmon<span class="pl-k">:</span><span class="pl-c1">16752762</span>,lightseagreen<span class="pl-k">:</span><span class="pl-c1">2142890</span>,lightskyblue<span class="pl-k">:</span><span class="pl-c1">8900346</span>,lightslategray<span class="pl-k">:</span><span class="pl-c1">7833753</span>,lightslategrey<span class="pl-k">:</span><span class="pl-c1">7833753</span>,lightsteelblue<span class="pl-k">:</span><span class="pl-c1">11584734</span>,lightyellow<span class="pl-k">:</span><span class="pl-c1">16777184</span>,lime<span class="pl-k">:</span><span class="pl-c1">65280</span>,limegreen<span class="pl-k">:</span><span class="pl-c1">3329330</span>,linen<span class="pl-k">:</span><span class="pl-c1">16445670</span>,magenta<span class="pl-k">:</span><span class="pl-c1">16711935</span>,maroon<span class="pl-k">:</span><span class="pl-c1">8388608</span>,mediumaquamarine<span class="pl-k">:</span><span class="pl-c1">6737322</span>,mediumblue<span class="pl-k">:</span><span class="pl-c1">205</span>,mediumorchid<span class="pl-k">:</span><span class="pl-c1">12211667</span>,mediumpurple<span class="pl-k">:</span><span class="pl-c1">9662683</span>,mediumseagreen<span class="pl-k">:</span><span class="pl-c1">3978097</span>,</td>
      </tr>
      <tr>
        <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="LC476" class="blob-code blob-code-inner js-file-line">mediumslateblue<span class="pl-k">:</span><span class="pl-c1">8087790</span>,mediumspringgreen<span class="pl-k">:</span><span class="pl-c1">64154</span>,mediumturquoise<span class="pl-k">:</span><span class="pl-c1">4772300</span>,mediumvioletred<span class="pl-k">:</span><span class="pl-c1">13047173</span>,midnightblue<span class="pl-k">:</span><span class="pl-c1">1644912</span>,mintcream<span class="pl-k">:</span><span class="pl-c1">16121850</span>,mistyrose<span class="pl-k">:</span><span class="pl-c1">16770273</span>,moccasin<span class="pl-k">:</span><span class="pl-c1">16770229</span>,navajowhite<span class="pl-k">:</span><span class="pl-c1">16768685</span>,navy<span class="pl-k">:</span><span class="pl-c1">128</span>,oldlace<span class="pl-k">:</span><span class="pl-c1">16643558</span>,olive<span class="pl-k">:</span><span class="pl-c1">8421376</span>,olivedrab<span class="pl-k">:</span><span class="pl-c1">7048739</span>,orange<span class="pl-k">:</span><span class="pl-c1">16753920</span>,orangered<span class="pl-k">:</span><span class="pl-c1">16729344</span>,orchid<span class="pl-k">:</span><span class="pl-c1">14315734</span>,palegoldenrod<span class="pl-k">:</span><span class="pl-c1">15657130</span>,palegreen<span class="pl-k">:</span><span class="pl-c1">10025880</span>,paleturquoise<span class="pl-k">:</span><span class="pl-c1">11529966</span>,palevioletred<span class="pl-k">:</span><span class="pl-c1">14381203</span>,papayawhip<span class="pl-k">:</span><span class="pl-c1">16773077</span>,peachpuff<span class="pl-k">:</span><span class="pl-c1">16767673</span>,peru<span class="pl-k">:</span><span class="pl-c1">13468991</span>,pink<span class="pl-k">:</span><span class="pl-c1">16761035</span>,plum<span class="pl-k">:</span><span class="pl-c1">14524637</span>,powderblue<span class="pl-k">:</span><span class="pl-c1">11591910</span>,purple<span class="pl-k">:</span><span class="pl-c1">8388736</span>,</td>
      </tr>
      <tr>
        <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="LC477" class="blob-code blob-code-inner js-file-line">rebeccapurple<span class="pl-k">:</span><span class="pl-c1">6697881</span>,red<span class="pl-k">:</span><span class="pl-c1">16711680</span>,rosybrown<span class="pl-k">:</span><span class="pl-c1">12357519</span>,royalblue<span class="pl-k">:</span><span class="pl-c1">4286945</span>,saddlebrown<span class="pl-k">:</span><span class="pl-c1">9127187</span>,salmon<span class="pl-k">:</span><span class="pl-c1">16416882</span>,sandybrown<span class="pl-k">:</span><span class="pl-c1">16032864</span>,seagreen<span class="pl-k">:</span><span class="pl-c1">3050327</span>,seashell<span class="pl-k">:</span><span class="pl-c1">16774638</span>,sienna<span class="pl-k">:</span><span class="pl-c1">10506797</span>,silver<span class="pl-k">:</span><span class="pl-c1">12632256</span>,skyblue<span class="pl-k">:</span><span class="pl-c1">8900331</span>,slateblue<span class="pl-k">:</span><span class="pl-c1">6970061</span>,slategray<span class="pl-k">:</span><span class="pl-c1">7372944</span>,slategrey<span class="pl-k">:</span><span class="pl-c1">7372944</span>,snow<span class="pl-k">:</span><span class="pl-c1">16775930</span>,springgreen<span class="pl-k">:</span><span class="pl-c1">65407</span>,steelblue<span class="pl-k">:</span><span class="pl-c1">4620980</span>,tan<span class="pl-k">:</span><span class="pl-c1">13808780</span>,teal<span class="pl-k">:</span><span class="pl-c1">32896</span>,thistle<span class="pl-k">:</span><span class="pl-c1">14204888</span>,tomato<span class="pl-k">:</span><span class="pl-c1">16737095</span>,turquoise<span class="pl-k">:</span><span class="pl-c1">4251856</span>,violet<span class="pl-k">:</span><span class="pl-c1">15631086</span>,wheat<span class="pl-k">:</span><span class="pl-c1">16113331</span>,white<span class="pl-k">:</span><span class="pl-c1">16777215</span>,whitesmoke<span class="pl-k">:</span><span class="pl-c1">16119285</span>,yellow<span class="pl-k">:</span><span class="pl-c1">16776960</span>,yellowgreen<span class="pl-k">:</span><span class="pl-c1">10145074</span>};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">G</span>.<span class="pl-c1">prototype</span>,</td>
      </tr>
      <tr>
        <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="LC478" class="blob-code blob-code-inner js-file-line">{isColor<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,r<span class="pl-k">:</span><span class="pl-c1">1</span>,g<span class="pl-k">:</span><span class="pl-c1">1</span>,b<span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">isColor</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">copy</span>(a)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">setHex</span>(a)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">setStyle</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setHex</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span>(a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>;<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span>(a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span>(a<span class="pl-k">&amp;</span><span class="pl-c1">255</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setRGB</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setHSL</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">+=</span><span class="pl-c1">1</span>);<span class="pl-c1">1</span><span class="pl-k">&lt;</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-k">--</span>d;<span class="pl-k">return</span> d<span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">6</span><span class="pl-k">?</span>a<span class="pl-k">+</span><span class="pl-c1">6</span><span class="pl-k">*</span>(c<span class="pl-k">-</span>a)<span class="pl-k">*</span>d<span class="pl-k">:</span><span class="pl-c1">.5</span><span class="pl-k">&gt;</span>d<span class="pl-k">?</span>c<span class="pl-k">:</span>d<span class="pl-k">&lt;</span><span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">?</span>a<span class="pl-k">+</span><span class="pl-c1">6</span><span class="pl-k">*</span>(c<span class="pl-k">-</span>a)<span class="pl-k">*</span>(<span class="pl-c1">2</span><span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">-</span>d)<span class="pl-k">:</span>a}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="LC479" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>,<span class="pl-smi">d</span>){b<span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">euclideanModulo</span>(b,<span class="pl-c1">1</span>);c<span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">clamp</span>(c,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);d<span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">clamp</span>(d,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span>d<span class="pl-k">:</span>(c<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">&gt;=</span>d<span class="pl-k">?</span>d<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>c)<span class="pl-k">:</span>d<span class="pl-k">+</span>c<span class="pl-k">-</span>d<span class="pl-k">*</span>c,d<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">-</span>c,<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-en">a</span>(d,c,b<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>),<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-en">a</span>(d,c,b),<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-en">a</span>(d,c,b<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">setStyle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span><span class="pl-c1">parseFloat</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Color: Alpha component of <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> will be ignored.<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">var</span> c;<span class="pl-k">if</span>(c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>((?:rgb<span class="pl-k">|</span>hsl)a<span class="pl-k">?</span>)<span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\)</span>]</span><span class="pl-k">*</span>)<span class="pl-cce">\)</span><span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(a)){<span class="pl-k">var</span> d<span class="pl-k">=</span>c[<span class="pl-c1">2</span>];<span class="pl-k">switch</span>(c[<span class="pl-c1">1</span>]){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgb<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgba<span class="pl-pds">&quot;</span></span>:<span class="pl-k">if</span>(c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>(,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">*</span><span class="pl-cce">\.</span><span class="pl-k">?</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>)<span class="pl-k">?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(d))<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="LC480" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">255</span>,<span class="pl-c1">parseInt</span>(c[<span class="pl-c1">1</span>],<span class="pl-c1">10</span>))<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">255</span>,<span class="pl-c1">parseInt</span>(c[<span class="pl-c1">2</span>],<span class="pl-c1">10</span>))<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">255</span>,<span class="pl-c1">parseInt</span>(c[<span class="pl-c1">3</span>],<span class="pl-c1">10</span>))<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-en">b</span>(c[<span class="pl-c1">5</span>]),<span class="pl-c1">this</span>;<span class="pl-k">if</span>(c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)%<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)%<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)%<span class="pl-c1">\s</span><span class="pl-k">*</span>(,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">*</span><span class="pl-cce">\.</span><span class="pl-k">?</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>)<span class="pl-k">?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(d))<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">100</span>,<span class="pl-c1">parseInt</span>(c[<span class="pl-c1">1</span>],<span class="pl-c1">10</span>))<span class="pl-k">/</span><span class="pl-c1">100</span>,<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">100</span>,<span class="pl-c1">parseInt</span>(c[<span class="pl-c1">2</span>],<span class="pl-c1">10</span>))<span class="pl-k">/</span><span class="pl-c1">100</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">100</span>,<span class="pl-c1">parseInt</span>(c[<span class="pl-c1">3</span>],<span class="pl-c1">10</span>))<span class="pl-k">/</span><span class="pl-c1">100</span>,<span class="pl-en">b</span>(c[<span class="pl-c1">5</span>]),<span class="pl-c1">this</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>hsl<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>hsla<span class="pl-pds">&quot;</span></span>:<span class="pl-k">if</span>(c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">*</span><span class="pl-cce">\.</span><span class="pl-k">?</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)%<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)%<span class="pl-c1">\s</span><span class="pl-k">*</span>(,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">*</span><span class="pl-cce">\.</span><span class="pl-k">?</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>)<span class="pl-k">?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(d)){d<span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(c[<span class="pl-c1">1</span>])<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="LC481" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">360</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(c[<span class="pl-c1">2</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">100</span>,f<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(c[<span class="pl-c1">3</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">100</span>;<span class="pl-en">b</span>(c[<span class="pl-c1">5</span>]);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">setHSL</span>(d,e,f)}}}<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>#(<span class="pl-c1">[<span class="pl-c1">A-Fa-f0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(a)){c<span class="pl-k">=</span>c[<span class="pl-c1">1</span>];d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-c1">3</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>),<span class="pl-c1">16</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">1</span>),<span class="pl-c1">16</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">2</span>),<span class="pl-c1">16</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-c1">this</span>;<span class="pl-k">if</span>(<span class="pl-c1">6</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">1</span>),<span class="pl-c1">16</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">3</span>),<span class="pl-c1">16</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">4</span>)<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">5</span>),<span class="pl-c1">16</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-c1">this</span>}a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>Tg[a],</td>
      </tr>
      <tr>
        <td id="L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="LC482" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">setHex</span>(c)<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Color: Unknown color <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a));<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">r</span>,<span class="pl-c1">this</span>.<span class="pl-smi">g</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>;<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">g</span>;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copyGammaToLinear</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">2</span>);<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-smi">a</span>.<span class="pl-smi">r</span>,b);<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-smi">a</span>.<span class="pl-smi">g</span>,b);<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-smi">a</span>.<span class="pl-smi">b</span>,b);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copyLinearToGamma</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">2</span>);b<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>b<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">/</span>b<span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-smi">a</span>.<span class="pl-smi">r</span>,b);<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-smi">a</span>.<span class="pl-smi">g</span>,b);<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-smi">a</span>.<span class="pl-smi">b</span>,b);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">convertGammaToLinear</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">copyGammaToLinear</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="LC483" class="blob-code blob-code-inner js-file-line">a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">convertLinearToGamma</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">copyLinearToGamma</span>(<span class="pl-c1">this</span>,a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copySRGBToLinear</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>.<span class="pl-ii">04045</span><span class="pl-k">&gt;</span>a<span class="pl-k">?</span><span class="pl-c1">.0773993808</span><span class="pl-k">*</span>a<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">.9478672986</span><span class="pl-k">*</span>a<span class="pl-k">+</span><span class="pl-c1">.0521327014</span>,<span class="pl-c1">2.4</span>)}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-smi">r</span>);<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-smi">g</span>);<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-smi">b</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">copyLinearToSRGB</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>.<span class="pl-ii">0031308</span><span class="pl-k">&gt;</span>a<span class="pl-k">?</span><span class="pl-c1">12.92</span><span class="pl-k">*</span>a<span class="pl-k">:</span><span class="pl-c1">1.055</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(a,<span class="pl-c1">.41666</span>)<span class="pl-k">-</span><span class="pl-c1">.055</span>}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-smi">r</span>);<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-smi">g</span>);<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-smi">b</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">convertSRGBToLinear</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">copySRGBToLinear</span>(<span class="pl-c1">this</span>);</td>
      </tr>
      <tr>
        <td id="L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="LC484" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">convertLinearToSRGB</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">copyLinearToSRGB</span>(<span class="pl-c1">this</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getHex</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">255</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">16</span><span class="pl-k">^</span><span class="pl-c1">255</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">^</span><span class="pl-c1">255</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">0</span>},<span class="pl-en">getHexString</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>000000<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-en">getHex</span>().<span class="pl-c1">toString</span>(<span class="pl-c1">16</span>)).<span class="pl-c1">slice</span>(<span class="pl-k">-</span><span class="pl-c1">6</span>)},<span class="pl-en">getHSL</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Color: .getHSL() target is now required<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span>{h<span class="pl-k">:</span><span class="pl-c1">0</span>,s<span class="pl-k">:</span><span class="pl-c1">0</span>,l<span class="pl-k">:</span><span class="pl-c1">0</span>});<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">r</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">g</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">b</span>,e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(b,c,d),f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(b,c,d),g,h<span class="pl-k">=</span>(f<span class="pl-k">+</span>e)<span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-k">if</span>(f<span class="pl-k">===</span>e)f<span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> l<span class="pl-k">=</span>e<span class="pl-k">-</span>f;f<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">&gt;=</span>h<span class="pl-k">?</span>l<span class="pl-k">/</span>(e<span class="pl-k">+</span>f)<span class="pl-k">:</span>l<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">-</span>e<span class="pl-k">-</span>f);<span class="pl-k">switch</span>(e){<span class="pl-k">case</span> b:g<span class="pl-k">=</span>(c<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="LC485" class="blob-code blob-code-inner js-file-line">d)<span class="pl-k">/</span>l<span class="pl-k">+</span>(c<span class="pl-k">&lt;</span>d<span class="pl-k">?</span><span class="pl-c1">6</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> c:g<span class="pl-k">=</span>(d<span class="pl-k">-</span>b)<span class="pl-k">/</span>l<span class="pl-k">+</span><span class="pl-c1">2</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> d:g<span class="pl-k">=</span>(b<span class="pl-k">-</span>c)<span class="pl-k">/</span>l<span class="pl-k">+</span><span class="pl-c1">4</span>}g<span class="pl-k">/=</span><span class="pl-c1">6</span>}<span class="pl-smi">a</span>.<span class="pl-smi">h</span><span class="pl-k">=</span>g;<span class="pl-smi">a</span>.<span class="pl-smi">s</span><span class="pl-k">=</span>f;<span class="pl-smi">a</span>.<span class="pl-smi">l</span><span class="pl-k">=</span>h;<span class="pl-k">return</span> a},<span class="pl-en">getStyle</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgb(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-c1">255</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">|</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-c1">255</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">|</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-c1">255</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">|</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>},<span class="pl-en">offsetHSL</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{};<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-en">getHSL</span>(a);<span class="pl-smi">a</span>.<span class="pl-smi">h</span><span class="pl-k">+=</span>b;<span class="pl-smi">a</span>.<span class="pl-smi">s</span><span class="pl-k">+=</span>c;<span class="pl-smi">a</span>.<span class="pl-smi">l</span><span class="pl-k">+=</span>d;<span class="pl-c1">this</span>.<span class="pl-en">setHSL</span>(<span class="pl-smi">a</span>.<span class="pl-smi">h</span>,<span class="pl-smi">a</span>.<span class="pl-smi">s</span>,<span class="pl-smi">a</span>.<span class="pl-smi">l</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>;<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">g</span>;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addColors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">r</span>;<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">g</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">g</span>;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">b</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">+=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="LC486" class="blob-code blob-code-inner js-file-line">a;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">+=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">sub</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>);<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">g</span>);<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">multiply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-smi">r</span>;<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-smi">g</span>;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">multiplyScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">*=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">*=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">*=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">lerp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">r</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">r</span>)<span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">g</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">g</span>)<span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">+=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">b</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">b</span>)<span class="pl-k">*</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">r</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">g</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">b</span>},<span class="pl-en">fromArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="LC487" class="blob-code blob-code-inner js-file-line">a[b];<span class="pl-c1">this</span>.<span class="pl-smi">g</span><span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span>a[b<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>[]);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);a[b]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">r</span>;a[b<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">g</span>;a[b<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">b</span>;<span class="pl-k">return</span> a},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getHex</span>()}});<span class="pl-k">var</span> <span class="pl-c1">K</span><span class="pl-k">=</span>{common<span class="pl-k">:</span>{diffuse<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">15658734</span>)},opacity<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>},map<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>},uvTransform<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">la</span>},alphaMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>}},specularmap<span class="pl-k">:</span>{specularMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>}},envmap<span class="pl-k">:</span>{envMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>},flipEnvMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>},reflectivity<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>},refractionRatio<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">.98</span>},maxMipLevel<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">0</span>}},aomap<span class="pl-k">:</span>{aoMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>},</td>
      </tr>
      <tr>
        <td id="L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="LC488" class="blob-code blob-code-inner js-file-line">aoMapIntensity<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>}},lightmap<span class="pl-k">:</span>{lightMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>},lightMapIntensity<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>}},emissivemap<span class="pl-k">:</span>{emissiveMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>}},bumpmap<span class="pl-k">:</span>{bumpMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>},bumpScale<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>}},normalmap<span class="pl-k">:</span>{normalMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>},normalScale<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">B</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>)}},displacementmap<span class="pl-k">:</span>{displacementMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>},displacementScale<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>},displacementBias<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">0</span>}},roughnessmap<span class="pl-k">:</span>{roughnessMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>}},metalnessmap<span class="pl-k">:</span>{metalnessMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>}},gradientmap<span class="pl-k">:</span>{gradientMap<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>}},fog<span class="pl-k">:</span>{fogDensity<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">2.5E-4</span>},fogNear<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>},</td>
      </tr>
      <tr>
        <td id="L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="LC489" class="blob-code blob-code-inner js-file-line">fogFar<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">2E3</span>},fogColor<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">16777215</span>)}},lights<span class="pl-k">:</span>{ambientLightColor<span class="pl-k">:</span>{value<span class="pl-k">:</span>[]},directionalLights<span class="pl-k">:</span>{value<span class="pl-k">:</span>[],properties<span class="pl-k">:</span>{direction<span class="pl-k">:</span>{},color<span class="pl-k">:</span>{},shadow<span class="pl-k">:</span>{},shadowBias<span class="pl-k">:</span>{},shadowRadius<span class="pl-k">:</span>{},shadowMapSize<span class="pl-k">:</span>{}}},directionalShadowMap<span class="pl-k">:</span>{value<span class="pl-k">:</span>[]},directionalShadowMatrix<span class="pl-k">:</span>{value<span class="pl-k">:</span>[]},spotLights<span class="pl-k">:</span>{value<span class="pl-k">:</span>[],properties<span class="pl-k">:</span>{color<span class="pl-k">:</span>{},position<span class="pl-k">:</span>{},direction<span class="pl-k">:</span>{},distance<span class="pl-k">:</span>{},coneCos<span class="pl-k">:</span>{},penumbraCos<span class="pl-k">:</span>{},decay<span class="pl-k">:</span>{},shadow<span class="pl-k">:</span>{},shadowBias<span class="pl-k">:</span>{},shadowRadius<span class="pl-k">:</span>{},shadowMapSize<span class="pl-k">:</span>{}}},spotShadowMap<span class="pl-k">:</span>{value<span class="pl-k">:</span>[]},spotShadowMatrix<span class="pl-k">:</span>{value<span class="pl-k">:</span>[]},</td>
      </tr>
      <tr>
        <td id="L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="LC490" class="blob-code blob-code-inner js-file-line">pointLights<span class="pl-k">:</span>{value<span class="pl-k">:</span>[],properties<span class="pl-k">:</span>{color<span class="pl-k">:</span>{},position<span class="pl-k">:</span>{},decay<span class="pl-k">:</span>{},distance<span class="pl-k">:</span>{},shadow<span class="pl-k">:</span>{},shadowBias<span class="pl-k">:</span>{},shadowRadius<span class="pl-k">:</span>{},shadowMapSize<span class="pl-k">:</span>{},shadowCameraNear<span class="pl-k">:</span>{},shadowCameraFar<span class="pl-k">:</span>{}}},pointShadowMap<span class="pl-k">:</span>{value<span class="pl-k">:</span>[]},pointShadowMatrix<span class="pl-k">:</span>{value<span class="pl-k">:</span>[]},hemisphereLights<span class="pl-k">:</span>{value<span class="pl-k">:</span>[],properties<span class="pl-k">:</span>{direction<span class="pl-k">:</span>{},skyColor<span class="pl-k">:</span>{},groundColor<span class="pl-k">:</span>{}}},rectAreaLights<span class="pl-k">:</span>{value<span class="pl-k">:</span>[],properties<span class="pl-k">:</span>{color<span class="pl-k">:</span>{},position<span class="pl-k">:</span>{},width<span class="pl-k">:</span>{},height<span class="pl-k">:</span>{}}}},points<span class="pl-k">:</span>{diffuse<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">15658734</span>)},opacity<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>},size<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>},scale<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>},map<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>},uvTransform<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">la</span>}}},</td>
      </tr>
      <tr>
        <td id="L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="LC491" class="blob-code blob-code-inner js-file-line">tb<span class="pl-k">=</span>{basic<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">merge</span>([<span class="pl-c1">K</span>.<span class="pl-smi">common</span>,<span class="pl-c1">K</span>.<span class="pl-smi">specularmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">envmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">aomap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">lightmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">fog</span>]),vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">meshbasic_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">meshbasic_frag</span>},lambert<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">merge</span>([<span class="pl-c1">K</span>.<span class="pl-smi">common</span>,<span class="pl-c1">K</span>.<span class="pl-smi">specularmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">envmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">aomap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">lightmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">emissivemap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">fog</span>,<span class="pl-c1">K</span>.<span class="pl-smi">lights</span>,{emissive<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">0</span>)}}]),vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">meshlambert_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">meshlambert_frag</span>},phong<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">merge</span>([<span class="pl-c1">K</span>.<span class="pl-smi">common</span>,<span class="pl-c1">K</span>.<span class="pl-smi">specularmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">envmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">aomap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">lightmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">emissivemap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">bumpmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">normalmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">displacementmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">gradientmap</span>,</td>
      </tr>
      <tr>
        <td id="L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="LC492" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">K</span>.<span class="pl-smi">fog</span>,<span class="pl-c1">K</span>.<span class="pl-smi">lights</span>,{emissive<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">0</span>)},specular<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">1118481</span>)},shininess<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">30</span>}}]),vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">meshphong_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">meshphong_frag</span>},standard<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">merge</span>([<span class="pl-c1">K</span>.<span class="pl-smi">common</span>,<span class="pl-c1">K</span>.<span class="pl-smi">envmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">aomap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">lightmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">emissivemap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">bumpmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">normalmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">displacementmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">roughnessmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">metalnessmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">fog</span>,<span class="pl-c1">K</span>.<span class="pl-smi">lights</span>,{emissive<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">0</span>)},roughness<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">.5</span>},metalness<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">.5</span>},envMapIntensity<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>}}]),vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">meshphysical_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">meshphysical_frag</span>},points<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">merge</span>([<span class="pl-c1">K</span>.<span class="pl-smi">points</span>,</td>
      </tr>
      <tr>
        <td id="L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="LC493" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">K</span>.<span class="pl-smi">fog</span>]),vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">points_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">points_frag</span>},dashed<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">merge</span>([<span class="pl-c1">K</span>.<span class="pl-smi">common</span>,<span class="pl-c1">K</span>.<span class="pl-smi">fog</span>,{scale<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>},dashSize<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>},totalSize<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">2</span>}}]),vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">linedashed_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">linedashed_frag</span>},depth<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">merge</span>([<span class="pl-c1">K</span>.<span class="pl-smi">common</span>,<span class="pl-c1">K</span>.<span class="pl-smi">displacementmap</span>]),vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">depth_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">depth_frag</span>},normal<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">merge</span>([<span class="pl-c1">K</span>.<span class="pl-smi">common</span>,<span class="pl-c1">K</span>.<span class="pl-smi">bumpmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">normalmap</span>,<span class="pl-c1">K</span>.<span class="pl-smi">displacementmap</span>,{opacity<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>}}]),vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">normal_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">normal_frag</span>},cube<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span>{tCube<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>},</td>
      </tr>
      <tr>
        <td id="L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="LC494" class="blob-code blob-code-inner js-file-line">tFlip<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>},opacity<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>}},vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">cube_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">cube_frag</span>},equirect<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span>{tEquirect<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">null</span>}},vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">equirect_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">equirect_frag</span>},distanceRGBA<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">merge</span>([<span class="pl-c1">K</span>.<span class="pl-smi">common</span>,<span class="pl-c1">K</span>.<span class="pl-smi">displacementmap</span>,{referencePosition<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>},nearDistance<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>},farDistance<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1E3</span>}}]),vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">distanceRGBA_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">distanceRGBA_frag</span>},shadow<span class="pl-k">:</span>{uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">merge</span>([<span class="pl-c1">K</span>.<span class="pl-smi">lights</span>,<span class="pl-c1">K</span>.<span class="pl-smi">fog</span>,{color<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">G</span>(<span class="pl-c1">0</span>)},opacity<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">1</span>}}]),vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">shadow_vert</span>,</td>
      </tr>
      <tr>
        <td id="L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="LC495" class="blob-code blob-code-inner js-file-line">fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">shadow_frag</span>}};<span class="pl-smi">tb</span>.<span class="pl-smi">physical</span><span class="pl-k">=</span>{uniforms<span class="pl-k">:</span><span class="pl-smi">Ba</span>.<span class="pl-en">merge</span>([<span class="pl-smi">tb</span>.<span class="pl-smi">standard</span>.<span class="pl-smi">uniforms</span>,{clearCoat<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">0</span>},clearCoatRoughness<span class="pl-k">:</span>{value<span class="pl-k">:</span><span class="pl-c1">0</span>}}]),vertexShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">meshphysical_vert</span>,fragmentShader<span class="pl-k">:</span><span class="pl-c1">S</span>.<span class="pl-smi">meshphysical_frag</span>};<span class="pl-smi">mb</span>.<span class="pl-smi">RotationOrders</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>XYZ YZX ZXY XZY YXZ ZYX<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);<span class="pl-smi">mb</span>.<span class="pl-smi">DefaultOrder</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>XYZ<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">mb</span>.<span class="pl-c1">prototype</span>,{x<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_x</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>()}},y<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_y</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>()}},z<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_z</span>},</td>
      </tr>
      <tr>
        <td id="L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="LC496" class="blob-code blob-code-inner js-file-line"><span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>()}},order<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_order</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_order</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>()}}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">mb</span>.<span class="pl-c1">prototype</span>,{isEuler<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">_order</span><span class="pl-k">=</span>d<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">_order</span>;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_order</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_x</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_y</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_z</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_order</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_order</span>;<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="LC497" class="blob-code blob-code-inner js-file-line"><span class="pl-en">setFromRotationMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-smi">clamp</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">elements</span>;a<span class="pl-k">=</span>e[<span class="pl-c1">0</span>];<span class="pl-k">var</span> f<span class="pl-k">=</span>e[<span class="pl-c1">4</span>],g<span class="pl-k">=</span>e[<span class="pl-c1">8</span>],h<span class="pl-k">=</span>e[<span class="pl-c1">1</span>],l<span class="pl-k">=</span>e[<span class="pl-c1">5</span>],m<span class="pl-k">=</span>e[<span class="pl-c1">9</span>],k<span class="pl-k">=</span>e[<span class="pl-c1">2</span>],n<span class="pl-k">=</span>e[<span class="pl-c1">6</span>];e<span class="pl-k">=</span>e[<span class="pl-c1">10</span>];b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">_order</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>XYZ<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-en">d</span>(g,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)),<span class="pl-c1">.99999</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(g)<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-k">-</span>m,e),<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-k">-</span>f,a))<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(n,l),<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">0</span>))<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>YXZ<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-k">-</span><span class="pl-en">d</span>(m,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)),<span class="pl-c1">.99999</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(m)<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(g,e),<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(h,l))<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-k">-</span>k,a),<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">0</span>))<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ZXY<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-en">d</span>(n,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)),<span class="pl-c1">.99999</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(n)<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="LC498" class="blob-code blob-code-inner js-file-line">(<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-k">-</span>k,e),<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-k">-</span>f,l))<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(h,a)))<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ZYX<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-k">-</span><span class="pl-en">d</span>(k,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)),<span class="pl-c1">.99999</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(k)<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(n,e),<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(h,a))<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-k">-</span>f,l)))<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>YZX<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-en">d</span>(h,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)),<span class="pl-c1">.99999</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(h)<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-k">-</span>m,l),<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-k">-</span>k,a))<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(g,e)))<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>XZY<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-k">-</span><span class="pl-en">d</span>(f,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)),<span class="pl-c1">.99999</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(f)<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(n,l),<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(g,a))<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="LC499" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-k">-</span>m,e),<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span><span class="pl-c1">0</span>))<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Euler: .setFromRotationMatrix() given unsupported order: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b);<span class="pl-c1">this</span>.<span class="pl-smi">_order</span><span class="pl-k">=</span>b;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span>c)<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromQuaternion</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-en">makeRotationFromQuaternion</span>(b);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">setFromRotationMatrix</span>(a,c,d)}}(),<span class="pl-en">setFromVector3</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">set</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>,b<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">_order</span>)},<span class="pl-en">reorder</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">setFromEuler</span>(<span class="pl-c1">this</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">setFromQuaternion</span>(a,b)}}(),<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">_x</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="LC500" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">_y</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">_z</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">_order</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">_order</span>},<span class="pl-en">fromArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_x</span><span class="pl-k">=</span>a[<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-smi">_y</span><span class="pl-k">=</span>a[<span class="pl-c1">1</span>];<span class="pl-c1">this</span>.<span class="pl-smi">_z</span><span class="pl-k">=</span>a[<span class="pl-c1">2</span>];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a[<span class="pl-c1">3</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_order</span><span class="pl-k">=</span>a[<span class="pl-c1">3</span>]);<span class="pl-c1">this</span>.<span class="pl-en">onChangeCallback</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>[]);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);a[b]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_x</span>;a[b<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_y</span>;a[b<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_z</span>;a[b<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_order</span>;<span class="pl-k">return</span> a},<span class="pl-en">toVector3</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span>)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_z</span>)},<span class="pl-en">onChange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">onChangeCallback</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">onChangeCallback</span><span class="pl-k">:</span><span class="pl-k">function</span>(){}});</td>
      </tr>
      <tr>
        <td id="L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="LC501" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Wd</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">mask</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>a<span class="pl-k">|</span><span class="pl-c1">0</span>},<span class="pl-en">enable</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">mask</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mask</span><span class="pl-k">|</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>a<span class="pl-k">|</span><span class="pl-c1">0</span>},<span class="pl-en">toggle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">mask</span><span class="pl-k">^=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>a<span class="pl-k">|</span><span class="pl-c1">0</span>},<span class="pl-en">disable</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">mask</span><span class="pl-k">&amp;=</span><span class="pl-k">~</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>a<span class="pl-k">|</span><span class="pl-c1">0</span>)},<span class="pl-en">test</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>(<span class="pl-c1">this</span>.<span class="pl-smi">mask</span><span class="pl-k">&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">mask</span>)}});<span class="pl-k">var</span> Hf<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">H</span>.<span class="pl-smi">DefaultUp</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>);<span class="pl-c1">H</span>.<span class="pl-smi">DefaultMatrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">za</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:H,isObject3D:!0,onBeforeRender:<span class="pl-k">function</span>(){},<span class="pl-en">onAfterRender</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},<span class="pl-en">applyMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">multiplyMatrices</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span>);</td>
      </tr>
      <tr>
        <td id="L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="LC502" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">decompose</span>(<span class="pl-c1">this</span>.<span class="pl-smi">position</span>,<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>,<span class="pl-c1">this</span>.<span class="pl-smi">scale</span>)},<span class="pl-en">applyQuaternion</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">premultiply</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setRotationFromAxisAngle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">setFromAxisAngle</span>(a,b)},<span class="pl-en">setRotationFromEuler</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">setFromEuler</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">setRotationFromMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">setFromRotationMatrix</span>(a)},<span class="pl-en">setRotationFromQuaternion</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">copy</span>(a)},<span class="pl-en">rotateOnAxis</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">setFromAxisAngle</span>(b,</td>
      </tr>
      <tr>
        <td id="L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="LC503" class="blob-code blob-code-inner js-file-line">c);<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">multiply</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">rotateOnWorldAxis</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">setFromAxisAngle</span>(b,c);<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">premultiply</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">rotateX</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">rotateOnAxis</span>(a,b)}}(),<span class="pl-en">rotateY</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">rotateOnAxis</span>(a,b)}}(),<span class="pl-en">rotateZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">rotateOnAxis</span>(a,b)}}(),<span class="pl-en">translateOnAxis</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="LC504" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(b).<span class="pl-en">applyQuaternion</span>(<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>);<span class="pl-c1">this</span>.<span class="pl-smi">position</span>.<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-en">multiplyScalar</span>(c));<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">translateX</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">translateOnAxis</span>(a,b)}}(),<span class="pl-en">translateY</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">translateOnAxis</span>(a,b)}}(),<span class="pl-en">translateZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">translateOnAxis</span>(a,b)}}(),<span class="pl-en">localToWorld</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>)},<span class="pl-en">worldToLocal</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-smi">a</span>.<span class="pl-en">getInverse</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>))}}(),</td>
      </tr>
      <tr>
        <td id="L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="LC505" class="blob-code blob-code-inner js-file-line"><span class="pl-en">lookAt</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-smi">c</span>.<span class="pl-smi">isVector3</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">copy</span>(c)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">set</span>(c,d,e);<span class="pl-c1">this</span>.<span class="pl-smi">isCamera</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">lookAt</span>(<span class="pl-c1">this</span>.<span class="pl-smi">position</span>,b,<span class="pl-c1">this</span>.<span class="pl-smi">up</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">lookAt</span>(b,<span class="pl-c1">this</span>.<span class="pl-smi">position</span>,<span class="pl-c1">this</span>.<span class="pl-smi">up</span>);<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">setFromRotationMatrix</span>(a)}}(),<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(<span class="pl-c1">arguments</span>[b]);<span class="pl-k">return</span> <span class="pl-c1">this</span>}<span class="pl-k">if</span>(a<span class="pl-k">===</span><span class="pl-c1">this</span>)<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D.add: object can&#39;t be added as a child of itself.<span class="pl-pds">&quot;</span></span>,a),<span class="pl-c1">this</span>;a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">isObject3D</span><span class="pl-k">?</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">parent</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">parent</span>.<span class="pl-c1">remove</span>(a),<span class="pl-smi">a</span>.<span class="pl-c1">parent</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="LC506" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>,<span class="pl-smi">a</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>added<span class="pl-pds">&quot;</span></span>}),<span class="pl-c1">this</span>.<span class="pl-smi">children</span>.<span class="pl-c1">push</span>(a))<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D.add: object not an instance of THREE.Object3D.<span class="pl-pds">&quot;</span></span>,a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-c1">remove</span>(<span class="pl-c1">arguments</span>[b]);<span class="pl-k">return</span> <span class="pl-c1">this</span>}b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>.<span class="pl-c1">indexOf</span>(a);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">parent</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-smi">a</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>removed<span class="pl-pds">&quot;</span></span>}),<span class="pl-c1">this</span>.<span class="pl-smi">children</span>.<span class="pl-c1">splice</span>(b,<span class="pl-c1">1</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getObjectById</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getObjectByProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,a)},<span class="pl-en">getObjectByName</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getObjectByProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="LC507" class="blob-code blob-code-inner js-file-line">a)},<span class="pl-en">getObjectByProperty</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>[a]<span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-c1">this</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>[c].<span class="pl-en">getObjectByProperty</span>(a,b);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>e)<span class="pl-k">return</span> e}},<span class="pl-en">getWorldPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .getWorldPosition() target is now required<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-c1">this</span>.<span class="pl-en">updateMatrixWorld</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>)},<span class="pl-en">getWorldQuaternion</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .getWorldQuaternion() target is now required<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="LC508" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>);<span class="pl-c1">this</span>.<span class="pl-en">updateMatrixWorld</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">decompose</span>(a,c,b);<span class="pl-k">return</span> c}}(),<span class="pl-en">getWorldScale</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .getWorldScale() target is now required<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-c1">this</span>.<span class="pl-en">updateMatrixWorld</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">decompose</span>(a,b,c);<span class="pl-k">return</span> c}}(),<span class="pl-en">getWorldDirection</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .getWorldDirection() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-c1">this</span>.<span class="pl-en">getWorldQuaternion</span>(a);</td>
      </tr>
      <tr>
        <td id="L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="LC509" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>).<span class="pl-en">applyQuaternion</span>(a)}}(),<span class="pl-en">raycast</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},<span class="pl-en">traverse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">a</span>(<span class="pl-c1">this</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)b[c].<span class="pl-en">traverse</span>(a)},<span class="pl-en">traverseVisible</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">visible</span>){<span class="pl-en">a</span>(<span class="pl-c1">this</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)b[c].<span class="pl-en">traverseVisible</span>(a)}},<span class="pl-en">traverseAncestors</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">parent</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">a</span>(b),<span class="pl-smi">b</span>.<span class="pl-en">traverseAncestors</span>(a))},<span class="pl-en">updateMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">compose</span>(<span class="pl-c1">this</span>.<span class="pl-smi">position</span>,<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>,<span class="pl-c1">this</span>.<span class="pl-smi">scale</span>);<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">updateMatrixWorld</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="LC510" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">updateMatrix</span>();<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span><span class="pl-k">||</span>a)<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">parent</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span>)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">multiplyMatrices</span>(<span class="pl-c1">this</span>.<span class="pl-c1">parent</span>.<span class="pl-smi">matrixWorld</span>,<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span>),<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)b[c].<span class="pl-en">updateMatrixWorld</span>(a)},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b[<span class="pl-smi">c</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">&amp;&amp;</span>(b[<span class="pl-smi">c</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">toJSON</span>(a));<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">uuid</span>}function c(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var d=void 0===a||&quot;string&quot;===typeof a,</td>
      </tr>
      <tr>
        <td id="L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="LC511" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span>{};d<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>{geometries<span class="pl-k">:</span>{},materials<span class="pl-k">:</span>{},textures<span class="pl-k">:</span>{},images<span class="pl-k">:</span>{},shapes<span class="pl-k">:</span>{}},<span class="pl-smi">e</span>.<span class="pl-smi">metadata</span><span class="pl-k">=</span>{version<span class="pl-k">:</span><span class="pl-c1">4.5</span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Object<span class="pl-pds">&quot;</span></span>,generator<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Object3D.toJSON<span class="pl-pds">&quot;</span></span>});<span class="pl-k">var</span> f<span class="pl-k">=</span>{};<span class="pl-smi">f</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">uuid</span>;<span class="pl-smi">f</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">type</span>;<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">castShadow</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">castShadow</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">receiveShadow</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">receiveShadow</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">frustumCulled</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">frustumCulled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">renderOrder</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>{}<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(<span class="pl-c1">this</span>.<span class="pl-smi">userData</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">userData</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userData</span>);</td>
      </tr>
      <tr>
        <td id="L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="LC512" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-c1">layers</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">layers</span>.<span class="pl-smi">mask</span>;<span class="pl-smi">f</span>.<span class="pl-smi">matrix</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">toArray</span>();<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>){<span class="pl-smi">f</span>.<span class="pl-smi">geometry</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometries</span>,<span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">parameters</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">shapes</span>)<span class="pl-k">if</span>(g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">shapes</span>,<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(g))<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;h<span class="pl-k">&lt;</span>l;h<span class="pl-k">++</span>)<span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shapes</span>,g[h]);<span class="pl-k">else</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shapes</span>,g)}<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">material</span>)<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(<span class="pl-c1">this</span>.<span class="pl-smi">material</span>)){g<span class="pl-k">=</span>[];h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">material</span>.<span class="pl-c1">length</span>;h<span class="pl-k">&lt;</span>l;h<span class="pl-k">++</span>)<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">materials</span>,<span class="pl-c1">this</span>.<span class="pl-smi">material</span>[h]));<span class="pl-smi">f</span>.<span class="pl-smi">material</span><span class="pl-k">=</span>g}<span class="pl-k">else</span> <span class="pl-smi">f</span>.<span class="pl-smi">material</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="LC513" class="blob-code blob-code-inner js-file-line"><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">materials</span>,<span class="pl-c1">this</span>.<span class="pl-smi">material</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(<span class="pl-smi">f</span>.<span class="pl-smi">children</span><span class="pl-k">=</span>[],h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>)<span class="pl-smi">f</span>.<span class="pl-smi">children</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">children</span>[h].<span class="pl-en">toJSON</span>(a).<span class="pl-c1">object</span>);<span class="pl-k">if</span>(d){d<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometries</span>);h<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-smi">materials</span>);l<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-smi">textures</span>);<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-c1">images</span>);g<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shapes</span>);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">geometries</span><span class="pl-k">=</span>d);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">materials</span><span class="pl-k">=</span>h);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">textures</span><span class="pl-k">=</span>l);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-c1">images</span><span class="pl-k">=</span>m);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">shapes</span><span class="pl-k">=</span>g)}<span class="pl-smi">e</span>.<span class="pl-c1">object</span><span class="pl-k">=</span>f;<span class="pl-k">return</span> e},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>,a)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="LC514" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">name</span>;<span class="pl-c1">this</span>.<span class="pl-smi">up</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">up</span>);<span class="pl-c1">this</span>.<span class="pl-smi">position</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">position</span>);<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">quaternion</span>);<span class="pl-c1">this</span>.<span class="pl-smi">scale</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">scale</span>);<span class="pl-c1">this</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrix</span>);<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-c1">this</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">matrixAutoUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-c1">layers</span>.<span class="pl-smi">mask</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">layers</span>.<span class="pl-smi">mask</span>;<span class="pl-c1">this</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span>;<span class="pl-c1">this</span>.<span class="pl-smi">castShadow</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">castShadow</span>;<span class="pl-c1">this</span>.<span class="pl-smi">receiveShadow</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">receiveShadow</span>;<span class="pl-c1">this</span>.<span class="pl-smi">frustumCulled</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">frustumCulled</span>;<span class="pl-c1">this</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderOrder</span>;<span class="pl-c1">this</span>.<span class="pl-smi">userData</span><span class="pl-k">=</span><span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(<span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(<span class="pl-smi">a</span>.<span class="pl-smi">userData</span>));</td>
      </tr>
      <tr>
        <td id="L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="LC515" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(<span class="pl-smi">a</span>.<span class="pl-smi">children</span>[b].<span class="pl-en">clone</span>());<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">Ra</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Ra,isCamera:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,b);<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorldInverse</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorldInverse</span>);<span class="pl-c1">this</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">projectionMatrix</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getWorldDirection</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Camera: .getWorldDirection() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-c1">this</span>.<span class="pl-en">getWorldQuaternion</span>(a);</td>
      </tr>
      <tr>
        <td id="L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="LC516" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>).<span class="pl-en">applyQuaternion</span>(a)}}(),<span class="pl-en">updateMatrixWorld</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">updateMatrixWorld</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorldInverse</span>.<span class="pl-en">getInverse</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>)},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)}});<span class="pl-smi">Mb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Ra</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Mb,isOrthographicCamera:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">Ra</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,b);<span class="pl-c1">this</span>.<span class="pl-c1">left</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">left</span>;<span class="pl-c1">this</span>.<span class="pl-c1">right</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">right</span>;<span class="pl-c1">this</span>.<span class="pl-c1">top</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">top</span>;<span class="pl-c1">this</span>.<span class="pl-c1">bottom</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">bottom</span>;<span class="pl-c1">this</span>.<span class="pl-smi">near</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">near</span>;<span class="pl-c1">this</span>.<span class="pl-smi">far</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">far</span>;<span class="pl-c1">this</span>.<span class="pl-smi">zoom</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">zoom</span>;<span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="LC517" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">view</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({},<span class="pl-smi">a</span>.<span class="pl-smi">view</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setViewOffset</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">=</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,fullWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,fullHeight<span class="pl-k">:</span><span class="pl-c1">1</span>,offsetX<span class="pl-k">:</span><span class="pl-c1">0</span>,offsetY<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span><span class="pl-c1">1</span>,height<span class="pl-k">:</span><span class="pl-c1">1</span>});<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">fullWidth</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">fullHeight</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">offsetX</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">offsetY</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>e;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>f;<span class="pl-c1">this</span>.<span class="pl-en">updateProjectionMatrix</span>()},<span class="pl-en">clearViewOffset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-en">updateProjectionMatrix</span>()},<span class="pl-en">updateProjectionMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="LC518" class="blob-code blob-code-inner js-file-line">(<span class="pl-c1">this</span>.<span class="pl-c1">right</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">left</span>)<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">zoom</span>),b<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-c1">top</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">bottom</span>)<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">zoom</span>),c<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-c1">right</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">left</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,d<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-c1">top</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">bottom</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,e<span class="pl-k">=</span>c<span class="pl-k">-</span>a;c<span class="pl-k">+=</span>a;a<span class="pl-k">=</span>d<span class="pl-k">+</span>b;b<span class="pl-k">=</span>d<span class="pl-k">-</span>b;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">enabled</span>){c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">zoom</span><span class="pl-k">/</span>(<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">fullWidth</span>);b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">zoom</span><span class="pl-k">/</span>(<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">fullHeight</span>);<span class="pl-k">var</span> f<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-c1">right</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">left</span>)<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-c1">width</span>;d<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-c1">top</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-c1">bottom</span>)<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-c1">height</span>;e<span class="pl-k">+=</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">offsetX</span><span class="pl-k">/</span>c<span class="pl-k">*</span>f;c<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-c1">width</span><span class="pl-k">/</span>c<span class="pl-k">*</span>f;a<span class="pl-k">-=</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">offsetY</span><span class="pl-k">/</span>b<span class="pl-k">*</span>d;b<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-c1">height</span><span class="pl-k">/</span>b<span class="pl-k">*</span>d}<span class="pl-c1">this</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">makeOrthographic</span>(e,</td>
      </tr>
      <tr>
        <td id="L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="LC519" class="blob-code blob-code-inner js-file-line">c,a,b,<span class="pl-c1">this</span>.<span class="pl-smi">near</span>,<span class="pl-c1">this</span>.<span class="pl-smi">far</span>)},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">zoom</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">zoom</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-c1">left</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">left</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-c1">right</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">right</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-c1">top</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">top</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-c1">bottom</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">bottom</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">near</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">near</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">far</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">far</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">view</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({},<span class="pl-c1">this</span>.<span class="pl-smi">view</span>));<span class="pl-k">return</span> a}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Ya</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">a</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>;<span class="pl-c1">this</span>.<span class="pl-smi">c</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">c</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normal</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">normal</span>);<span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>);</td>
      </tr>
      <tr>
        <td id="L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="LC520" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">materialIndex</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">materialIndex</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexNormals</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">vertexNormals</span>[b]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexNormals</span>[b].<span class="pl-en">clone</span>();b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexColors</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">vertexColors</span>[b]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexColors</span>[b].<span class="pl-en">clone</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-k">var</span> If<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">za</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:P,isGeometry:!0,applyMatrix:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">la</span>).<span class="pl-en">getNormalMatrix</span>(a),c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>[c].<span class="pl-en">applyMatrix4</span>(a);c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>[c];</td>
      </tr>
      <tr>
        <td id="L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="LC521" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-en">applyMatrix3</span>(b).<span class="pl-c1">normalize</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexNormals</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-smi">vertexNormals</span>[e].<span class="pl-en">applyMatrix3</span>(b).<span class="pl-c1">normalize</span>()}<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">computeBoundingBox</span>();<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">computeBoundingSphere</span>();<span class="pl-c1">this</span>.<span class="pl-smi">normalsNeedUpdate</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">verticesNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">rotateX</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">makeRotationX</span>(b);<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">rotateY</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">makeRotationY</span>(b);<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),</td>
      </tr>
      <tr>
        <td id="L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="LC522" class="blob-code blob-code-inner js-file-line"><span class="pl-en">rotateZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">makeRotationZ</span>(b);<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-en">makeTranslation</span>(b,c,d);<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">scale</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-en">makeScale</span>(b,c,d);<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">lookAt</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">H</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">lookAt</span>(b);<span class="pl-smi">a</span>.<span class="pl-en">updateMatrix</span>();<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrix</span>)}}(),<span class="pl-en">fromBufferGeometry</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="LC523" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">?</span>[k[a].<span class="pl-en">clone</span>(),k[b].<span class="pl-en">clone</span>(),k[d].<span class="pl-en">clone</span>()]<span class="pl-k">:</span>[],q<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>h<span class="pl-k">?</span>[<span class="pl-smi">c</span>.<span class="pl-smi">colors</span>[a].<span class="pl-en">clone</span>(),<span class="pl-smi">c</span>.<span class="pl-smi">colors</span>[b].<span class="pl-en">clone</span>(),<span class="pl-smi">c</span>.<span class="pl-smi">colors</span>[d].<span class="pl-en">clone</span>()]<span class="pl-k">:</span>[];e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ya</span>(a,b,d,f,q,e);<span class="pl-smi">c</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">push</span>(e);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">0</span>].<span class="pl-c1">push</span>([n[a].<span class="pl-en">clone</span>(),n[b].<span class="pl-en">clone</span>(),n[d].<span class="pl-en">clone</span>()]);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">1</span>].<span class="pl-c1">push</span>([t[a].<span class="pl-en">clone</span>(),t[b].<span class="pl-en">clone</span>(),t[d].<span class="pl-en">clone</span>()])}<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>,d<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">index</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">index</span>.<span class="pl-smi">array</span><span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">attributes</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-smi">array</span>,g<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-smi">normal</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">normal</span>.<span class="pl-smi">array</span><span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-c1">color</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-c1">color</span>.<span class="pl-smi">array</span><span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-smi">uv</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">uv</span>.<span class="pl-smi">array</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="LC524" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-smi">uv2</span><span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-smi">uv2</span>.<span class="pl-smi">array</span><span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>m<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">1</span>]<span class="pl-k">=</span>[]);<span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span>[],n<span class="pl-k">=</span>[],t<span class="pl-k">=</span>[],q<span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;e<span class="pl-k">+=</span><span class="pl-c1">3</span>,q<span class="pl-k">+=</span><span class="pl-c1">2</span>)<span class="pl-smi">c</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">p</span>(f[e],f[e<span class="pl-k">+</span><span class="pl-c1">1</span>],f[e<span class="pl-k">+</span><span class="pl-c1">2</span>])),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">p</span>(g[e],g[e<span class="pl-k">+</span><span class="pl-c1">1</span>],g[e<span class="pl-k">+</span><span class="pl-c1">2</span>])),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">colors</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">G</span>(h[e],h[e<span class="pl-k">+</span><span class="pl-c1">1</span>],h[e<span class="pl-k">+</span><span class="pl-c1">2</span>])),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">B</span>(l[q],l[q<span class="pl-k">+</span><span class="pl-c1">1</span>])),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-smi">t</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">B</span>(m[q],m[q<span class="pl-k">+</span><span class="pl-c1">1</span>]));<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">groups</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>){f<span class="pl-k">=</span>r[e];<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">start</span>,y<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">count</span>;q<span class="pl-k">=</span>u;<span class="pl-k">for</span>(u<span class="pl-k">+=</span>y;q<span class="pl-k">&lt;</span>u;q<span class="pl-k">+=</span><span class="pl-c1">3</span>)<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">?</span><span class="pl-en">b</span>(d[q],d[q<span class="pl-k">+</span><span class="pl-c1">1</span>],d[q<span class="pl-k">+</span><span class="pl-c1">2</span>],<span class="pl-smi">f</span>.<span class="pl-smi">materialIndex</span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="LC525" class="blob-code blob-code-inner js-file-line"><span class="pl-en">b</span>(q,q<span class="pl-k">+</span><span class="pl-c1">1</span>,q<span class="pl-k">+</span><span class="pl-c1">2</span>,<span class="pl-smi">f</span>.<span class="pl-smi">materialIndex</span>)}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">+=</span><span class="pl-c1">3</span>)<span class="pl-en">b</span>(d[e],d[e<span class="pl-k">+</span><span class="pl-c1">1</span>],d[e<span class="pl-k">+</span><span class="pl-c1">2</span>]);<span class="pl-k">else</span> <span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">3</span>;e<span class="pl-k">+=</span><span class="pl-c1">3</span>)<span class="pl-en">b</span>(e,e<span class="pl-k">+</span><span class="pl-c1">1</span>,e<span class="pl-k">+</span><span class="pl-c1">2</span>);<span class="pl-c1">this</span>.<span class="pl-en">computeFaceNormals</span>();<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-en">clone</span>());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingSphere</span>.<span class="pl-en">clone</span>());<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">center</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">computeBoundingBox</span>();<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-en">getCenter</span>(a).<span class="pl-en">negate</span>();<span class="pl-c1">this</span>.<span class="pl-en">translate</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">normalize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">computeBoundingSphere</span>();</td>
      </tr>
      <tr>
        <td id="L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="LC526" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span>.<span class="pl-smi">center</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span>.<span class="pl-smi">radius</span>;b<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">/</span>b;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-smi">c</span>.<span class="pl-c1">set</span>(b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span>b<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-c1">0</span>,b,<span class="pl-c1">0</span>,<span class="pl-k">-</span>b<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,b,<span class="pl-k">-</span>b<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(c);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">computeFaceNormals</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>[c],f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">e</span>.<span class="pl-smi">a</span>],g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">e</span>.<span class="pl-smi">b</span>];<span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">e</span>.<span class="pl-smi">c</span>],g);<span class="pl-smi">b</span>.<span class="pl-en">subVectors</span>(f,g);<span class="pl-smi">a</span>.<span class="pl-en">cross</span>(b);<span class="pl-smi">a</span>.<span class="pl-c1">normalize</span>();<span class="pl-smi">e</span>.<span class="pl-smi">normal</span>.<span class="pl-en">copy</span>(a)}},<span class="pl-en">computeVertexNormals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> b;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Array</span>(<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="LC527" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>b;d<span class="pl-k">++</span>)c[d]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">if</span>(a){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>d;a<span class="pl-k">++</span>){b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>[a];<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">b</span>.<span class="pl-smi">a</span>];<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">b</span>.<span class="pl-smi">b</span>];<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>[<span class="pl-smi">b</span>.<span class="pl-smi">c</span>];<span class="pl-smi">e</span>.<span class="pl-en">subVectors</span>(l,h);<span class="pl-smi">f</span>.<span class="pl-en">subVectors</span>(g,h);<span class="pl-smi">e</span>.<span class="pl-en">cross</span>(f);c[<span class="pl-smi">b</span>.<span class="pl-smi">a</span>].<span class="pl-c1">add</span>(e);c[<span class="pl-smi">b</span>.<span class="pl-smi">b</span>].<span class="pl-c1">add</span>(e);c[<span class="pl-smi">b</span>.<span class="pl-smi">c</span>].<span class="pl-c1">add</span>(e)}}<span class="pl-k">else</span> <span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-en">computeFaceNormals</span>(),a<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>d;a<span class="pl-k">++</span>)b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>[a],c[<span class="pl-smi">b</span>.<span class="pl-smi">a</span>].<span class="pl-c1">add</span>(<span class="pl-smi">b</span>.<span class="pl-smi">normal</span>),c[<span class="pl-smi">b</span>.<span class="pl-smi">b</span>].<span class="pl-c1">add</span>(<span class="pl-smi">b</span>.<span class="pl-smi">normal</span>),c[<span class="pl-smi">b</span>.<span class="pl-smi">c</span>].<span class="pl-c1">add</span>(<span class="pl-smi">b</span>.<span class="pl-smi">normal</span>);d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>b;d<span class="pl-k">++</span>)c[d].<span class="pl-c1">normalize</span>();a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="LC528" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>d;a<span class="pl-k">++</span>)b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>[a],g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">vertexNormals</span>,<span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>(g[<span class="pl-c1">0</span>].<span class="pl-en">copy</span>(c[<span class="pl-smi">b</span>.<span class="pl-smi">a</span>]),g[<span class="pl-c1">1</span>].<span class="pl-en">copy</span>(c[<span class="pl-smi">b</span>.<span class="pl-smi">b</span>]),g[<span class="pl-c1">2</span>].<span class="pl-en">copy</span>(c[<span class="pl-smi">b</span>.<span class="pl-smi">c</span>]))<span class="pl-k">:</span>(g[<span class="pl-c1">0</span>]<span class="pl-k">=</span>c[<span class="pl-smi">b</span>.<span class="pl-smi">a</span>].<span class="pl-en">clone</span>(),g[<span class="pl-c1">1</span>]<span class="pl-k">=</span>c[<span class="pl-smi">b</span>.<span class="pl-smi">b</span>].<span class="pl-en">clone</span>(),g[<span class="pl-c1">2</span>]<span class="pl-k">=</span>c[<span class="pl-smi">b</span>.<span class="pl-smi">c</span>].<span class="pl-en">clone</span>());<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">normalsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">computeFlatVertexNormals</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-c1">this</span>.<span class="pl-en">computeFaceNormals</span>();<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>a;b<span class="pl-k">++</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>[b];<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">vertexNormals</span>;<span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>(d[<span class="pl-c1">0</span>].<span class="pl-en">copy</span>(<span class="pl-smi">c</span>.<span class="pl-smi">normal</span>),d[<span class="pl-c1">1</span>].<span class="pl-en">copy</span>(<span class="pl-smi">c</span>.<span class="pl-smi">normal</span>),d[<span class="pl-c1">2</span>].<span class="pl-en">copy</span>(<span class="pl-smi">c</span>.<span class="pl-smi">normal</span>))<span class="pl-k">:</span>(d[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">normal</span>.<span class="pl-en">clone</span>(),d[<span class="pl-c1">1</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="LC529" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">normal</span>.<span class="pl-en">clone</span>(),d[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">normal</span>.<span class="pl-en">clone</span>())}<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">normalsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)},<span class="pl-en">computeMorphNormals</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>[c];<span class="pl-smi">d</span>.<span class="pl-smi">__originalFaceNormal</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">__originalFaceNormal</span>.<span class="pl-en">copy</span>(<span class="pl-smi">d</span>.<span class="pl-smi">normal</span>)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">__originalFaceNormal</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">normal</span>.<span class="pl-en">clone</span>();<span class="pl-smi">d</span>.<span class="pl-smi">__originalVertexNormals</span><span class="pl-k">||</span>(<span class="pl-smi">d</span>.<span class="pl-smi">__originalVertexNormals</span><span class="pl-k">=</span>[]);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">vertexNormals</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>a;e<span class="pl-k">++</span>)<span class="pl-smi">d</span>.<span class="pl-smi">__originalVertexNormals</span>[e]<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">__originalVertexNormals</span>[e].<span class="pl-en">copy</span>(<span class="pl-smi">d</span>.<span class="pl-smi">vertexNormals</span>[e])<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">__originalVertexNormals</span>[e]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="LC530" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-smi">vertexNormals</span>[e].<span class="pl-en">clone</span>()}<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">P</span>;<span class="pl-smi">f</span>.<span class="pl-smi">faces</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>a;e<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span>[e]){<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span>[e]<span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span>[e].<span class="pl-smi">faceNormals</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span>[e].<span class="pl-smi">vertexNormals</span><span class="pl-k">=</span>[];d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span>[e].<span class="pl-smi">faceNormals</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span>[e].<span class="pl-smi">vertexNormals</span>;c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">var</span> l<span class="pl-k">=</span>{a<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">p</span>};<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(h);<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(l)}}g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span>[e];<span class="pl-smi">f</span>.<span class="pl-smi">vertices</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span>[e].<span class="pl-smi">vertices</span>;<span class="pl-smi">f</span>.<span class="pl-en">computeFaceNormals</span>();<span class="pl-smi">f</span>.<span class="pl-en">computeVertexNormals</span>();</td>
      </tr>
      <tr>
        <td id="L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="LC531" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>)d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>[c],h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">faceNormals</span>[c],l<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">vertexNormals</span>[c],<span class="pl-smi">h</span>.<span class="pl-en">copy</span>(<span class="pl-smi">d</span>.<span class="pl-smi">normal</span>),<span class="pl-smi">l</span>.<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(<span class="pl-smi">d</span>.<span class="pl-smi">vertexNormals</span>[<span class="pl-c1">0</span>]),<span class="pl-smi">l</span>.<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-smi">d</span>.<span class="pl-smi">vertexNormals</span>[<span class="pl-c1">1</span>]),<span class="pl-smi">l</span>.<span class="pl-smi">c</span>.<span class="pl-en">copy</span>(<span class="pl-smi">d</span>.<span class="pl-smi">vertexNormals</span>[<span class="pl-c1">2</span>])}c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>)d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>[c],<span class="pl-smi">d</span>.<span class="pl-smi">normal</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">__originalFaceNormal</span>,<span class="pl-smi">d</span>.<span class="pl-smi">vertexNormals</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">__originalVertexNormals</span>},<span class="pl-en">computeBoundingBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Xa</span>);<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-en">setFromPoints</span>(<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>)},<span class="pl-en">computeBoundingSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="LC532" class="blob-code blob-code-inner js-file-line">(<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ha</span>);<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span>.<span class="pl-en">setFromPoints</span>(<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>)},<span class="pl-en">merge</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">isGeometry</span>){<span class="pl-k">var</span> d,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertices</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>,l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">faces</span>,m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">0</span>],k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">0</span>],n<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">colors</span>,p<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">colors</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">la</span>).<span class="pl-en">getNormalMatrix</span>(b));a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>q;a<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>g[a].<span class="pl-en">clone</span>();<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">applyMatrix4</span>(b);<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(r)}a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>q;a<span class="pl-k">++</span>)<span class="pl-smi">n</span>.<span class="pl-c1">push</span>(p[a].<span class="pl-en">clone</span>());a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>q;a<span class="pl-k">++</span>){g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="LC533" class="blob-code blob-code-inner js-file-line">l[a];<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">vertexNormals</span>;p<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">vertexColors</span>;n<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ya</span>(<span class="pl-smi">g</span>.<span class="pl-smi">a</span><span class="pl-k">+</span>e,<span class="pl-smi">g</span>.<span class="pl-smi">b</span><span class="pl-k">+</span>e,<span class="pl-smi">g</span>.<span class="pl-smi">c</span><span class="pl-k">+</span>e);<span class="pl-smi">n</span>.<span class="pl-smi">normal</span>.<span class="pl-en">copy</span>(<span class="pl-smi">g</span>.<span class="pl-smi">normal</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-smi">normal</span>.<span class="pl-en">applyMatrix3</span>(d).<span class="pl-c1">normalize</span>();b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>f;b<span class="pl-k">++</span>)r<span class="pl-k">=</span>u[b].<span class="pl-en">clone</span>(),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-en">applyMatrix3</span>(d).<span class="pl-c1">normalize</span>(),<span class="pl-smi">n</span>.<span class="pl-smi">vertexNormals</span>.<span class="pl-c1">push</span>(r);<span class="pl-smi">n</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">g</span>.<span class="pl-c1">color</span>);b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>f;b<span class="pl-k">++</span>)r<span class="pl-k">=</span>p[b],<span class="pl-smi">n</span>.<span class="pl-smi">vertexColors</span>.<span class="pl-c1">push</span>(<span class="pl-smi">r</span>.<span class="pl-en">clone</span>());<span class="pl-smi">n</span>.<span class="pl-smi">materialIndex</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">materialIndex</span><span class="pl-k">+</span>c;<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(n)}a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>q;a<span class="pl-k">++</span>)<span class="pl-k">if</span>(c<span class="pl-k">=</span>k[a],d<span class="pl-k">=</span>[],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c){b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>f;b<span class="pl-k">++</span>)<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(c[b].<span class="pl-en">clone</span>());<span class="pl-smi">m</span>.<span class="pl-c1">push</span>(d)}}<span class="pl-k">else</span> <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="LC534" class="blob-code blob-code-inner js-file-line">a)},<span class="pl-en">mergeMesh</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">isMesh</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">updateMatrix</span>(),<span class="pl-c1">this</span>.<span class="pl-en">merge</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>,<span class="pl-smi">a</span>.<span class="pl-smi">matrix</span>))<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.<span class="pl-pds">&quot;</span></span>,a)},<span class="pl-en">mergeVertices</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{},b<span class="pl-k">=</span>[],c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>,<span class="pl-c1">4</span>),e;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>e;f<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>[f];g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">g</span>.<span class="pl-c1">x</span><span class="pl-k">*</span>d)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">*</span>d)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-smi">g</span>.<span class="pl-c1">z</span><span class="pl-k">*</span>d);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a[g]<span class="pl-k">?</span>(a[g]<span class="pl-k">=</span>f,<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>[f]),c[f]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>c[f]<span class="pl-k">=</span>c[a[g]]}a<span class="pl-k">=</span>[];f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>e;f<span class="pl-k">++</span>)<span class="pl-k">for</span>(d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="LC535" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>[f],<span class="pl-smi">d</span>.<span class="pl-smi">a</span><span class="pl-k">=</span>c[<span class="pl-smi">d</span>.<span class="pl-smi">a</span>],<span class="pl-smi">d</span>.<span class="pl-smi">b</span><span class="pl-k">=</span>c[<span class="pl-smi">d</span>.<span class="pl-smi">b</span>],<span class="pl-smi">d</span>.<span class="pl-smi">c</span><span class="pl-k">=</span>c[<span class="pl-smi">d</span>.<span class="pl-smi">c</span>],d<span class="pl-k">=</span>[<span class="pl-smi">d</span>.<span class="pl-smi">a</span>,<span class="pl-smi">d</span>.<span class="pl-smi">b</span>,<span class="pl-smi">d</span>.<span class="pl-smi">c</span>],g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>g;g<span class="pl-k">++</span>)<span class="pl-k">if</span>(d[g]<span class="pl-k">===</span>d[(g<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">3</span>]){<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(f);<span class="pl-k">break</span>}<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>f;f<span class="pl-k">--</span>)<span class="pl-k">for</span>(d<span class="pl-k">=</span>a[f],<span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">1</span>),c<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>e;c<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[c].<span class="pl-c1">splice</span>(d,<span class="pl-c1">1</span>);f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> f},<span class="pl-en">setFromPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[b];<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">z</span><span class="pl-k">||</span><span class="pl-c1">0</span>))}<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">sortFacesByMaterialIndex</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>,</td>
      </tr>
      <tr>
        <td id="L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="LC536" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>)a[c].<span class="pl-smi">_id</span><span class="pl-k">=</span>c;<span class="pl-smi">a</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">materialIndex</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">materialIndex</span>});<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">0</span>],e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">1</span>],f,g;d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>[]);e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>[]);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>a[c].<span class="pl-smi">_id</span>;f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">push</span>(d[h]);g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">push</span>(e[h])}f<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">0</span>]<span class="pl-k">=</span>f);g<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">1</span>]<span class="pl-k">=</span>g)},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> c<span class="pl-k">?</span>a<span class="pl-k">|</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>b<span class="pl-k">:</span>a<span class="pl-k">&amp;~</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==m[b])return m[b];m[b]=l.length/3;l.push(a.x,</td>
      </tr>
      <tr>
        <td id="L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="LC537" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> m[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==n[b])return n[b];n[b]=k.length;k.push(a.getHex());return n[b]}function d(a){var b=a.x.toString()+a.y.toString();if(void 0!==q[b])return q[b];q[b]=p.length/2;p.push(a.x,a.y);return q[b]}var e={metadata:{version:4.5,type:&quot;Geometry&quot;,generator:&quot;Geometry.toJSON&quot;}};e.uuid=this.uuid;e.type=this.type;&quot;&quot;!==this.name&amp;&amp;(e.name=this.name);if(void 0!==this.parameters){var f=this.parameters,g;for(g in f)void 0!==f[g]&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="LC538" class="blob-code blob-code-inner js-file-line">(e[g]<span class="pl-k">=</span>f[g]);<span class="pl-k">return</span> e}f<span class="pl-k">=</span>[];<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>[g];<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,<span class="pl-smi">h</span>.<span class="pl-c1">z</span>)}h<span class="pl-k">=</span>[];<span class="pl-k">var</span> l<span class="pl-k">=</span>[],m<span class="pl-k">=</span>{},k<span class="pl-k">=</span>[],n<span class="pl-k">=</span>{},p<span class="pl-k">=</span>[],q<span class="pl-k">=</span>{};<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faces</span>[g],u<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">0</span>][g],y<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">length</span>(),w<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-smi">vertexNormals</span>.<span class="pl-c1">length</span>,x<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-c1">color</span>.<span class="pl-smi">r</span><span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-c1">color</span>.<span class="pl-smi">g</span><span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">r</span>.<span class="pl-c1">color</span>.<span class="pl-smi">b</span>,<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-smi">vertexColors</span>.<span class="pl-c1">length</span>,<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">C</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">C</span>,<span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">C</span>,<span class="pl-c1">2</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">C</span>,<span class="pl-c1">3</span>,u);<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">C</span>,<span class="pl-c1">4</span>,y);<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">C</span>,<span class="pl-c1">5</span>,w);<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">C</span>,<span class="pl-c1">6</span>,x);<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">C</span>,<span class="pl-c1">7</span>,<span class="pl-c1">A</span>);<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-c1">C</span>);<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-smi">r</span>.<span class="pl-smi">a</span>,<span class="pl-smi">r</span>.<span class="pl-smi">b</span>,<span class="pl-smi">r</span>.<span class="pl-smi">c</span>);<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-smi">r</span>.<span class="pl-smi">materialIndex</span>);</td>
      </tr>
      <tr>
        <td id="L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="LC539" class="blob-code blob-code-inner js-file-line">u<span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">0</span>][g],<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-en">d</span>(u[<span class="pl-c1">0</span>]),<span class="pl-en">d</span>(u[<span class="pl-c1">1</span>]),<span class="pl-en">d</span>(u[<span class="pl-c1">2</span>])));y<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-en">b</span>(<span class="pl-smi">r</span>.<span class="pl-smi">normal</span>));w<span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">vertexNormals</span>,<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-en">b</span>(y[<span class="pl-c1">0</span>]),<span class="pl-en">b</span>(y[<span class="pl-c1">1</span>]),<span class="pl-en">b</span>(y[<span class="pl-c1">2</span>])));x<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-en">c</span>(<span class="pl-smi">r</span>.<span class="pl-c1">color</span>));<span class="pl-c1">A</span><span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">vertexColors</span>,<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(<span class="pl-en">c</span>(r[<span class="pl-c1">0</span>]),<span class="pl-en">c</span>(r[<span class="pl-c1">1</span>]),<span class="pl-en">c</span>(r[<span class="pl-c1">2</span>])))}<span class="pl-smi">e</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>{};<span class="pl-smi">e</span>.<span class="pl-c1">data</span>.<span class="pl-smi">vertices</span><span class="pl-k">=</span>f;<span class="pl-smi">e</span>.<span class="pl-c1">data</span>.<span class="pl-smi">normals</span><span class="pl-k">=</span>l;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-c1">data</span>.<span class="pl-smi">colors</span><span class="pl-k">=</span>k);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-c1">data</span>.<span class="pl-smi">uvs</span><span class="pl-k">=</span>[p]);<span class="pl-smi">e</span>.<span class="pl-c1">data</span>.<span class="pl-smi">faces</span><span class="pl-k">=</span>h;<span class="pl-k">return</span> e},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">P</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c,d;<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">colors</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">faces</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span><span class="pl-k">=</span>[[]];<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="LC540" class="blob-code blob-code-inner js-file-line">[];<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">skinWeights</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">skinIndices</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">lineDistances</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertices</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>b;f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">push</span>(e[f].<span class="pl-en">clone</span>());e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">colors</span>;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>b;f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">colors</span>.<span class="pl-c1">push</span>(e[f].<span class="pl-en">clone</span>());e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">faces</span>;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>b;f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">push</span>(e[f].<span class="pl-en">clone</span>());f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">faceVertexUvs</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>b;f<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">faceVertexUvs</span>[f];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[f]<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[f]<span class="pl-k">=</span>[]);e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="LC541" class="blob-code blob-code-inner js-file-line">c;e<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>g[e],l<span class="pl-k">=</span>[];<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>;m<span class="pl-k">&lt;</span>d;m<span class="pl-k">++</span>)<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(h[m].<span class="pl-en">clone</span>());<span class="pl-c1">this</span>.<span class="pl-smi">faceVertexUvs</span>[f].<span class="pl-c1">push</span>(l)}}m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>b;f<span class="pl-k">++</span>){d<span class="pl-k">=</span>{};<span class="pl-smi">d</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>m[f].<span class="pl-c1">name</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>m[f].<span class="pl-smi">vertices</span>)<span class="pl-k">for</span>(<span class="pl-smi">d</span>.<span class="pl-smi">vertices</span><span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span>m[f].<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)<span class="pl-smi">d</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">push</span>(m[f].<span class="pl-smi">vertices</span>[e].<span class="pl-en">clone</span>());<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>m[f].<span class="pl-smi">normals</span>)<span class="pl-k">for</span>(<span class="pl-smi">d</span>.<span class="pl-smi">normals</span><span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span>m[f].<span class="pl-smi">normals</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)<span class="pl-smi">d</span>.<span class="pl-smi">normals</span>.<span class="pl-c1">push</span>(m[f].<span class="pl-smi">normals</span>[e].<span class="pl-en">clone</span>());<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span>.<span class="pl-c1">push</span>(d)}m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphNormals</span>;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>b;f<span class="pl-k">++</span>){d<span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>m[f].<span class="pl-smi">vertexNormals</span>)<span class="pl-k">for</span>(<span class="pl-smi">d</span>.<span class="pl-smi">vertexNormals</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="LC542" class="blob-code blob-code-inner js-file-line">[],e<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span>m[f].<span class="pl-smi">vertexNormals</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)g<span class="pl-k">=</span>m[f].<span class="pl-smi">vertexNormals</span>[e],h<span class="pl-k">=</span>{},<span class="pl-smi">h</span>.<span class="pl-smi">a</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">a</span>.<span class="pl-en">clone</span>(),<span class="pl-smi">h</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">b</span>.<span class="pl-en">clone</span>(),<span class="pl-smi">h</span>.<span class="pl-smi">c</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">c</span>.<span class="pl-en">clone</span>(),<span class="pl-smi">d</span>.<span class="pl-smi">vertexNormals</span>.<span class="pl-c1">push</span>(h);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>m[f].<span class="pl-smi">faceNormals</span>)<span class="pl-k">for</span>(<span class="pl-smi">d</span>.<span class="pl-smi">faceNormals</span><span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span>m[f].<span class="pl-smi">faceNormals</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)<span class="pl-smi">d</span>.<span class="pl-smi">faceNormals</span>.<span class="pl-c1">push</span>(m[f].<span class="pl-smi">faceNormals</span>[e].<span class="pl-en">clone</span>());<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span>.<span class="pl-c1">push</span>(d)}e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinWeights</span>;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>b;f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">skinWeights</span>.<span class="pl-c1">push</span>(e[f].<span class="pl-en">clone</span>());e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinIndices</span>;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>b;f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">skinIndices</span>.<span class="pl-c1">push</span>(e[f].<span class="pl-en">clone</span>());e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lineDistances</span>;f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="LC543" class="blob-code blob-code-inner js-file-line">b;f<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">lineDistances</span>.<span class="pl-c1">push</span>(e[f]);f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingBox</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">clone</span>());f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingSphere</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">clone</span>());<span class="pl-c1">this</span>.<span class="pl-smi">elementsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">elementsNeedUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">verticesNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">verticesNeedUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">uvsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">uvsNeedUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalsNeedUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">colorsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">colorsNeedUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lineDistancesNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lineDistancesNeedUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">groupsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">groupsNeedUpdate</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">dispose</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dispose<span class="pl-pds">&quot;</span></span>})}});</td>
      </tr>
      <tr>
        <td id="L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="LC544" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>needsUpdate<span class="pl-pds">&quot;</span></span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">version</span><span class="pl-k">++</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>,{isBufferAttribute<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">onUploadCallback</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},<span class="pl-en">setArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(a))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferAttribute: array should be a Typed Array.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">array</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setDynamic</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">dynamic</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>;<span class="pl-c1">this</span>.<span class="pl-smi">array</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.array.constructor</span>(<span class="pl-smi">a</span>.<span class="pl-smi">array</span>);<span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="LC545" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">itemSize</span>;<span class="pl-c1">this</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">count</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalized</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalized</span>;<span class="pl-c1">this</span>.<span class="pl-smi">dynamic</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dynamic</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copyAt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">*=</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span>;c<span class="pl-k">*=</span><span class="pl-smi">b</span>.<span class="pl-smi">itemSize</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span>d]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">array</span>[c<span class="pl-k">+</span>d];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copyArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">array</span>.<span class="pl-c1">set</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copyColorsArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">array</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>a[d];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferAttribute.copyColorsArray(): color is undefined<span class="pl-pds">&quot;</span></span>,d),f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>);b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">r</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">g</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">b</span>}<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="LC546" class="blob-code blob-code-inner js-file-line"><span class="pl-en">copyVector2sArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">array</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>a[d];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferAttribute.copyVector2sArray(): vector is undefined<span class="pl-pds">&quot;</span></span>,d),f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>);b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>}<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copyVector3sArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">array</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>a[d];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferAttribute.copyVector3sArray(): vector is undefined<span class="pl-pds">&quot;</span></span>,d),f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">z</span>}<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copyVector4sArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="LC547" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">array</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>a[d];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferAttribute.copyVector4sArray(): vector is undefined<span class="pl-pds">&quot;</span></span>,d),f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>);b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">z</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">w</span>}<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">array</span>.<span class="pl-c1">set</span>(a,b);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getX</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span>]},<span class="pl-en">setX</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span>]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getY</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span><span class="pl-k">+</span><span class="pl-c1">1</span>]},<span class="pl-en">setY</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span><span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="LC548" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span><span class="pl-k">+</span><span class="pl-c1">2</span>]},<span class="pl-en">setZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span><span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getW</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span><span class="pl-k">+</span><span class="pl-c1">3</span>]},<span class="pl-en">setW</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span><span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setXY</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">*=</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span>;<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">0</span>]<span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setXYZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){a<span class="pl-k">*=</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span>;<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">0</span>]<span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>d;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setXYZW</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){a<span class="pl-k">*=</span><span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span>;<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">0</span>]<span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="LC549" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>]<span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span>e;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">onUpload</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">onUploadCallback</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">array</span>,<span class="pl-c1">this</span>.<span class="pl-smi">itemSize</span>)).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)}});<span class="pl-smi">yc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">yc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>yc;<span class="pl-smi">zc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">zc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>zc;<span class="pl-smi">Ac</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Ac</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Ac;<span class="pl-smi">Bc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Bc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Bc;<span class="pl-smi">nb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="LC550" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>nb;<span class="pl-smi">Cc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Cc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Cc;<span class="pl-smi">ob</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ob</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>ob;<span class="pl-smi">z</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">z</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>z;<span class="pl-smi">Dc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Dc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Dc;<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Ge</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">computeGroups</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">faces</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>a[d];<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">materialIndex</span><span class="pl-k">!==</span>c){c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">materialIndex</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span>d<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">start</span>,<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(f));</td>
      </tr>
      <tr>
        <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="LC551" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span>{start<span class="pl-k">:</span><span class="pl-c1">3</span><span class="pl-k">*</span>d,materialIndex<span class="pl-k">:</span>c}}}<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span>d<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">start</span>,<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(f));<span class="pl-c1">this</span>.<span class="pl-smi">groups</span><span class="pl-k">=</span>b},<span class="pl-en">fromGeometry</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">faces</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertices</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">faceVertexUvs</span>,e<span class="pl-k">=</span>d[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>d[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>,f<span class="pl-k">=</span>d[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>d[<span class="pl-c1">1</span>].<span class="pl-c1">length</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>h){<span class="pl-k">var</span> l<span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>h;m<span class="pl-k">++</span>)l[m]<span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span>.<span class="pl-smi">position</span><span class="pl-k">=</span>l}<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphNormals</span>,n<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>n){<span class="pl-k">var</span> p<span class="pl-k">=</span>[];<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>n;m<span class="pl-k">++</span>)p[m]<span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span>.<span class="pl-smi">normal</span><span class="pl-k">=</span>p}<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinIndices</span>,r<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinWeights</span>,u<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,y<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="LC552" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.DirectGeometry: Faceless geometries are not supported.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;m<span class="pl-k">++</span>){<span class="pl-k">var</span> w<span class="pl-k">=</span>b[m];<span class="pl-c1">this</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">push</span>(c[<span class="pl-smi">w</span>.<span class="pl-smi">a</span>],c[<span class="pl-smi">w</span>.<span class="pl-smi">b</span>],c[<span class="pl-smi">w</span>.<span class="pl-smi">c</span>]);<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-smi">vertexNormals</span>;<span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-smi">x</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">normals</span>.<span class="pl-c1">push</span>(x[<span class="pl-c1">0</span>],x[<span class="pl-c1">1</span>],x[<span class="pl-c1">2</span>])<span class="pl-k">:</span>(x<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-smi">normal</span>,<span class="pl-c1">this</span>.<span class="pl-smi">normals</span>.<span class="pl-c1">push</span>(x,x,x));x<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-smi">vertexColors</span>;<span class="pl-c1">3</span><span class="pl-k">===</span><span class="pl-smi">x</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">colors</span>.<span class="pl-c1">push</span>(x[<span class="pl-c1">0</span>],x[<span class="pl-c1">1</span>],x[<span class="pl-c1">2</span>])<span class="pl-k">:</span>(x<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">color</span>,<span class="pl-c1">this</span>.<span class="pl-smi">colors</span>.<span class="pl-c1">push</span>(x,x,x));<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>e<span class="pl-k">&amp;&amp;</span>(x<span class="pl-k">=</span>d[<span class="pl-c1">0</span>][m],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>x<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">uvs</span>.<span class="pl-c1">push</span>(x[<span class="pl-c1">0</span>],x[<span class="pl-c1">1</span>],x[<span class="pl-c1">2</span>])<span class="pl-k">:</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.DirectGeometry.fromGeometry(): Undefined vertexUv <span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="LC553" class="blob-code blob-code-inner js-file-line">m),<span class="pl-c1">this</span>.<span class="pl-smi">uvs</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">B</span>,<span class="pl-k">new</span> <span class="pl-en">B</span>,<span class="pl-k">new</span> <span class="pl-en">B</span>)));<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>(x<span class="pl-k">=</span>d[<span class="pl-c1">1</span>][m],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>x<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">uvs2</span>.<span class="pl-c1">push</span>(x[<span class="pl-c1">0</span>],x[<span class="pl-c1">1</span>],x[<span class="pl-c1">2</span>])<span class="pl-k">:</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 <span class="pl-pds">&quot;</span></span>,m),<span class="pl-c1">this</span>.<span class="pl-smi">uvs2</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">B</span>,<span class="pl-k">new</span> <span class="pl-en">B</span>,<span class="pl-k">new</span> <span class="pl-en">B</span>)));<span class="pl-k">for</span>(x<span class="pl-k">=</span><span class="pl-c1">0</span>;x<span class="pl-k">&lt;</span>h;x<span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">A</span><span class="pl-k">=</span>g[x].<span class="pl-smi">vertices</span>;l[x].<span class="pl-c1">push</span>(<span class="pl-c1">A</span>[<span class="pl-smi">w</span>.<span class="pl-smi">a</span>],<span class="pl-c1">A</span>[<span class="pl-smi">w</span>.<span class="pl-smi">b</span>],<span class="pl-c1">A</span>[<span class="pl-smi">w</span>.<span class="pl-smi">c</span>])}<span class="pl-k">for</span>(x<span class="pl-k">=</span><span class="pl-c1">0</span>;x<span class="pl-k">&lt;</span>n;x<span class="pl-k">++</span>)<span class="pl-c1">A</span><span class="pl-k">=</span>k[x].<span class="pl-smi">vertexNormals</span>[m],p[x].<span class="pl-c1">push</span>(<span class="pl-c1">A</span>.<span class="pl-smi">a</span>,<span class="pl-c1">A</span>.<span class="pl-smi">b</span>,<span class="pl-c1">A</span>.<span class="pl-smi">c</span>);u<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">skinIndices</span>.<span class="pl-c1">push</span>(q[<span class="pl-smi">w</span>.<span class="pl-smi">a</span>],q[<span class="pl-smi">w</span>.<span class="pl-smi">b</span>],q[<span class="pl-smi">w</span>.<span class="pl-smi">c</span>]);y<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">skinWeights</span>.<span class="pl-c1">push</span>(r[<span class="pl-smi">w</span>.<span class="pl-smi">a</span>],r[<span class="pl-smi">w</span>.<span class="pl-smi">b</span>],r[<span class="pl-smi">w</span>.<span class="pl-smi">c</span>])}<span class="pl-c1">this</span>.<span class="pl-en">computeGroups</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">verticesNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">verticesNeedUpdate</span>;</td>
      </tr>
      <tr>
        <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="LC554" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">normalsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalsNeedUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">colorsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">colorsNeedUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">uvsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">uvsNeedUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">groupsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">groupsNeedUpdate</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-k">var</span> Jf<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">za</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:D,isBufferGeometry:!0,getIndex:<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">index</span>},<span class="pl-en">setIndex</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">index</span><span class="pl-k">=</span><span class="pl-k">new</span> (<span class="pl-c1">65535</span><span class="pl-k">&lt;</span><span class="pl-en">He</span>(a)<span class="pl-k">?</span>ob<span class="pl-k">:</span>nb)(a,<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">index</span><span class="pl-k">=</span>a},<span class="pl-en">addAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">isBufferAttribute</span><span class="pl-k">||</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">isInterleavedBufferAttribute</span>))<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="LC555" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(a,<span class="pl-k">new</span> <span class="pl-en">L</span>(b,c));<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>index<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a)<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(b),<span class="pl-c1">this</span>;<span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>[a]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>[a]},<span class="pl-en">removeAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>[a];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">addGroup</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">groups</span>.<span class="pl-c1">push</span>({start<span class="pl-k">:</span>a,count<span class="pl-k">:</span>b,materialIndex<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">0</span>})},<span class="pl-en">clearGroups</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">groups</span><span class="pl-k">=</span>[]},<span class="pl-en">setDrawRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">drawRange</span>.<span class="pl-c1">start</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">drawRange</span>.<span class="pl-smi">count</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="LC556" class="blob-code blob-code-inner js-file-line">b},<span class="pl-en">applyMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-en">applyToBufferAttribute</span>(b),<span class="pl-smi">b</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">normal</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>((<span class="pl-k">new</span> <span class="pl-en">la</span>).<span class="pl-en">getNormalMatrix</span>(a).<span class="pl-en">applyToBufferAttribute</span>(b),<span class="pl-smi">b</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">computeBoundingBox</span>();<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">computeBoundingSphere</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">rotateX</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">makeRotationX</span>(b);<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">rotateY</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">makeRotationY</span>(b);</td>
      </tr>
      <tr>
        <td id="L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="LC557" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">rotateZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">makeRotationZ</span>(b);<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-en">makeTranslation</span>(b,c,d);<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">scale</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-en">makeScale</span>(b,c,d);<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">lookAt</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">H</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">lookAt</span>(b);<span class="pl-smi">a</span>.<span class="pl-en">updateMatrix</span>();<span class="pl-c1">this</span>.<span class="pl-en">applyMatrix</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrix</span>)}}(),<span class="pl-en">center</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;</td>
      </tr>
      <tr>
        <td id="L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="LC558" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">computeBoundingBox</span>();<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-en">getCenter</span>(a).<span class="pl-en">negate</span>();<span class="pl-c1">this</span>.<span class="pl-en">translate</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">setFromObject</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isPoints</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">isLine</span>){a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">z</span>(<span class="pl-c1">3</span><span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>,<span class="pl-c1">3</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">z</span>(<span class="pl-c1">3</span><span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-smi">colors</span>.<span class="pl-c1">length</span>,<span class="pl-c1">3</span>);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-en">copyVector3sArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">vertices</span>));<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-en">copyColorsArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">colors</span>));<span class="pl-smi">b</span>.<span class="pl-smi">lineDistances</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">lineDistances</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">z</span>(<span class="pl-smi">b</span>.<span class="pl-smi">lineDistances</span>.<span class="pl-c1">length</span>,<span class="pl-c1">1</span>),<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lineDistance<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="LC559" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">copyArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">lineDistances</span>)));<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">boundingSphere</span>.<span class="pl-en">clone</span>());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-en">clone</span>())}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-smi">isMesh</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">isGeometry</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">fromGeometry</span>(b);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>a[c];<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">e</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-c1">z</span><span class="pl-k">||</span><span class="pl-c1">0</span>)}<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(b,<span class="pl-c1">3</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">updateFromObject</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isMesh</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">__directGeometry</span>;<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">elementsNeedUpdate</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="LC560" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">elementsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">fromGeometry</span>(b);<span class="pl-smi">c</span>.<span class="pl-smi">verticesNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">verticesNeedUpdate</span>;<span class="pl-smi">c</span>.<span class="pl-smi">normalsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">normalsNeedUpdate</span>;<span class="pl-smi">c</span>.<span class="pl-smi">colorsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">colorsNeedUpdate</span>;<span class="pl-smi">c</span>.<span class="pl-smi">uvsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">uvsNeedUpdate</span>;<span class="pl-smi">c</span>.<span class="pl-smi">groupsNeedUpdate</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">groupsNeedUpdate</span>;<span class="pl-smi">b</span>.<span class="pl-smi">verticesNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">normalsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">colorsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">uvsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">groupsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;b<span class="pl-k">=</span>c}<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">verticesNeedUpdate</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-en">copyVector3sArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">vertices</span>),<span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-smi">verticesNeedUpdate</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="LC561" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">normalsNeedUpdate</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">normal</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-en">copyVector3sArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">normals</span>),<span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-smi">normalsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">colorsNeedUpdate</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>.<span class="pl-c1">color</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-en">copyColorsArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">colors</span>),<span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-smi">colorsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">b</span>.<span class="pl-smi">uvsNeedUpdate</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">uv</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-en">copyVector2sArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">uvs</span>),<span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-smi">uvsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">b</span>.<span class="pl-smi">lineDistancesNeedUpdate</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">lineDistance</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-en">copyArray</span>(<span class="pl-smi">b</span>.<span class="pl-smi">lineDistances</span>),<span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="LC562" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-smi">lineDistancesNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">b</span>.<span class="pl-smi">groupsNeedUpdate</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-en">computeGroups</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>),<span class="pl-c1">this</span>.<span class="pl-smi">groups</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">groups</span>,<span class="pl-smi">b</span>.<span class="pl-smi">groupsNeedUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">fromGeometry</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">__directGeometry</span><span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">Ge</span>).<span class="pl-en">fromGeometry</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">fromDirectGeometry</span>(<span class="pl-smi">a</span>.<span class="pl-smi">__directGeometry</span>)},<span class="pl-en">fromDirectGeometry</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">3</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>);<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>,(<span class="pl-k">new</span> <span class="pl-en">L</span>(b,<span class="pl-c1">3</span>)).<span class="pl-en">copyVector3sArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">vertices</span>));<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">normals</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">3</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">normals</span>.<span class="pl-c1">length</span>),<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,(<span class="pl-k">new</span> <span class="pl-en">L</span>(b,</td>
      </tr>
      <tr>
        <td id="L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="LC563" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">3</span>)).<span class="pl-en">copyVector3sArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">normals</span>)));<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">colors</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">3</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">colors</span>.<span class="pl-c1">length</span>),<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>,(<span class="pl-k">new</span> <span class="pl-en">L</span>(b,<span class="pl-c1">3</span>)).<span class="pl-en">copyColorsArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">colors</span>)));<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">uvs</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">uvs</span>.<span class="pl-c1">length</span>),<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv<span class="pl-pds">&quot;</span></span>,(<span class="pl-k">new</span> <span class="pl-en">L</span>(b,<span class="pl-c1">2</span>)).<span class="pl-en">copyVector2sArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">uvs</span>)));<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">uvs2</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">uvs2</span>.<span class="pl-c1">length</span>),<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uv2<span class="pl-pds">&quot;</span></span>,(<span class="pl-k">new</span> <span class="pl-en">L</span>(b,<span class="pl-c1">2</span>)).<span class="pl-en">copyVector2sArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">uvs2</span>)));<span class="pl-c1">this</span>.<span class="pl-smi">groups</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">groups</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> <span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>){b<span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>[c],e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="LC564" class="blob-code blob-code-inner js-file-line">d[e],h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">z</span>(<span class="pl-c1">3</span><span class="pl-k">*</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,<span class="pl-c1">3</span>);<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">h</span>.<span class="pl-en">copyVector3sArray</span>(g))}<span class="pl-c1">this</span>.<span class="pl-smi">morphAttributes</span>[c]<span class="pl-k">=</span>b}<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">skinIndices</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">z</span>(<span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">skinIndices</span>.<span class="pl-c1">length</span>,<span class="pl-c1">4</span>),<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>skinIndex<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-en">copyVector4sArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">skinIndices</span>)));<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">skinWeights</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">z</span>(<span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">skinWeights</span>.<span class="pl-c1">length</span>,<span class="pl-c1">4</span>),<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>skinWeight<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-en">copyVector4sArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">skinWeights</span>)));<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingSphere</span>.<span class="pl-en">clone</span>());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-en">clone</span>());<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">computeBoundingBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">null</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="LC565" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Xa</span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-en">setFromBufferAttribute</span>(a)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-en">makeEmpty</span>();(<span class="pl-c1">isNaN</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>)<span class="pl-k">||</span><span class="pl-c1">isNaN</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>)<span class="pl-k">||</span><span class="pl-c1">isNaN</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The &quot;position&quot; attribute is likely to have NaN values.<span class="pl-pds">&#39;</span></span>,<span class="pl-c1">this</span>)},<span class="pl-en">computeBoundingSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Xa</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="LC566" class="blob-code blob-code-inner js-file-line">(<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ha</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>;<span class="pl-k">if</span>(c){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span>.<span class="pl-smi">center</span>;<span class="pl-smi">a</span>.<span class="pl-en">setFromBufferAttribute</span>(c);<span class="pl-smi">a</span>.<span class="pl-en">getCenter</span>(d);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">count</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getX</span>(f),<span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getY</span>(f),<span class="pl-smi">b</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getZ</span>(f),e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(e,<span class="pl-smi">d</span>.<span class="pl-en">distanceToSquared</span>(b));<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(e);<span class="pl-c1">isNaN</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span>.<span class="pl-smi">radius</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The &quot;position&quot; attribute is likely to have NaN values.<span class="pl-pds">&#39;</span></span>,<span class="pl-c1">this</span>)}}}(),<span class="pl-en">computeFaceNormals</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},</td>
      </tr>
      <tr>
        <td id="L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="LC567" class="blob-code blob-code-inner js-file-line"><span class="pl-en">computeVertexNormals</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">index</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">groups</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">position</span>.<span class="pl-smi">array</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">normal</span>)<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">L</span>(<span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-smi">d</span>.<span class="pl-c1">length</span>),<span class="pl-c1">3</span>));<span class="pl-k">else</span> <span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">normal</span>.<span class="pl-smi">array</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>)e[f]<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">normal</span>.<span class="pl-smi">array</span>;<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,n<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">if</span>(a){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">array</span>;<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">addGroup</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">length</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;t<span class="pl-k">&lt;</span>q;<span class="pl-k">++</span>t){f<span class="pl-k">=</span>c[t];g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">start</span>;<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">count</span>;f<span class="pl-k">=</span>g;<span class="pl-k">for</span>(g<span class="pl-k">+=</span>r;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">+=</span><span class="pl-c1">3</span>){r<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span>a[f<span class="pl-k">+</span><span class="pl-c1">0</span>];<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span>a[f<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="LC568" class="blob-code blob-code-inner js-file-line">a[f<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-smi">h</span>.<span class="pl-en">fromArray</span>(d,r);<span class="pl-smi">l</span>.<span class="pl-en">fromArray</span>(d,u);<span class="pl-smi">m</span>.<span class="pl-en">fromArray</span>(d,y);<span class="pl-smi">k</span>.<span class="pl-en">subVectors</span>(m,l);<span class="pl-smi">n</span>.<span class="pl-en">subVectors</span>(h,l);<span class="pl-smi">k</span>.<span class="pl-en">cross</span>(n);e[r]<span class="pl-k">+=</span><span class="pl-smi">k</span>.<span class="pl-c1">x</span>;e[r<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">+=</span><span class="pl-smi">k</span>.<span class="pl-c1">y</span>;e[r<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">+=</span><span class="pl-smi">k</span>.<span class="pl-c1">z</span>;e[u]<span class="pl-k">+=</span><span class="pl-smi">k</span>.<span class="pl-c1">x</span>;e[u<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">+=</span><span class="pl-smi">k</span>.<span class="pl-c1">y</span>;e[u<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">+=</span><span class="pl-smi">k</span>.<span class="pl-c1">z</span>;e[y]<span class="pl-k">+=</span><span class="pl-smi">k</span>.<span class="pl-c1">x</span>;e[y<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">+=</span><span class="pl-smi">k</span>.<span class="pl-c1">y</span>;e[y<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">+=</span><span class="pl-smi">k</span>.<span class="pl-c1">z</span>}}}<span class="pl-k">else</span> <span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">+=</span><span class="pl-c1">9</span>)<span class="pl-smi">h</span>.<span class="pl-en">fromArray</span>(d,f),<span class="pl-smi">l</span>.<span class="pl-en">fromArray</span>(d,f<span class="pl-k">+</span><span class="pl-c1">3</span>),<span class="pl-smi">m</span>.<span class="pl-en">fromArray</span>(d,f<span class="pl-k">+</span><span class="pl-c1">6</span>),<span class="pl-smi">k</span>.<span class="pl-en">subVectors</span>(m,l),<span class="pl-smi">n</span>.<span class="pl-en">subVectors</span>(h,l),<span class="pl-smi">k</span>.<span class="pl-en">cross</span>(n),e[f]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">x</span>,e[f<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">y</span>,e[f<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">z</span>,e[f<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">x</span>,e[f<span class="pl-k">+</span><span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">y</span>,e[f<span class="pl-k">+</span><span class="pl-c1">5</span>]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">z</span>,e[f<span class="pl-k">+</span><span class="pl-c1">6</span>]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">x</span>,e[f<span class="pl-k">+</span><span class="pl-c1">7</span>]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">y</span>,e[f<span class="pl-k">+</span><span class="pl-c1">8</span>]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">z</span>;<span class="pl-c1">this</span>.<span class="pl-en">normalizeNormals</span>();<span class="pl-smi">b</span>.<span class="pl-smi">normal</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}},<span class="pl-en">merge</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="LC569" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">if</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">isBufferGeometry</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.<span class="pl-pds">&quot;</span></span>));<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>,d;<span class="pl-k">for</span>(d <span class="pl-k">in</span> c)<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">attributes</span>[d]){<span class="pl-k">var</span> e<span class="pl-k">=</span>c[d].<span class="pl-smi">array</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">attributes</span>[d],g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">array</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">itemSize</span><span class="pl-k">*</span>b;h<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>,f<span class="pl-k">++</span>)e[f]<span class="pl-k">=</span>g[h]}<span class="pl-k">return</span> <span class="pl-c1">this</span>}<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.<span class="pl-pds">&quot;</span></span>,a)},<span class="pl-en">normalizeNormals</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="LC570" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">normal</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">count</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getX</span>(c),<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getY</span>(c),<span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getZ</span>(c),<span class="pl-smi">a</span>.<span class="pl-c1">normalize</span>(),<span class="pl-smi">b</span>.<span class="pl-en">setXYZ</span>(c,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>)}}(),<span class="pl-en">toNonIndexed</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">index</span>)<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>;<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">D</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">index</span>.<span class="pl-smi">array</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>,d;<span class="pl-k">for</span>(d <span class="pl-k">in</span> c){<span class="pl-k">var</span> e<span class="pl-k">=</span>c[d],f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">array</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">itemSize</span>,h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">f.constructor</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">*</span>g),l<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>m;e<span class="pl-k">++</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>b[e]<span class="pl-k">*</span>g;<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span>g;n<span class="pl-k">++</span>)h[l<span class="pl-k">++</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="LC571" class="blob-code blob-code-inner js-file-line">f[k<span class="pl-k">++</span>]}<span class="pl-smi">a</span>.<span class="pl-en">addAttribute</span>(d,<span class="pl-k">new</span> <span class="pl-en">L</span>(h,g))}b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">groups</span>;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>m;e<span class="pl-k">++</span>)c<span class="pl-k">=</span>b[e],<span class="pl-smi">a</span>.<span class="pl-en">addGroup</span>(<span class="pl-smi">c</span>.<span class="pl-c1">start</span>,<span class="pl-smi">c</span>.<span class="pl-smi">count</span>,<span class="pl-smi">c</span>.<span class="pl-smi">materialIndex</span>);<span class="pl-k">return</span> a},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{metadata<span class="pl-k">:</span>{version<span class="pl-k">:</span><span class="pl-c1">4.5</span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>BufferGeometry<span class="pl-pds">&quot;</span></span>,generator<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>BufferGeometry.toJSON<span class="pl-pds">&quot;</span></span>}};<span class="pl-smi">a</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">uuid</span>;<span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">type</span>;<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span>);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">Object</span>.<span class="pl-c1">keys</span>(<span class="pl-c1">this</span>.<span class="pl-smi">userData</span>).<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">userData</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userData</span>);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">parameters</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">parameters</span>;<span class="pl-k">for</span>(e <span class="pl-k">in</span> b)<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b[e]<span class="pl-k">&amp;&amp;</span>(a[e]<span class="pl-k">=</span>b[e]);<span class="pl-k">return</span> a}<span class="pl-smi">a</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>{attributes<span class="pl-k">:</span>{}};<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="LC572" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">index</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-smi">c</span>.<span class="pl-smi">array</span>),<span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-c1">index</span><span class="pl-k">=</span>{type<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">array</span>.<span class="pl-c1">constructor</span>.<span class="pl-c1">name</span>,array<span class="pl-k">:</span>b});c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">attributes</span>;<span class="pl-k">for</span>(e <span class="pl-k">in</span> c){<span class="pl-k">var</span> d<span class="pl-k">=</span>c[e];b<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-smi">d</span>.<span class="pl-smi">array</span>);<span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-c1">attributes</span>[e]<span class="pl-k">=</span>{itemSize<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">itemSize</span>,type<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">array</span>.<span class="pl-c1">constructor</span>.<span class="pl-c1">name</span>,array<span class="pl-k">:</span>b,normalized<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">normalized</span>}}<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">groups</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-smi">groups</span><span class="pl-k">=</span><span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(<span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(e)));e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span>{center<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">center</span>.<span class="pl-en">toArray</span>(),radius<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">radius</span>});<span class="pl-k">return</span> a},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">D</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},</td>
      </tr>
      <tr>
        <td id="L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="LC573" class="blob-code blob-code-inner js-file-line"><span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;<span class="pl-c1">this</span>.<span class="pl-c1">index</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-c1">attributes</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">morphAttributes</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">groups</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">index</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(<span class="pl-smi">c</span>.<span class="pl-en">clone</span>());c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">attributes</span>;<span class="pl-k">for</span>(g <span class="pl-k">in</span> c)<span class="pl-c1">this</span>.<span class="pl-en">addAttribute</span>(g,c[g].<span class="pl-en">clone</span>());<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphAttributes</span>;<span class="pl-k">for</span>(g <span class="pl-k">in</span> d){<span class="pl-k">var</span> e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>d[g];c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>)<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(f[c].<span class="pl-en">clone</span>());<span class="pl-c1">this</span>.<span class="pl-smi">morphAttributes</span>[g]<span class="pl-k">=</span>e}<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">groups</span>;c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>)d<span class="pl-k">=</span>g[c],<span class="pl-c1">this</span>.<span class="pl-en">addGroup</span>(<span class="pl-smi">d</span>.<span class="pl-c1">start</span>,<span class="pl-smi">d</span>.<span class="pl-smi">count</span>,<span class="pl-smi">d</span>.<span class="pl-smi">materialIndex</span>);g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingBox</span>;</td>
      </tr>
      <tr>
        <td id="L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="LC574" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">clone</span>());g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">boundingSphere</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">clone</span>());<span class="pl-c1">this</span>.<span class="pl-smi">drawRange</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">drawRange</span>.<span class="pl-c1">start</span>;<span class="pl-c1">this</span>.<span class="pl-smi">drawRange</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">drawRange</span>.<span class="pl-smi">count</span>;<span class="pl-c1">this</span>.<span class="pl-smi">userData</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">userData</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">dispose</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dispose<span class="pl-pds">&quot;</span></span>})}});<span class="pl-smi">Nb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Nb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Nb;<span class="pl-smi">pb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">pb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>pb;<span class="pl-smi">Fc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Fc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Fc;<span class="pl-smi">rb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="LC575" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">rb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>rb;<span class="pl-k">var</span> Kf<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">za</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:I,isMaterial:!0,onBeforeCompile:<span class="pl-k">function</span>(){},<span class="pl-en">setValues</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a)<span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> a){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[b];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Material: &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; parameter is undefined.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shading<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b)<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>: .shading has been removed. Use the boolean .flatShading instead.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">this</span>.<span class="pl-smi">flatShading</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">===</span>c<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>[b];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d<span class="pl-k">?</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="LC576" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>: &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; is not a property of this material.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">isColor</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">set</span>(c)<span class="pl-k">:</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">isVector3</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">isVector3</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-en">copy</span>(c)<span class="pl-k">:</span><span class="pl-c1">this</span>[b]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>overdraw<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-c1">Number</span>(c)<span class="pl-k">:</span>c}}},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c;<span class="pl-k">for</span>(c <span class="pl-k">in</span> a){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[c];<span class="pl-k">delete</span> <span class="pl-smi">d</span>.<span class="pl-smi">metadata</span>;<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(d)}<span class="pl-k">return</span> b}<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a;c<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>{textures<span class="pl-k">:</span>{},images<span class="pl-k">:</span>{}});<span class="pl-k">var</span> d<span class="pl-k">=</span>{metadata<span class="pl-k">:</span>{version<span class="pl-k">:</span><span class="pl-c1">4.5</span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Material<span class="pl-pds">&quot;</span></span>,generator<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Material.toJSON<span class="pl-pds">&quot;</span></span>}};<span class="pl-smi">d</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">uuid</span>;<span class="pl-smi">d</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">type</span>;<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span>);<span class="pl-c1">this</span>.<span class="pl-c1">color</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-smi">isColor</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-c1">color</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="LC577" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">getHex</span>());<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">roughness</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">roughness</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">roughness</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">metalness</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">metalness</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">metalness</span>);<span class="pl-c1">this</span>.<span class="pl-smi">emissive</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">emissive</span>.<span class="pl-smi">isColor</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">emissive</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">emissive</span>.<span class="pl-en">getHex</span>());<span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">emissiveIntensity</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">emissiveIntensity</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">emissiveIntensity</span>);<span class="pl-c1">this</span>.<span class="pl-smi">specular</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">specular</span>.<span class="pl-smi">isColor</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">specular</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">specular</span>.<span class="pl-en">getHex</span>());<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">shininess</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">shininess</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">shininess</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">clearCoat</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">clearCoat</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">clearCoat</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">clearCoatRoughness</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">clearCoatRoughness</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="LC578" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">clearCoatRoughness</span>);<span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">map</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">map</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>);<span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>);<span class="pl-c1">this</span>.<span class="pl-smi">lightMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">lightMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">lightMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">lightMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>);<span class="pl-c1">this</span>.<span class="pl-smi">aoMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">aoMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">aoMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aoMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>,<span class="pl-smi">d</span>.<span class="pl-smi">aoMapIntensity</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aoMapIntensity</span>);<span class="pl-c1">this</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">bumpMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bumpMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>,<span class="pl-smi">d</span>.<span class="pl-smi">bumpScale</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bumpScale</span>);<span class="pl-c1">this</span>.<span class="pl-smi">normalMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">normalMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="LC579" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">d</span>.<span class="pl-smi">normalMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">normalMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>,<span class="pl-smi">d</span>.<span class="pl-smi">normalMapType</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">normalMapType</span>,<span class="pl-smi">d</span>.<span class="pl-smi">normalScale</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">normalScale</span>.<span class="pl-en">toArray</span>());<span class="pl-c1">this</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">displacementMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">displacementMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>,<span class="pl-smi">d</span>.<span class="pl-smi">displacementScale</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">displacementScale</span>,<span class="pl-smi">d</span>.<span class="pl-smi">displacementBias</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">displacementBias</span>);<span class="pl-c1">this</span>.<span class="pl-smi">roughnessMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">roughnessMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">roughnessMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">roughnessMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>);<span class="pl-c1">this</span>.<span class="pl-smi">metalnessMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">metalnessMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">metalnessMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">metalnessMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>);</td>
      </tr>
      <tr>
        <td id="L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="LC580" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">emissiveMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">emissiveMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>);<span class="pl-c1">this</span>.<span class="pl-smi">specularMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">specularMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">specularMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">specularMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>);<span class="pl-c1">this</span>.<span class="pl-smi">envMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">envMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">envMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">envMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>,<span class="pl-smi">d</span>.<span class="pl-smi">reflectivity</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">reflectivity</span>);<span class="pl-c1">this</span>.<span class="pl-smi">gradientMap</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">gradientMap</span>.<span class="pl-smi">isTexture</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">gradientMap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">gradientMap</span>.<span class="pl-en">toJSON</span>(a).<span class="pl-smi">uuid</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">size</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">size</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">sizeAttenuation</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">sizeAttenuation</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">sizeAttenuation</span>);<span class="pl-c1">1</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="LC581" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">blending</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">blending</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">blending</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">flatShading</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">flatShading</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">flatShading</span>);<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">side</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">side</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">side</span>);<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">vertexColors</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">vertexColors</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertexColors</span>);<span class="pl-c1">1</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">opacity</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">opacity</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">opacity</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">transparent</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">transparent</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">transparent</span>);<span class="pl-smi">d</span>.<span class="pl-smi">depthFunc</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">depthFunc</span>;<span class="pl-smi">d</span>.<span class="pl-smi">depthTest</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">depthTest</span>;<span class="pl-smi">d</span>.<span class="pl-smi">depthWrite</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">depthWrite</span>;<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rotation</span>);<span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">linewidth</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">linewidth</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">linewidth</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">dashSize</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">dashSize</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="LC582" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">dashSize</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">gapSize</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">gapSize</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">gapSize</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">scale</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">scale</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">scale</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">dithering</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">dithering</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">alphaTest</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">alphaTest</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">alphaTest</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">premultipliedAlpha</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">premultipliedAlpha</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">premultipliedAlpha</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span>);<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinecap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">wireframeLinecap</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinecap</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>round<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinejoin</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="LC583" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">d</span>.<span class="pl-smi">wireframeLinejoin</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinejoin</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>{}<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(<span class="pl-c1">this</span>.<span class="pl-smi">userData</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">userData</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">userData</span>);c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">textures</span>),a<span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-c1">images</span>),<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">textures</span><span class="pl-k">=</span>c),<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-c1">images</span><span class="pl-k">=</span>a));<span class="pl-k">return</span> d},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>;<span class="pl-c1">this</span>.<span class="pl-smi">fog</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fog</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lights</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lights</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blending</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">blending</span>;<span class="pl-c1">this</span>.<span class="pl-smi">side</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">side</span>;<span class="pl-c1">this</span>.<span class="pl-smi">flatShading</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="LC584" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">flatShading</span>;<span class="pl-c1">this</span>.<span class="pl-smi">vertexColors</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexColors</span>;<span class="pl-c1">this</span>.<span class="pl-smi">opacity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">opacity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">transparent</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">transparent</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blendSrc</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">blendSrc</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blendDst</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">blendDst</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blendEquation</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">blendEquation</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blendSrcAlpha</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">blendSrcAlpha</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blendDstAlpha</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">blendDstAlpha</span>;<span class="pl-c1">this</span>.<span class="pl-smi">blendEquationAlpha</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">blendEquationAlpha</span>;<span class="pl-c1">this</span>.<span class="pl-smi">depthFunc</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">depthFunc</span>;<span class="pl-c1">this</span>.<span class="pl-smi">depthTest</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">depthTest</span>;<span class="pl-c1">this</span>.<span class="pl-smi">depthWrite</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">depthWrite</span>;<span class="pl-c1">this</span>.<span class="pl-smi">colorWrite</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">colorWrite</span>;<span class="pl-c1">this</span>.<span class="pl-smi">precision</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">precision</span>;<span class="pl-c1">this</span>.<span class="pl-smi">polygonOffset</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">polygonOffset</span>;<span class="pl-c1">this</span>.<span class="pl-smi">polygonOffsetFactor</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">polygonOffsetFactor</span>;</td>
      </tr>
      <tr>
        <td id="L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="LC585" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">polygonOffsetUnits</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">polygonOffsetUnits</span>;<span class="pl-c1">this</span>.<span class="pl-smi">dithering</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dithering</span>;<span class="pl-c1">this</span>.<span class="pl-smi">alphaTest</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">alphaTest</span>;<span class="pl-c1">this</span>.<span class="pl-smi">premultipliedAlpha</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">premultipliedAlpha</span>;<span class="pl-c1">this</span>.<span class="pl-smi">overdraw</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">overdraw</span>;<span class="pl-c1">this</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span>;<span class="pl-c1">this</span>.<span class="pl-smi">userData</span><span class="pl-k">=</span><span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(<span class="pl-c1">JSON</span>.<span class="pl-c1">stringify</span>(<span class="pl-smi">a</span>.<span class="pl-smi">userData</span>));<span class="pl-c1">this</span>.<span class="pl-smi">clipShadows</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clipShadows</span>;<span class="pl-c1">this</span>.<span class="pl-smi">clipIntersection</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clipIntersection</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clippingPlanes</span>,c<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>b){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">=</span><span class="pl-c1">Array</span>(d);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">!==</span>d;<span class="pl-k">++</span>e)c[e]<span class="pl-k">=</span>b[e].<span class="pl-en">clone</span>()}<span class="pl-c1">this</span>.<span class="pl-smi">clippingPlanes</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">shadowSide</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shadowSide</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">dispose</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dispose<span class="pl-pds">&quot;</span></span>})}});</td>
      </tr>
      <tr>
        <td id="L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="LC586" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">ua</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ua</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>ua;<span class="pl-smi">ua</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isMeshBasicMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">ua</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>);<span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">map</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lightMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lightMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lightMapIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lightMapIntensity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aoMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aoMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aoMapIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aoMapIntensity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">specularMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">specularMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">alphaMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">envMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">envMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">combine</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">combine</span>;<span class="pl-c1">this</span>.<span class="pl-smi">reflectivity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">reflectivity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">refractionRatio</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">refractionRatio</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="LC587" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">wireframe</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinewidth</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinecap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinecap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinejoin</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinejoin</span>;<span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinning</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Fa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Fa</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Fa;<span class="pl-smi">Fa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isShaderMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Fa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">fragmentShader</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fragmentShader</span>;<span class="pl-c1">this</span>.<span class="pl-smi">vertexShader</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexShader</span>;<span class="pl-c1">this</span>.<span class="pl-smi">uniforms</span><span class="pl-k">=</span><span class="pl-smi">Ba</span>.<span class="pl-en">clone</span>(<span class="pl-smi">a</span>.<span class="pl-smi">uniforms</span>);<span class="pl-c1">this</span>.<span class="pl-smi">defines</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({},</td>
      </tr>
      <tr>
        <td id="L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="LC588" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">defines</span>);<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframe</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinewidth</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lights</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lights</span>;<span class="pl-c1">this</span>.<span class="pl-smi">clipping</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clipping</span>;<span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinning</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphNormals</span>;<span class="pl-c1">this</span>.<span class="pl-smi">extensions</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">extensions</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Fa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-smi">a</span>.<span class="pl-smi">uniforms</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">uniforms</span>;<span class="pl-smi">a</span>.<span class="pl-smi">vertexShader</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">vertexShader</span>;<span class="pl-smi">a</span>.<span class="pl-smi">fragmentShader</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">fragmentShader</span>;<span class="pl-k">return</span> a};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">sb</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>.<span class="pl-en">copy</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>.<span class="pl-en">copy</span>(b);</td>
      </tr>
      <tr>
        <td id="L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="LC589" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">origin</span>);<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">direction</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">at</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Ray: .at() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>).<span class="pl-en">multiplyScalar</span>(a).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>)},<span class="pl-en">lookAt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>.<span class="pl-en">copy</span>(a).<span class="pl-c1">sub</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>).<span class="pl-c1">normalize</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">recast</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-en">at</span>(b,a));<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),</td>
      </tr>
      <tr>
        <td id="L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="LC590" class="blob-code blob-code-inner js-file-line"><span class="pl-en">closestPointToPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Ray: .closestPointToPoint() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-smi">b</span>.<span class="pl-en">subVectors</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>);a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">dot</span>(<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>);<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>).<span class="pl-en">multiplyScalar</span>(a).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>)},<span class="pl-en">distanceToPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">this</span>.<span class="pl-en">distanceSqToPoint</span>(a))},<span class="pl-en">distanceSqToPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(b,<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>).<span class="pl-en">dot</span>(<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>c)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">origin</span>.<span class="pl-en">distanceToSquared</span>(b);</td>
      </tr>
      <tr>
        <td id="L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="LC591" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>).<span class="pl-en">multiplyScalar</span>(c).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">distanceToSquared</span>(b)}}(),<span class="pl-en">distanceSqToSegment</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(d).<span class="pl-c1">add</span>(e).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">.5</span>);<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(e).<span class="pl-c1">sub</span>(d).<span class="pl-c1">normalize</span>();<span class="pl-smi">c</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>).<span class="pl-c1">sub</span>(a);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-smi">d</span>.<span class="pl-en">distanceTo</span>(e),l<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">direction</span>.<span class="pl-en">dot</span>(b),m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">dot</span>(<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>),k<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-en">dot</span>(b),n<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">lengthSq</span>(),p<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>l<span class="pl-k">*</span>l);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>p){d<span class="pl-k">=</span>l<span class="pl-k">*</span>k<span class="pl-k">-</span>m;e<span class="pl-k">=</span>l<span class="pl-k">*</span>m<span class="pl-k">-</span>k;<span class="pl-k">var</span> q<span class="pl-k">=</span>h<span class="pl-k">*</span>p;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>d<span class="pl-k">?</span>e<span class="pl-k">&gt;=</span><span class="pl-k">-</span>q<span class="pl-k">?</span>e<span class="pl-k">&lt;=</span>q<span class="pl-k">?</span>(h<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>p,d<span class="pl-k">*=</span>h,e<span class="pl-k">*=</span>h,l<span class="pl-k">=</span>d<span class="pl-k">*</span>(d<span class="pl-k">+</span>l<span class="pl-k">*</span>e<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>m)<span class="pl-k">+</span>e<span class="pl-k">*</span>(l<span class="pl-k">*</span>d<span class="pl-k">+</span>e<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>k)<span class="pl-k">+</span>n)<span class="pl-k">:</span>(e<span class="pl-k">=</span>h,d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="LC592" class="blob-code blob-code-inner js-file-line"><span class="pl-k">-</span>(l<span class="pl-k">*</span>e<span class="pl-k">+</span>m)),l<span class="pl-k">=</span><span class="pl-k">-</span>d<span class="pl-k">*</span>d<span class="pl-k">+</span>e<span class="pl-k">*</span>(e<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>k)<span class="pl-k">+</span>n)<span class="pl-k">:</span>(e<span class="pl-k">=</span><span class="pl-k">-</span>h,d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span>(l<span class="pl-k">*</span>e<span class="pl-k">+</span>m)),l<span class="pl-k">=</span><span class="pl-k">-</span>d<span class="pl-k">*</span>d<span class="pl-k">+</span>e<span class="pl-k">*</span>(e<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>k)<span class="pl-k">+</span>n)<span class="pl-k">:</span>e<span class="pl-k">&lt;=</span><span class="pl-k">-</span>q<span class="pl-k">?</span>(d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span>(<span class="pl-k">-</span>l<span class="pl-k">*</span>h<span class="pl-k">+</span>m)),e<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>d<span class="pl-k">?</span><span class="pl-k">-</span>h<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-k">-</span>h,<span class="pl-k">-</span>k),h),l<span class="pl-k">=</span><span class="pl-k">-</span>d<span class="pl-k">*</span>d<span class="pl-k">+</span>e<span class="pl-k">*</span>(e<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>k)<span class="pl-k">+</span>n)<span class="pl-k">:</span>e<span class="pl-k">&lt;=</span>q<span class="pl-k">?</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-k">-</span>h,<span class="pl-k">-</span>k),h),l<span class="pl-k">=</span>e<span class="pl-k">*</span>(e<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>k)<span class="pl-k">+</span>n)<span class="pl-k">:</span>(d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span>(l<span class="pl-k">*</span>h<span class="pl-k">+</span>m)),e<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>d<span class="pl-k">?</span>h<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-k">-</span>h,<span class="pl-k">-</span>k),h),l<span class="pl-k">=</span><span class="pl-k">-</span>d<span class="pl-k">*</span>d<span class="pl-k">+</span>e<span class="pl-k">*</span>(e<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>k)<span class="pl-k">+</span>n)}<span class="pl-k">else</span> e<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>l<span class="pl-k">?</span><span class="pl-k">-</span>h<span class="pl-k">:</span>h,d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-k">-</span>(l<span class="pl-k">*</span>e<span class="pl-k">+</span>m)),l<span class="pl-k">=</span><span class="pl-k">-</span>d<span class="pl-k">*</span>d<span class="pl-k">+</span>e<span class="pl-k">*</span>(e<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>k)<span class="pl-k">+</span>n;f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>).<span class="pl-en">multiplyScalar</span>(d).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>);g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">copy</span>(b).<span class="pl-en">multiplyScalar</span>(e).<span class="pl-c1">add</span>(a);<span class="pl-k">return</span> l}}(),<span class="pl-en">intersectSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="LC593" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(<span class="pl-smi">b</span>.<span class="pl-smi">center</span>,<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">dot</span>(<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>),e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">dot</span>(a)<span class="pl-k">-</span>d<span class="pl-k">*</span>d;b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">radius</span><span class="pl-k">*</span><span class="pl-smi">b</span>.<span class="pl-smi">radius</span>;<span class="pl-k">if</span>(e<span class="pl-k">&gt;</span>b)<span class="pl-k">return</span> <span class="pl-c1">null</span>;b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(b<span class="pl-k">-</span>e);e<span class="pl-k">=</span>d<span class="pl-k">-</span>b;d<span class="pl-k">+=</span>b;<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>e<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">at</span>(d,c)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">at</span>(e,c)}}(),<span class="pl-en">intersectsSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">distanceToPoint</span>(<span class="pl-smi">a</span>.<span class="pl-smi">center</span>)<span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span>},<span class="pl-en">distanceToPlane</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-en">dot</span>(<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-en">distanceToPoint</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>)<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">null</span>;a<span class="pl-k">=</span><span class="pl-k">-</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>.<span class="pl-en">dot</span>(<span class="pl-smi">a</span>.<span class="pl-smi">normal</span>)<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">constant</span>)<span class="pl-k">/</span>b;<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&lt;=</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-c1">null</span>},<span class="pl-en">intersectPlane</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="LC594" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">distanceToPlane</span>(a);<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">===</span>a<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">at</span>(a,b)},<span class="pl-en">intersectsPlane</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">distanceToPoint</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>);<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-smi">normal</span>.<span class="pl-en">dot</span>(<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>)<span class="pl-k">*</span>b<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">intersectBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">direction</span>.<span class="pl-c1">x</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">direction</span>.<span class="pl-c1">y</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">direction</span>.<span class="pl-c1">z</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">origin</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c){<span class="pl-k">var</span> g<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>)<span class="pl-k">*</span>c;c<span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>}<span class="pl-k">else</span> g<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>)<span class="pl-k">*</span>c,c<span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>d){<span class="pl-k">var</span> h<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>)<span class="pl-k">*</span>d;d<span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>}<span class="pl-k">else</span> h<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>)<span class="pl-k">*</span>d,d<span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>;<span class="pl-k">if</span>(g<span class="pl-k">&gt;</span>d<span class="pl-k">||</span>h<span class="pl-k">&gt;</span>c)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">if</span>(h<span class="pl-k">&gt;</span>g<span class="pl-k">||</span>g<span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="LC595" class="blob-code blob-code-inner js-file-line">g)g<span class="pl-k">=</span>h;<span class="pl-k">if</span>(d<span class="pl-k">&lt;</span>c<span class="pl-k">||</span>c<span class="pl-k">!==</span>c)c<span class="pl-k">=</span>d;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>e<span class="pl-k">?</span>(h<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">z</span>)<span class="pl-k">*</span>e,a<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">z</span>)<span class="pl-k">*</span>e)<span class="pl-k">:</span>(h<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">z</span>)<span class="pl-k">*</span>e,a<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">z</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">z</span>)<span class="pl-k">*</span>e);<span class="pl-k">if</span>(g<span class="pl-k">&gt;</span>a<span class="pl-k">||</span>h<span class="pl-k">&gt;</span>c)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">if</span>(h<span class="pl-k">&gt;</span>g<span class="pl-k">||</span>g<span class="pl-k">!==</span>g)g<span class="pl-k">=</span>h;<span class="pl-k">if</span>(a<span class="pl-k">&lt;</span>c<span class="pl-k">||</span>c<span class="pl-k">!==</span>c)c<span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>c<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">at</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>g<span class="pl-k">?</span>g<span class="pl-k">:</span>c,b)},<span class="pl-en">intersectsBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-en">intersectBox</span>(b,a)}}(),<span class="pl-en">intersectTriangle</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">l</span>){<span class="pl-smi">b</span>.<span class="pl-en">subVectors</span>(f,e);<span class="pl-smi">c</span>.<span class="pl-en">subVectors</span>(g,e);<span class="pl-smi">d</span>.<span class="pl-en">crossVectors</span>(b,c);f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">direction</span>.<span class="pl-en">dot</span>(d);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>f){<span class="pl-k">if</span>(h)<span class="pl-k">return</span> <span class="pl-c1">null</span>;h<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="LC596" class="blob-code blob-code-inner js-file-line">f)h<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-k">-</span>f;<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>,e);e<span class="pl-k">=</span>h<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">direction</span>.<span class="pl-en">dot</span>(<span class="pl-smi">c</span>.<span class="pl-en">crossVectors</span>(a,c));<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>e)<span class="pl-k">return</span> <span class="pl-c1">null</span>;g<span class="pl-k">=</span>h<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">direction</span>.<span class="pl-en">dot</span>(<span class="pl-smi">b</span>.<span class="pl-en">cross</span>(a));<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>g<span class="pl-k">||</span>e<span class="pl-k">+</span>g<span class="pl-k">&gt;</span>f)<span class="pl-k">return</span> <span class="pl-c1">null</span>;e<span class="pl-k">=</span><span class="pl-k">-</span>h<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-en">dot</span>(d);<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>e<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">at</span>(e<span class="pl-k">/</span>f,l)}}(),<span class="pl-en">applyMatrix4</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>.<span class="pl-en">applyMatrix4</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>.<span class="pl-en">transformDirection</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">origin</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">origin</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">direction</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">direction</span>)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Qb</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">start</span>.<span class="pl-en">copy</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">end</span>.<span class="pl-en">copy</span>(b);</td>
      </tr>
      <tr>
        <td id="L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="LC597" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">start</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-c1">start</span>);<span class="pl-c1">this</span>.<span class="pl-smi">end</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">end</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getCenter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Line3: .getCenter() target is now required<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">addVectors</span>(<span class="pl-c1">this</span>.<span class="pl-c1">start</span>,<span class="pl-c1">this</span>.<span class="pl-smi">end</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">.5</span>)},<span class="pl-en">delta</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Line3: .delta() target is now required<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">end</span>,<span class="pl-c1">this</span>.<span class="pl-c1">start</span>)},<span class="pl-en">distanceSq</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">start</span>.<span class="pl-en">distanceToSquared</span>(<span class="pl-c1">this</span>.<span class="pl-smi">end</span>)},</td>
      </tr>
      <tr>
        <td id="L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="LC598" class="blob-code blob-code-inner js-file-line"><span class="pl-en">distance</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">start</span>.<span class="pl-en">distanceTo</span>(<span class="pl-c1">this</span>.<span class="pl-smi">end</span>)},<span class="pl-en">at</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Line3: .at() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">delta</span>(b).<span class="pl-en">multiplyScalar</span>(a).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-c1">start</span>)},<span class="pl-en">closestPointToPointParameter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(c,<span class="pl-c1">this</span>.<span class="pl-c1">start</span>);<span class="pl-smi">b</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">end</span>,<span class="pl-c1">this</span>.<span class="pl-c1">start</span>);c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">dot</span>(b);c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">dot</span>(a)<span class="pl-k">/</span>c;d<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">clamp</span>(c,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>));<span class="pl-k">return</span> c}}(),<span class="pl-en">closestPointToPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">closestPointToPointParameter</span>(a,b);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="LC599" class="blob-code blob-code-inner js-file-line">(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Line3: .closestPointToPoint() target is now required<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">delta</span>(c).<span class="pl-en">multiplyScalar</span>(a).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-c1">start</span>)},<span class="pl-en">applyMatrix4</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">start</span>.<span class="pl-en">applyMatrix4</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">end</span>.<span class="pl-en">applyMatrix4</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">start</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-c1">start</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">end</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">end</span>)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(ta,{<span class="pl-en">getNormal</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .getNormal() target is now required<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-smi">e</span>.<span class="pl-en">subVectors</span>(d,c);<span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(b,</td>
      </tr>
      <tr>
        <td id="L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="LC600" class="blob-code blob-code-inner js-file-line">c);<span class="pl-smi">e</span>.<span class="pl-en">cross</span>(a);b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">lengthSq</span>();<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&lt;</span>b<span class="pl-k">?</span><span class="pl-smi">e</span>.<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(b))<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)}}(),<span class="pl-en">getBarycoord</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){<span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(g,e);<span class="pl-smi">b</span>.<span class="pl-en">subVectors</span>(f,e);<span class="pl-smi">c</span>.<span class="pl-en">subVectors</span>(d,e);d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">dot</span>(a);e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">dot</span>(b);f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">dot</span>(c);<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">dot</span>(b);g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">dot</span>(c);<span class="pl-k">var</span> m<span class="pl-k">=</span>d<span class="pl-k">*</span>l<span class="pl-k">-</span>e<span class="pl-k">*</span>e;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .getBarycoord() target is now required<span class="pl-pds">&quot;</span></span>),h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>m)<span class="pl-k">return</span> <span class="pl-smi">h</span>.<span class="pl-c1">set</span>(<span class="pl-k">-</span><span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);m<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>m;l<span class="pl-k">=</span>(l<span class="pl-k">*</span>f<span class="pl-k">-</span>e<span class="pl-k">*</span>g)<span class="pl-k">*</span>m;d<span class="pl-k">=</span>(d<span class="pl-k">*</span>g<span class="pl-k">-</span>e<span class="pl-k">*</span>f)<span class="pl-k">*</span>m;<span class="pl-k">return</span> <span class="pl-smi">h</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>l<span class="pl-k">-</span>d,d,l)}}(),<span class="pl-en">containsPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="LC601" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-smi">ta</span>.<span class="pl-en">getBarycoord</span>(b,c,d,e,a);<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>}}()});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ta</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(b);<span class="pl-c1">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">copy</span>(c);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromPointsAndIndices</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(a[b]);<span class="pl-c1">this</span>.<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(a[c]);<span class="pl-c1">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">copy</span>(a[d]);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">a</span>);<span class="pl-c1">this</span>.<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">b</span>);<span class="pl-c1">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">c</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getArea</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">c</span>,</td>
      </tr>
      <tr>
        <td id="L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="LC602" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">b</span>);<span class="pl-smi">b</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">a</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span>);<span class="pl-k">return</span>.<span class="pl-ii">5</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-en">cross</span>(b).<span class="pl-c1">length</span>()}}(),<span class="pl-en">getMidpoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .getMidpoint() target is now required<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">addVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">a</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span>).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">c</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>)},<span class="pl-en">getNormal</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">ta</span>.<span class="pl-en">getNormal</span>(<span class="pl-c1">this</span>.<span class="pl-smi">a</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span>,<span class="pl-c1">this</span>.<span class="pl-smi">c</span>,a)},<span class="pl-en">getPlane</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .getPlane() target is now required<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">setFromCoplanarPoints</span>(<span class="pl-c1">this</span>.<span class="pl-smi">a</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span>,<span class="pl-c1">this</span>.<span class="pl-smi">c</span>)},<span class="pl-en">getBarycoord</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="LC603" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">ta</span>.<span class="pl-en">getBarycoord</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span>,<span class="pl-c1">this</span>.<span class="pl-smi">c</span>,b)},<span class="pl-en">containsPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">ta</span>.<span class="pl-en">containsPoint</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span>,<span class="pl-c1">this</span>.<span class="pl-smi">c</span>)},<span class="pl-en">intersectsBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">intersectsTriangle</span>(<span class="pl-c1">this</span>)},<span class="pl-en">closestPointToPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ia</span>,b<span class="pl-k">=</span>[<span class="pl-k">new</span> <span class="pl-en">Qb</span>,<span class="pl-k">new</span> <span class="pl-en">Qb</span>,<span class="pl-k">new</span> <span class="pl-en">Qb</span>],c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .closestPointToPoint() target is now required<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">Infinity</span>;<span class="pl-smi">a</span>.<span class="pl-en">setFromCoplanarPoints</span>(<span class="pl-c1">this</span>.<span class="pl-smi">a</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span>,<span class="pl-c1">this</span>.<span class="pl-smi">c</span>);<span class="pl-smi">a</span>.<span class="pl-en">projectPoint</span>(e,c);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-en">containsPoint</span>(c))<span class="pl-smi">f</span>.<span class="pl-en">copy</span>(c);</td>
      </tr>
      <tr>
        <td id="L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="LC604" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span> <span class="pl-k">for</span>(b[<span class="pl-c1">0</span>].<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-smi">a</span>,<span class="pl-c1">this</span>.<span class="pl-smi">b</span>),b[<span class="pl-c1">1</span>].<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-smi">b</span>,<span class="pl-c1">this</span>.<span class="pl-smi">c</span>),b[<span class="pl-c1">2</span>].<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-smi">c</span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>),e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>){b[e].<span class="pl-en">closestPointToPoint</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>,d);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">distanceToSquared</span>(d);h<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>h,<span class="pl-smi">f</span>.<span class="pl-en">copy</span>(d))}<span class="pl-k">return</span> f}}(),<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">a</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">b</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">c</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">c</span>)}});<span class="pl-smi">va</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:va,isMesh:!0,setDrawMode:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">drawMode</span><span class="pl-k">=</span>a},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">drawMode</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">drawMode</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargetInfluences</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="LC605" class="blob-code blob-code-inner js-file-line">(<span class="pl-c1">this</span>.<span class="pl-smi">morphTargetInfluences</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargetInfluences</span>.<span class="pl-c1">slice</span>());<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargetDictionary</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">morphTargetDictionary</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({},<span class="pl-smi">a</span>.<span class="pl-smi">morphTargetDictionary</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">updateMorphTargets</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isBufferGeometry</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphAttributes</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-c1">keys</span>(a);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[b[<span class="pl-c1">0</span>]];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c)<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-smi">morphTargetInfluences</span><span class="pl-k">=</span>[],<span class="pl-c1">this</span>.<span class="pl-smi">morphTargetDictionary</span><span class="pl-k">=</span>{},a<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>b;a<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>c[a].<span class="pl-c1">name</span><span class="pl-k">||</span><span class="pl-c1">String</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">morphTargetInfluences</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">morphTargetDictionary</span>[d]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="LC606" class="blob-code blob-code-inner js-file-line">a}}}<span class="pl-k">else</span> <span class="pl-k">if</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-smi">morphTargetInfluences</span><span class="pl-k">=</span>[],<span class="pl-c1">this</span>.<span class="pl-smi">morphTargetDictionary</span><span class="pl-k">=</span>{},a<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>b;a<span class="pl-k">++</span>)d<span class="pl-k">=</span>c[a].<span class="pl-c1">name</span><span class="pl-k">||</span><span class="pl-c1">String</span>(a),<span class="pl-c1">this</span>.<span class="pl-smi">morphTargetInfluences</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>),<span class="pl-c1">this</span>.<span class="pl-smi">morphTargetDictionary</span>[d]<span class="pl-k">=</span>a},<span class="pl-en">raycast</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-smi">ta</span>.<span class="pl-en">getBarycoord</span>(a,b,c,d,u);<span class="pl-smi">e</span>.<span class="pl-en">multiplyScalar</span>(<span class="pl-smi">u</span>.<span class="pl-c1">x</span>);<span class="pl-smi">f</span>.<span class="pl-en">multiplyScalar</span>(<span class="pl-smi">u</span>.<span class="pl-c1">y</span>);<span class="pl-smi">g</span>.<span class="pl-en">multiplyScalar</span>(<span class="pl-smi">u</span>.<span class="pl-c1">z</span>);<span class="pl-smi">e</span>.<span class="pl-c1">add</span>(f).<span class="pl-c1">add</span>(g);<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-en">clone</span>()}function b(a,b,c,d,e,f,g,h){if(null===(1===b.side?d.intersectTriangle(g,f,e,!0,h):d.intersectTriangle(e,</td>
      </tr>
      <tr>
        <td id="L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="LC607" class="blob-code blob-code-inner js-file-line">f,g,<span class="pl-c1">2</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">side</span>,h)))<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-smi">w</span>.<span class="pl-en">copy</span>(h);<span class="pl-smi">w</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>);b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">origin</span>.<span class="pl-en">distanceTo</span>(w);<span class="pl-k">return</span> b<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-smi">near</span><span class="pl-k">||</span>b<span class="pl-k">&gt;</span><span class="pl-smi">c</span>.<span class="pl-smi">far</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span>{distance<span class="pl-k">:</span>b,point<span class="pl-k">:</span><span class="pl-smi">w</span>.<span class="pl-en">clone</span>(),object<span class="pl-k">:</span>a}}function c(c,d,e,f,m,k,n,p,v){g.fromBufferAttribute(m,n);h.fromBufferAttribute(m,p);l.fromBufferAttribute(m,v);if(c=b(c,d,e,f,g,h,l,y))k&amp;&amp;(t.fromBufferAttribute(k,n),q.fromBufferAttribute(k,p),r.fromBufferAttribute(k,v),c.uv=a(y,g,h,l,t,q,r)),k=new Ya(n,p,v),ta.getNormal(g,h,l,k.normal),c.face=k;return c}var d=new R,e=new sb,f=new Ha,</td>
      </tr>
      <tr>
        <td id="L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="LC608" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,n<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,t<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,q<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,r<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,u<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,y<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,w<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">p</span>,<span class="pl-smi">v</span>){<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>,x<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">material</span>,w<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>x<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">u</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">u</span>.<span class="pl-en">computeBoundingSphere</span>(),<span class="pl-smi">f</span>.<span class="pl-en">copy</span>(<span class="pl-smi">u</span>.<span class="pl-smi">boundingSphere</span>),<span class="pl-smi">f</span>.<span class="pl-en">applyMatrix4</span>(w),<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">p</span>.<span class="pl-smi">ray</span>.<span class="pl-en">intersectsSphere</span>(f)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-en">getInverse</span>(w),<span class="pl-smi">e</span>.<span class="pl-en">copy</span>(<span class="pl-smi">p</span>.<span class="pl-smi">ray</span>).<span class="pl-en">applyMatrix4</span>(d),<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">u</span>.<span class="pl-smi">boundingBox</span><span class="pl-k">||!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-en">intersectsBox</span>(<span class="pl-smi">u</span>.<span class="pl-smi">boundingBox</span>))))<span class="pl-k">if</span>(<span class="pl-smi">u</span>.<span class="pl-smi">isBufferGeometry</span>){<span class="pl-k">var</span> <span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">index</span>,z<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>,<span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">uv</span>,<span class="pl-c1">H</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="LC609" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">u</span>.<span class="pl-smi">groups</span>;u<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">drawRange</span>;<span class="pl-k">var</span> <span class="pl-c1">G</span>;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">A</span>)<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(x)){<span class="pl-k">var</span> <span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">length</span>;<span class="pl-c1">D</span><span class="pl-k">&lt;</span><span class="pl-c1">G</span>;<span class="pl-c1">D</span><span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">H</span>[<span class="pl-c1">D</span>];<span class="pl-k">var</span> <span class="pl-c1">J</span><span class="pl-k">=</span>x[<span class="pl-c1">E</span>.<span class="pl-smi">materialIndex</span>];w<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">E</span>.<span class="pl-c1">start</span>,<span class="pl-smi">u</span>.<span class="pl-c1">start</span>);<span class="pl-k">var</span> <span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">E</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-c1">E</span>.<span class="pl-smi">count</span>,<span class="pl-smi">u</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">count</span>);<span class="pl-k">for</span>(<span class="pl-c1">E</span><span class="pl-k">=</span>w;<span class="pl-c1">E</span><span class="pl-k">&lt;</span><span class="pl-c1">L</span>;<span class="pl-c1">E</span><span class="pl-k">+=</span><span class="pl-c1">3</span>){w<span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-en">getX</span>(<span class="pl-c1">D</span>);<span class="pl-k">var</span> <span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-en">getX</span>(<span class="pl-c1">D</span><span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> <span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-en">getX</span>(<span class="pl-c1">D</span><span class="pl-k">+</span><span class="pl-c1">2</span>);<span class="pl-k">if</span>(w<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-c1">this</span>,<span class="pl-c1">J</span>,p,e,z,<span class="pl-c1">B</span>,w,<span class="pl-c1">I</span>,<span class="pl-c1">K</span>))<span class="pl-smi">w</span>.<span class="pl-smi">faceIndex</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">D</span><span class="pl-k">/</span><span class="pl-c1">3</span>),<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(w)}}}<span class="pl-k">else</span> <span class="pl-k">for</span>(w<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-smi">u</span>.<span class="pl-c1">start</span>),<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">A</span>.<span class="pl-smi">count</span>,<span class="pl-smi">u</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">count</span>),<span class="pl-c1">D</span><span class="pl-k">=</span>w,<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">L</span>;<span class="pl-c1">D</span><span class="pl-k">&lt;</span><span class="pl-c1">G</span>;<span class="pl-c1">D</span><span class="pl-k">+=</span><span class="pl-c1">3</span>){<span class="pl-k">if</span>(w<span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-en">getX</span>(<span class="pl-c1">D</span>),<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-en">getX</span>(<span class="pl-c1">D</span><span class="pl-k">+</span><span class="pl-c1">1</span>),<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-en">getX</span>(<span class="pl-c1">D</span><span class="pl-k">+</span><span class="pl-c1">2</span>),w<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-c1">this</span>,x,p,e,z,<span class="pl-c1">B</span>,w,<span class="pl-c1">I</span>,<span class="pl-c1">K</span>))<span class="pl-smi">w</span>.<span class="pl-smi">faceIndex</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="LC610" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">D</span><span class="pl-k">/</span><span class="pl-c1">3</span>),<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(w)}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>z)<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(x))<span class="pl-k">for</span>(<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">length</span>;<span class="pl-c1">D</span><span class="pl-k">&lt;</span><span class="pl-c1">G</span>;<span class="pl-c1">D</span><span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">H</span>[<span class="pl-c1">D</span>],<span class="pl-c1">J</span><span class="pl-k">=</span>x[<span class="pl-c1">E</span>.<span class="pl-smi">materialIndex</span>],w<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">E</span>.<span class="pl-c1">start</span>,<span class="pl-smi">u</span>.<span class="pl-c1">start</span>),<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">E</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-c1">E</span>.<span class="pl-smi">count</span>,<span class="pl-smi">u</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">count</span>),<span class="pl-c1">E</span><span class="pl-k">=</span>w;<span class="pl-c1">E</span><span class="pl-k">&lt;</span><span class="pl-c1">L</span>;<span class="pl-c1">E</span><span class="pl-k">+=</span><span class="pl-c1">3</span>){<span class="pl-k">if</span>(w<span class="pl-k">=</span><span class="pl-c1">E</span>,<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">E</span><span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">E</span><span class="pl-k">+</span><span class="pl-c1">2</span>,w<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-c1">this</span>,<span class="pl-c1">J</span>,p,e,z,<span class="pl-c1">B</span>,w,<span class="pl-c1">I</span>,<span class="pl-c1">K</span>))<span class="pl-smi">w</span>.<span class="pl-smi">faceIndex</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">D</span><span class="pl-k">/</span><span class="pl-c1">3</span>),<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(w)}<span class="pl-k">else</span> <span class="pl-k">for</span>(w<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-smi">u</span>.<span class="pl-c1">start</span>),<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">z</span>.<span class="pl-smi">count</span>,<span class="pl-smi">u</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">u</span>.<span class="pl-smi">count</span>),<span class="pl-c1">D</span><span class="pl-k">=</span>w,<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">L</span>;<span class="pl-c1">D</span><span class="pl-k">&lt;</span><span class="pl-c1">G</span>;<span class="pl-c1">D</span><span class="pl-k">+=</span><span class="pl-c1">3</span>)<span class="pl-k">if</span>(w<span class="pl-k">=</span><span class="pl-c1">D</span>,<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">D</span><span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">D</span><span class="pl-k">+</span><span class="pl-c1">2</span>,w<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-c1">this</span>,x,p,e,z,<span class="pl-c1">B</span>,w,<span class="pl-c1">I</span>,<span class="pl-c1">K</span>))<span class="pl-smi">w</span>.<span class="pl-smi">faceIndex</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">D</span><span class="pl-k">/</span><span class="pl-c1">3</span>),<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(w)}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">u</span>.<span class="pl-smi">isGeometry</span>)<span class="pl-k">for</span>(z<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(x),</td>
      </tr>
      <tr>
        <td id="L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="LC611" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">vertices</span>,<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">faces</span>,w<span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">faceVertexUvs</span>[<span class="pl-c1">0</span>],<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">w</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">A</span><span class="pl-k">=</span>w),<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">length</span>;<span class="pl-c1">E</span><span class="pl-k">&lt;</span><span class="pl-c1">L</span>;<span class="pl-c1">E</span><span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">H</span>[<span class="pl-c1">E</span>],w<span class="pl-k">=</span>z<span class="pl-k">?</span>x[<span class="pl-c1">I</span>.<span class="pl-smi">materialIndex</span>]<span class="pl-k">:</span>x,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>w){<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">B</span>[<span class="pl-c1">I</span>.<span class="pl-smi">a</span>];<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">B</span>[<span class="pl-c1">I</span>.<span class="pl-smi">b</span>];<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">B</span>[<span class="pl-c1">I</span>.<span class="pl-smi">c</span>];<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">w</span>.<span class="pl-smi">morphTargets</span>){<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-smi">u</span>.<span class="pl-smi">morphTargets</span>;<span class="pl-k">var</span> <span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">morphTargetInfluences</span>;<span class="pl-smi">g</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-smi">h</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-smi">l</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> <span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-c1">length</span>;<span class="pl-c1">P</span><span class="pl-k">&lt;</span><span class="pl-c1">S</span>;<span class="pl-c1">P</span><span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">R</span>[<span class="pl-c1">P</span>];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">T</span>){<span class="pl-k">var</span> <span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-c1">K</span>[<span class="pl-c1">P</span>].<span class="pl-smi">vertices</span>;<span class="pl-smi">g</span>.<span class="pl-en">addScaledVector</span>(<span class="pl-smi">m</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">W</span>[<span class="pl-c1">I</span>.<span class="pl-smi">a</span>],<span class="pl-c1">D</span>),<span class="pl-c1">T</span>);<span class="pl-smi">h</span>.<span class="pl-en">addScaledVector</span>(<span class="pl-smi">k</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">W</span>[<span class="pl-c1">I</span>.<span class="pl-smi">b</span>],<span class="pl-c1">G</span>),<span class="pl-c1">T</span>);<span class="pl-smi">l</span>.<span class="pl-en">addScaledVector</span>(<span class="pl-smi">n</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">W</span>[<span class="pl-c1">I</span>.<span class="pl-smi">c</span>],<span class="pl-c1">J</span>),<span class="pl-c1">T</span>)}}<span class="pl-smi">g</span>.<span class="pl-c1">add</span>(<span class="pl-c1">D</span>);<span class="pl-smi">h</span>.<span class="pl-c1">add</span>(<span class="pl-c1">G</span>);<span class="pl-smi">l</span>.<span class="pl-c1">add</span>(<span class="pl-c1">J</span>);</td>
      </tr>
      <tr>
        <td id="L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="LC612" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">D</span><span class="pl-k">=</span>g;<span class="pl-c1">G</span><span class="pl-k">=</span>h;<span class="pl-c1">J</span><span class="pl-k">=</span>l}<span class="pl-k">if</span>(w<span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-c1">this</span>,w,p,e,<span class="pl-c1">D</span>,<span class="pl-c1">G</span>,<span class="pl-c1">J</span>,y))<span class="pl-c1">A</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">A</span>[<span class="pl-c1">E</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">A</span>[<span class="pl-c1">E</span>],<span class="pl-smi">t</span>.<span class="pl-en">copy</span>(<span class="pl-c1">K</span>[<span class="pl-c1">0</span>]),<span class="pl-smi">q</span>.<span class="pl-en">copy</span>(<span class="pl-c1">K</span>[<span class="pl-c1">1</span>]),<span class="pl-smi">r</span>.<span class="pl-en">copy</span>(<span class="pl-c1">K</span>[<span class="pl-c1">2</span>]),<span class="pl-smi">w</span>.<span class="pl-smi">uv</span><span class="pl-k">=</span><span class="pl-en">a</span>(y,<span class="pl-c1">D</span>,<span class="pl-c1">G</span>,<span class="pl-c1">J</span>,t,q,r)),<span class="pl-smi">w</span>.<span class="pl-c1">face</span><span class="pl-k">=</span><span class="pl-c1">I</span>,<span class="pl-smi">w</span>.<span class="pl-smi">faceIndex</span><span class="pl-k">=</span><span class="pl-c1">E</span>,<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(w)}}}(),<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>,<span class="pl-c1">this</span>.<span class="pl-smi">material</span>)).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)}});<span class="pl-smi">Za</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">ea</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Za</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Za;<span class="pl-smi">Za</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isCubeTexture</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Za</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>images<span class="pl-pds">&quot;</span></span>,{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">image</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">image</span><span class="pl-k">=</span>a}});<span class="pl-k">var</span> Oe<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ea</span>,Pe<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Za</span>,Ie<span class="pl-k">=</span>[],Ke<span class="pl-k">=</span>[],Ne<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">16</span>),</td>
      </tr>
      <tr>
        <td id="L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="LC613" class="blob-code blob-code-inner js-file-line">Me<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">9</span>),Le<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">4</span>);<span class="pl-smi">Te</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">updateCache</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">cache</span>;a <span class="pl-k">instanceof</span> <span class="pl-c1">Float32Array</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">cache</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span>));<span class="pl-en">qa</span>(b,a)};<span class="pl-smi">Ue</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setValue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">seq</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">!==</span>e;<span class="pl-k">++</span>d){<span class="pl-k">var</span> f<span class="pl-k">=</span>c[d];<span class="pl-smi">f</span>.<span class="pl-en">setValue</span>(a,b[<span class="pl-smi">f</span>.<span class="pl-c1">id</span>])}};<span class="pl-k">var</span> Xd<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-c1">\w\d</span>_]</span><span class="pl-k">+</span>)(<span class="pl-cce">\]</span>)<span class="pl-k">?</span>(<span class="pl-cce">\[</span><span class="pl-k">|</span><span class="pl-cce">\.</span>)<span class="pl-k">?</span><span class="pl-pds">/</span>g</span>;<span class="pl-smi">eb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setValue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">map</span>[b];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">setValue</span>(a,c,<span class="pl-c1">this</span>.<span class="pl-smi">renderer</span>)};<span class="pl-smi">eb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setOptional</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){b<span class="pl-k">=</span>b[c];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="LC614" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">setValue</span>(a,c,b)};<span class="pl-smi">eb</span>.<span class="pl-en">upload</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;e<span class="pl-k">!==</span>f;<span class="pl-k">++</span>e){<span class="pl-k">var</span> g<span class="pl-k">=</span>b[e],h<span class="pl-k">=</span>c[<span class="pl-smi">g</span>.<span class="pl-c1">id</span>];<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">h</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">setValue</span>(a,<span class="pl-smi">h</span>.<span class="pl-c1">value</span>,d)}};<span class="pl-smi">eb</span>.<span class="pl-en">seqWithValue</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">!==</span>e;<span class="pl-k">++</span>d){<span class="pl-k">var</span> f<span class="pl-k">=</span>a[d];<span class="pl-smi">f</span>.<span class="pl-c1">id</span> <span class="pl-k">in</span> b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(f)}<span class="pl-k">return</span> c};<span class="pl-k">var</span> yg<span class="pl-k">=</span><span class="pl-c1">0</span>,Hg<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">fb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">fb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>fb;<span class="pl-smi">fb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isMeshDepthMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">fb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">depthPacking</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">depthPacking</span>;<span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinning</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="LC615" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>;<span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">map</span>;<span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">alphaMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementScale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementScale</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementBias</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementBias</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframe</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinewidth</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">gb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">gb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>gb;<span class="pl-smi">gb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isMeshDistanceMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">gb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">referencePosition</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">referencePosition</span>);<span class="pl-c1">this</span>.<span class="pl-smi">nearDistance</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">nearDistance</span>;</td>
      </tr>
      <tr>
        <td id="L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="LC616" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">farDistance</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">farDistance</span>;<span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinning</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>;<span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">map</span>;<span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">alphaMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementScale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementScale</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementBias</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementBias</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Sb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">ea</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Sb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Sb;<span class="pl-smi">Sb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isCanvasTexture</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Ub</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Ub,isGroup:!0});Z.prototype=Object.assign(Object.create(Ra.prototype),</td>
      </tr>
      <tr>
        <td id="L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="LC617" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">constructor</span>:Z,isPerspectiveCamera:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">Ra</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,b);<span class="pl-c1">this</span>.<span class="pl-smi">fov</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fov</span>;<span class="pl-c1">this</span>.<span class="pl-smi">zoom</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">zoom</span>;<span class="pl-c1">this</span>.<span class="pl-smi">near</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">near</span>;<span class="pl-c1">this</span>.<span class="pl-smi">far</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">far</span>;<span class="pl-c1">this</span>.<span class="pl-smi">focus</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">focus</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aspect</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aspect</span>;<span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">view</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({},<span class="pl-smi">a</span>.<span class="pl-smi">view</span>);<span class="pl-c1">this</span>.<span class="pl-smi">filmGauge</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">filmGauge</span>;<span class="pl-c1">this</span>.<span class="pl-smi">filmOffset</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">filmOffset</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFocalLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-en">getFilmHeight</span>()<span class="pl-k">/</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">fov</span><span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">J</span>.<span class="pl-c1">RAD2DEG</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan</span>(a);<span class="pl-c1">this</span>.<span class="pl-en">updateProjectionMatrix</span>()},<span class="pl-en">getFocalLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">tan</span>(<span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">J</span>.<span class="pl-c1">DEG2RAD</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">fov</span>);</td>
      </tr>
      <tr>
        <td id="L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="LC618" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span>.<span class="pl-ii">5</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-en">getFilmHeight</span>()<span class="pl-k">/</span>a},<span class="pl-en">getEffectiveFOV</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">J</span>.<span class="pl-c1">RAD2DEG</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">tan</span>(<span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">J</span>.<span class="pl-c1">DEG2RAD</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">fov</span>)<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">zoom</span>)},<span class="pl-en">getFilmWidth</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">filmGauge</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">this</span>.<span class="pl-smi">aspect</span>,<span class="pl-c1">1</span>)},<span class="pl-en">getFilmHeight</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">filmGauge</span><span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-smi">aspect</span>,<span class="pl-c1">1</span>)},<span class="pl-en">setViewOffset</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-c1">this</span>.<span class="pl-smi">aspect</span><span class="pl-k">=</span>a<span class="pl-k">/</span>b;<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">=</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,fullWidth<span class="pl-k">:</span><span class="pl-c1">1</span>,fullHeight<span class="pl-k">:</span><span class="pl-c1">1</span>,offsetX<span class="pl-k">:</span><span class="pl-c1">0</span>,offsetY<span class="pl-k">:</span><span class="pl-c1">0</span>,width<span class="pl-k">:</span><span class="pl-c1">1</span>,height<span class="pl-k">:</span><span class="pl-c1">1</span>});<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">fullWidth</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">fullHeight</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">offsetX</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="LC619" class="blob-code blob-code-inner js-file-line">c;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">offsetY</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>e;<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>f;<span class="pl-c1">this</span>.<span class="pl-en">updateProjectionMatrix</span>()},<span class="pl-en">clearViewOffset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-en">updateProjectionMatrix</span>()},<span class="pl-en">updateProjectionMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">near</span>,b<span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">tan</span>(<span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">J</span>.<span class="pl-c1">DEG2RAD</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">fov</span>)<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">zoom</span>,c<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>b,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aspect</span><span class="pl-k">*</span>c,e<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">.5</span><span class="pl-k">*</span>d,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span>;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span>.<span class="pl-smi">enabled</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">fullWidth</span>,h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">fullHeight</span>;e<span class="pl-k">+=</span><span class="pl-smi">f</span>.<span class="pl-smi">offsetX</span><span class="pl-k">*</span>d<span class="pl-k">/</span>g;b<span class="pl-k">-=</span><span class="pl-smi">f</span>.<span class="pl-smi">offsetY</span><span class="pl-k">*</span>c<span class="pl-k">/</span>h;d<span class="pl-k">*=</span><span class="pl-smi">f</span>.<span class="pl-c1">width</span><span class="pl-k">/</span>g;c<span class="pl-k">*=</span><span class="pl-smi">f</span>.<span class="pl-c1">height</span><span class="pl-k">/</span>h}f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">filmOffset</span>;<span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">+=</span>a<span class="pl-k">*</span>f<span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-en">getFilmWidth</span>());</td>
      </tr>
      <tr>
        <td id="L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="LC620" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">makePerspective</span>(e,e<span class="pl-k">+</span>d,b,b<span class="pl-k">-</span>c,a,<span class="pl-c1">this</span>.<span class="pl-smi">far</span>)},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">fov</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">fov</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">zoom</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">zoom</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">near</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">near</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">far</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">far</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">focus</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">focus</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">aspect</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aspect</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">view</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">view</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({},<span class="pl-c1">this</span>.<span class="pl-smi">view</span>));<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">filmGauge</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">filmGauge</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">filmOffset</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">filmOffset</span>;<span class="pl-k">return</span> a}});<span class="pl-smi">Hc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Hc,isArrayCamera:!0});Vb.prototype.isFogExp2=</td>
      </tr>
      <tr>
        <td id="L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="LC621" class="blob-code blob-code-inner js-file-line">!0;Vb.prototype.clone=function(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Vb</span>(<span class="pl-c1">this</span>.<span class="pl-c1">color</span>,<span class="pl-c1">this</span>.<span class="pl-smi">density</span>)};<span class="pl-smi">Vb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>FogExp2<span class="pl-pds">&quot;</span></span>,color<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">getHex</span>(),density<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">density</span>}};<span class="pl-smi">Wb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isFog</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Wb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clone</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Wb</span>(<span class="pl-c1">this</span>.<span class="pl-c1">color</span>,<span class="pl-c1">this</span>.<span class="pl-smi">near</span>,<span class="pl-c1">this</span>.<span class="pl-smi">far</span>)};<span class="pl-smi">Wb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Fog<span class="pl-pds">&quot;</span></span>,color<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">getHex</span>(),near<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">near</span>,far<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">far</span>}};<span class="pl-smi">vd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:vd,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,b);<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="LC622" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">background</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-c1">background</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">background</span>.<span class="pl-en">clone</span>());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">fog</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">fog</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fog</span>.<span class="pl-en">clone</span>());<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">overrideMaterial</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">overrideMaterial</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">overrideMaterial</span>.<span class="pl-en">clone</span>());<span class="pl-c1">this</span>.<span class="pl-smi">autoUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">autoUpdate</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">matrixAutoUpdate</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">background</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-c1">object</span>.<span class="pl-c1">background</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">background</span>.<span class="pl-en">toJSON</span>(a));<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">fog</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-c1">object</span>.<span class="pl-smi">fog</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">fog</span>.<span class="pl-en">toJSON</span>());<span class="pl-k">return</span> b}});<span class="pl-smi">ib</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ib</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="LC623" class="blob-code blob-code-inner js-file-line">ib;<span class="pl-smi">ib</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isSpriteMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">ib</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>);<span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">map</span>;<span class="pl-c1">this</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">rotation</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Ic</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Ic,isSprite:!0,raycast:<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">h</span>,<span class="pl-smi">l</span>){<span class="pl-smi">e</span>.<span class="pl-en">subVectors</span>(a,c).<span class="pl-en">addScalar</span>(<span class="pl-c1">.5</span>).<span class="pl-en">multiply</span>(d);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>h<span class="pl-k">?</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>l<span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">-</span>h<span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>h<span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>l<span class="pl-k">*</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-en">copy</span>(e);<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(b);<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>;<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>;<span class="pl-smi">a</span>.<span class="pl-en">applyMatrix4</span>(g)}<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>,g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>,h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,</td>
      </tr>
      <tr>
        <td id="L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="LC624" class="blob-code blob-code-inner js-file-line">l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-smi">c</span>.<span class="pl-en">setFromMatrixScale</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-smi">g</span>.<span class="pl-en">getInverse</span>(<span class="pl-c1">this</span>.<span class="pl-smi">modelViewMatrix</span>).<span class="pl-en">premultiply</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-smi">d</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-c1">this</span>.<span class="pl-smi">modelViewMatrix</span>);<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">material</span>.<span class="pl-smi">rotation</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span>k){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(k);<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(k)}k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">center</span>;<span class="pl-en">a</span>(<span class="pl-smi">h</span>.<span class="pl-c1">set</span>(<span class="pl-k">-</span><span class="pl-c1">.5</span>,<span class="pl-k">-</span><span class="pl-c1">.5</span>,<span class="pl-c1">0</span>),d,k,c,p,n);<span class="pl-en">a</span>(<span class="pl-smi">l</span>.<span class="pl-c1">set</span>(<span class="pl-c1">.5</span>,<span class="pl-k">-</span><span class="pl-c1">.5</span>,<span class="pl-c1">0</span>),d,k,c,p,n);<span class="pl-en">a</span>(<span class="pl-smi">m</span>.<span class="pl-c1">set</span>(<span class="pl-c1">.5</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">0</span>),d,k,c,p,n);<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">ray</span>.<span class="pl-en">intersectTriangle</span>(h,l,m,<span class="pl-k">!</span><span class="pl-c1">1</span>,b);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span>v<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">a</span>(<span class="pl-smi">l</span>.<span class="pl-c1">set</span>(<span class="pl-k">-</span><span class="pl-c1">.5</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">0</span>),d,k,c,p,n),v<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">ray</span>.<span class="pl-en">intersectTriangle</span>(h,m,l,<span class="pl-k">!</span><span class="pl-c1">1</span>,b),<span class="pl-c1">null</span><span class="pl-k">===</span>v))<span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="LC625" class="blob-code blob-code-inner js-file-line">p<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">origin</span>.<span class="pl-en">distanceTo</span>(b);p<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-smi">near</span><span class="pl-k">||</span>p<span class="pl-k">&gt;</span><span class="pl-smi">e</span>.<span class="pl-smi">far</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-c1">push</span>({distance<span class="pl-k">:</span>p,point<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-en">clone</span>(),face<span class="pl-k">:</span><span class="pl-c1">null</span>,object<span class="pl-k">:</span><span class="pl-c1">this</span>})}}(),<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">material</span>)).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">center</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">center</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">center</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">Jc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Jc,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,<span class="pl-k">!</span><span class="pl-c1">1</span>);a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">levels</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[b];<span class="pl-c1">this</span>.<span class="pl-en">addLevel</span>(<span class="pl-smi">d</span>.<span class="pl-c1">object</span>.<span class="pl-en">clone</span>(),<span class="pl-smi">d</span>.<span class="pl-smi">distance</span>)}<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="LC626" class="blob-code blob-code-inner js-file-line"><span class="pl-en">addLevel</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(b);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">levels</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;!</span>(b<span class="pl-k">&lt;</span>c[d].<span class="pl-smi">distance</span>);d<span class="pl-k">++</span>);<span class="pl-smi">c</span>.<span class="pl-c1">splice</span>(d,<span class="pl-c1">0</span>,{distance<span class="pl-k">:</span>b,object<span class="pl-k">:</span>a});<span class="pl-c1">this</span>.<span class="pl-c1">add</span>(a)},<span class="pl-en">getObjectForDistance</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">levels</span>,c<span class="pl-k">=</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d<span class="pl-k">&amp;&amp;!</span>(a<span class="pl-k">&lt;</span>b[c].<span class="pl-smi">distance</span>);c<span class="pl-k">++</span>);<span class="pl-k">return</span> b[c<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">object</span>},<span class="pl-en">raycast</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">origin</span>.<span class="pl-en">distanceTo</span>(a);<span class="pl-c1">this</span>.<span class="pl-en">getObjectForDistance</span>(d).<span class="pl-en">raycast</span>(b,c)}}(),<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="LC627" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">levels</span>;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>){<span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">c</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-smi">b</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>);c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">distanceTo</span>(b);d[<span class="pl-c1">0</span>].<span class="pl-c1">object</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">++</span>)<span class="pl-k">if</span>(c<span class="pl-k">&gt;=</span>d[e].<span class="pl-smi">distance</span>)d[e<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">object</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,d[e].<span class="pl-c1">object</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">break</span>;<span class="pl-k">for</span>(;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">++</span>)d[e].<span class="pl-c1">object</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}}}(),<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">levels</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">levels</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>b[c];<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">levels</span>.<span class="pl-c1">push</span>({object<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">object</span>.<span class="pl-smi">uuid</span>,distance<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-smi">distance</span>})}<span class="pl-k">return</span> a}});</td>
      </tr>
      <tr>
        <td id="L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="LC628" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Kc</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">calculateInverses</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">boneInverses</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bones</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>b;a<span class="pl-k">++</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bones</span>[a]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">getInverse</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bones</span>[a].<span class="pl-smi">matrixWorld</span>);<span class="pl-c1">this</span>.<span class="pl-smi">boneInverses</span>.<span class="pl-c1">push</span>(c)}},<span class="pl-en">pose</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bones</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>)(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bones</span>[c])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">getInverse</span>(<span class="pl-c1">this</span>.<span class="pl-smi">boneInverses</span>[c]);c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bones</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bones</span>[c])<span class="pl-smi">a</span>.<span class="pl-c1">parent</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">parent</span>.<span class="pl-smi">isBone</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">getInverse</span>(<span class="pl-smi">a</span>.<span class="pl-c1">parent</span>.<span class="pl-smi">matrixWorld</span>),<span class="pl-smi">a</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">multiply</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>))<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="LC629" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrixWorld</span>),<span class="pl-smi">a</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">decompose</span>(<span class="pl-smi">a</span>.<span class="pl-smi">position</span>,<span class="pl-smi">a</span>.<span class="pl-smi">quaternion</span>,<span class="pl-smi">a</span>.<span class="pl-smi">scale</span>)},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bones</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">boneInverses</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">boneMatrices</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">boneTexture</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>h;g<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-en">multiplyMatrices</span>(c[g]<span class="pl-k">?</span>c[g].<span class="pl-smi">matrixWorld</span><span class="pl-k">:</span>b,d[g]),<span class="pl-smi">a</span>.<span class="pl-en">toArray</span>(e,<span class="pl-c1">16</span><span class="pl-k">*</span>g);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}}(),<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Kc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bones</span>,<span class="pl-c1">this</span>.<span class="pl-smi">boneInverses</span>)},<span class="pl-en">getBoneByName</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bones</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bones</span>[b];<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">name</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="LC630" class="blob-code blob-code-inner js-file-line">a)<span class="pl-k">return</span> d}}});<span class="pl-smi">wd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:wd,isBone:!0});xd.prototype=Object.assign(Object.create(va.prototype),{<span class="pl-en">constructor</span>:xd,isSkinnedMesh:!0,initBones:<span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[],b;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">geometry</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">bones</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">bones</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>b;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">bones</span>[c];<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">wd</span>;<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(e);<span class="pl-smi">e</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">name</span>;<span class="pl-smi">e</span>.<span class="pl-smi">position</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">d</span>.<span class="pl-smi">pos</span>);<span class="pl-smi">e</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">d</span>.<span class="pl-smi">rotq</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-smi">scl</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">scale</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">d</span>.<span class="pl-smi">scl</span>)}c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">bones</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="LC631" class="blob-code blob-code-inner js-file-line">b;c<span class="pl-k">++</span>)d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">bones</span>[c],<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-c1">parent</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-c1">parent</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a[<span class="pl-smi">d</span>.<span class="pl-c1">parent</span>]<span class="pl-k">?</span>a[<span class="pl-smi">d</span>.<span class="pl-c1">parent</span>].<span class="pl-c1">add</span>(a[c])<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">add</span>(a[c])}<span class="pl-c1">this</span>.<span class="pl-en">updateMatrixWorld</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> a},<span class="pl-en">bind</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">skeleton</span><span class="pl-k">=</span>a;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">updateMatrixWorld</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-c1">this</span>.<span class="pl-smi">skeleton</span>.<span class="pl-en">calculateInverses</span>(),b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-c1">this</span>.<span class="pl-smi">bindMatrix</span>.<span class="pl-en">copy</span>(b);<span class="pl-c1">this</span>.<span class="pl-smi">bindMatrixInverse</span>.<span class="pl-en">getInverse</span>(b)},<span class="pl-en">pose</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">skeleton</span>.<span class="pl-en">pose</span>()},<span class="pl-en">normalizeSkinWeights</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">geometry</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">isGeometry</span>)<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">skinWeights</span>.<span class="pl-c1">length</span>;a<span class="pl-k">++</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="LC632" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">skinWeights</span>[a];<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">b</span>.<span class="pl-en">manhattanLength</span>();<span class="pl-c1">Infinity</span><span class="pl-k">!==</span>c<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">multiplyScalar</span>(c)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">geometry</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">isBufferGeometry</span>){b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">W</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">skinWeight</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">count</span>;a<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getX</span>(a),<span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getY</span>(a),<span class="pl-smi">b</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getZ</span>(a),<span class="pl-smi">b</span>.<span class="pl-smi">w</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getW</span>(a),c<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">b</span>.<span class="pl-en">manhattanLength</span>(),<span class="pl-c1">Infinity</span><span class="pl-k">!==</span>c<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">multiplyScalar</span>(c)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>),<span class="pl-smi">d</span>.<span class="pl-en">setXYZW</span>(a,<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-smi">b</span>.<span class="pl-c1">z</span>,<span class="pl-smi">b</span>.<span class="pl-smi">w</span>)}},<span class="pl-en">updateMatrixWorld</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">va</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">updateMatrixWorld</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-s"><span class="pl-pds">&quot;</span>attached<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">bindMode</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">bindMatrixInverse</span>.<span class="pl-en">getInverse</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>)<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="LC633" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>detached<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">bindMode</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">bindMatrixInverse</span>.<span class="pl-en">getInverse</span>(<span class="pl-c1">this</span>.<span class="pl-smi">bindMatrix</span>)<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.SkinnedMesh: Unrecognized bindMode: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">bindMode</span>)},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>,<span class="pl-c1">this</span>.<span class="pl-smi">material</span>)).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)}});<span class="pl-c1">T</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">T</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">T</span>;<span class="pl-c1">T</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isLineBasicMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">T</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>);<span class="pl-c1">this</span>.<span class="pl-smi">linewidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">linewidth</span>;<span class="pl-c1">this</span>.<span class="pl-smi">linecap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">linecap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">linejoin</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">linejoin</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};</td>
      </tr>
      <tr>
        <td id="L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="LC634" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">wa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:wa,isLine:!0,computeLineDistances:<span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">isBufferGeometry</span>)<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">index</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>,e<span class="pl-k">=</span>[<span class="pl-c1">0</span>],f<span class="pl-k">=</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">count</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-en">fromBufferAttribute</span>(d,f<span class="pl-k">-</span><span class="pl-c1">1</span>),<span class="pl-smi">b</span>.<span class="pl-en">fromBufferAttribute</span>(d,f),e[f]<span class="pl-k">=</span>e[f<span class="pl-k">-</span><span class="pl-c1">1</span>],e[f]<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-en">distanceTo</span>(b);<span class="pl-smi">c</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lineDistance<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(e,<span class="pl-c1">1</span>))}<span class="pl-k">else</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="LC635" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">isGeometry</span>)<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">vertices</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">lineDistances</span>,e[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>)e[f]<span class="pl-k">=</span>e[f<span class="pl-k">-</span><span class="pl-c1">1</span>],e[f]<span class="pl-k">+=</span>d[f<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-en">distanceTo</span>(d[f]);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">raycast</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">sb</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ha</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">linePrecision</span>;f<span class="pl-k">*=</span>f;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>;<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">computeBoundingSphere</span>();<span class="pl-smi">c</span>.<span class="pl-en">copy</span>(<span class="pl-smi">g</span>.<span class="pl-smi">boundingSphere</span>);<span class="pl-smi">c</span>.<span class="pl-en">applyMatrix4</span>(h);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-smi">ray</span>.<span class="pl-en">intersectsSphere</span>(c)){<span class="pl-smi">a</span>.<span class="pl-en">getInverse</span>(h);<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-smi">d</span>.<span class="pl-smi">ray</span>).<span class="pl-en">applyMatrix4</span>(a);<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,n<span class="pl-k">=</span><span class="pl-c1">this</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="LC636" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">isLineSegments</span><span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-smi">isBufferGeometry</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">index</span>,q<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>.<span class="pl-smi">array</span>;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>t){t<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">array</span>;g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;g<span class="pl-k">&lt;</span>r;g<span class="pl-k">+=</span>n){<span class="pl-k">var</span> u<span class="pl-k">=</span>t[g<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-smi">l</span>.<span class="pl-en">fromArray</span>(q,<span class="pl-c1">3</span><span class="pl-k">*</span>t[g]);<span class="pl-smi">m</span>.<span class="pl-en">fromArray</span>(q,<span class="pl-c1">3</span><span class="pl-k">*</span>u);u<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">distanceSqToSegment</span>(l,m,k,h);u<span class="pl-k">&gt;</span>f<span class="pl-k">||</span>(<span class="pl-smi">k</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>),u<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">origin</span>.<span class="pl-en">distanceTo</span>(k),u<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">near</span><span class="pl-k">||</span>u<span class="pl-k">&gt;</span><span class="pl-smi">d</span>.<span class="pl-smi">far</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-c1">push</span>({distance<span class="pl-k">:</span>u,point<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-en">clone</span>().<span class="pl-en">applyMatrix4</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>),index<span class="pl-k">:</span>g,face<span class="pl-k">:</span><span class="pl-c1">null</span>,faceIndex<span class="pl-k">:</span><span class="pl-c1">null</span>,object<span class="pl-k">:</span><span class="pl-c1">this</span>}))}}<span class="pl-k">else</span> <span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>,r<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">3</span><span class="pl-k">-</span><span class="pl-c1">1</span>;g<span class="pl-k">&lt;</span>r;g<span class="pl-k">+=</span>n)<span class="pl-smi">l</span>.<span class="pl-en">fromArray</span>(q,<span class="pl-c1">3</span><span class="pl-k">*</span>g),<span class="pl-smi">m</span>.<span class="pl-en">fromArray</span>(q,</td>
      </tr>
      <tr>
        <td id="L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="LC637" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">3</span><span class="pl-k">*</span>g<span class="pl-k">+</span><span class="pl-c1">3</span>),u<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">distanceSqToSegment</span>(l,m,k,h),u<span class="pl-k">&gt;</span>f<span class="pl-k">||</span>(<span class="pl-smi">k</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>),u<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">origin</span>.<span class="pl-en">distanceTo</span>(k),u<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">near</span><span class="pl-k">||</span>u<span class="pl-k">&gt;</span><span class="pl-smi">d</span>.<span class="pl-smi">far</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-c1">push</span>({distance<span class="pl-k">:</span>u,point<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-en">clone</span>().<span class="pl-en">applyMatrix4</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>),index<span class="pl-k">:</span>g,face<span class="pl-k">:</span><span class="pl-c1">null</span>,faceIndex<span class="pl-k">:</span><span class="pl-c1">null</span>,object<span class="pl-k">:</span><span class="pl-c1">this</span>}))}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-smi">isGeometry</span>)<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">vertices</span>,m<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>m<span class="pl-k">-</span><span class="pl-c1">1</span>;g<span class="pl-k">+=</span>n)u<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">distanceSqToSegment</span>(l[g],l[g<span class="pl-k">+</span><span class="pl-c1">1</span>],k,h),u<span class="pl-k">&gt;</span>f<span class="pl-k">||</span>(<span class="pl-smi">k</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>),u<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">origin</span>.<span class="pl-en">distanceTo</span>(k),u<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">near</span><span class="pl-k">||</span>u<span class="pl-k">&gt;</span><span class="pl-smi">d</span>.<span class="pl-smi">far</span><span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-c1">push</span>({distance<span class="pl-k">:</span>u,point<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-en">clone</span>().<span class="pl-en">applyMatrix4</span>(<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>),index<span class="pl-k">:</span>g,</td>
      </tr>
      <tr>
        <td id="L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="LC638" class="blob-code blob-code-inner js-file-line">face<span class="pl-k">:</span><span class="pl-c1">null</span>,faceIndex<span class="pl-k">:</span><span class="pl-c1">null</span>,object<span class="pl-k">:</span><span class="pl-c1">this</span>}))}}}(),<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>,<span class="pl-c1">this</span>.<span class="pl-smi">material</span>)).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)}});<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">wa</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Y,isLineSegments:!0,computeLineDistances:<span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">isBufferGeometry</span>)<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">index</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>,e<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">count</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">+=</span><span class="pl-c1">2</span>)<span class="pl-smi">a</span>.<span class="pl-en">fromBufferAttribute</span>(d,f),<span class="pl-smi">b</span>.<span class="pl-en">fromBufferAttribute</span>(d,f<span class="pl-k">+</span><span class="pl-c1">1</span>),e[f]<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">===</span>f<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>e[f<span class="pl-k">-</span><span class="pl-c1">1</span>],e[f<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>e[f]<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-en">distanceTo</span>(b);</td>
      </tr>
      <tr>
        <td id="L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="LC639" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-en">addAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lineDistance<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">z</span>(e,<span class="pl-c1">1</span>))}<span class="pl-k">else</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">isGeometry</span>)<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">vertices</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">lineDistances</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">+=</span><span class="pl-c1">2</span>)<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(d[f]),<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(d[f<span class="pl-k">+</span><span class="pl-c1">1</span>]),e[f]<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">===</span>f<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>e[f<span class="pl-k">-</span><span class="pl-c1">1</span>],e[f<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>e[f]<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-en">distanceTo</span>(b);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}()});<span class="pl-smi">yd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">wa</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:yd,isLineLoop:!0});Ja.prototype=Object.create(I.prototype);Ja.prototype.constructor=Ja;Ja.prototype.isPointsMaterial=</td>
      </tr>
      <tr>
        <td id="L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="LC640" class="blob-code blob-code-inner js-file-line">!0;Ja.prototype.copy=function(a){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>);<span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">map</span>;<span class="pl-c1">this</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">size</span>;<span class="pl-c1">this</span>.<span class="pl-smi">sizeAttenuation</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">sizeAttenuation</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Xb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Xb,isPoints:!0,raycast:<span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">sb</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ha</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">distanceSqToPoint</span>(a);f<span class="pl-k">&lt;</span>k<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-en">closestPointToPoint</span>(a,n),<span class="pl-smi">n</span>.<span class="pl-en">applyMatrix4</span>(l),a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">origin</span>.<span class="pl-en">distanceTo</span>(n),a<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">near</span><span class="pl-k">||</span>a<span class="pl-k">&gt;</span><span class="pl-smi">d</span>.<span class="pl-smi">far</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="LC641" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-c1">push</span>({distance<span class="pl-k">:</span>a,distanceToRay<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(f),point<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-en">clone</span>(),index<span class="pl-k">:</span>c,face<span class="pl-k">:</span><span class="pl-c1">null</span>,object<span class="pl-k">:</span>g}))}<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>,m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">params</span>.<span class="pl-smi">Points</span>.<span class="pl-smi">threshold</span>;<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">h</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-en">computeBoundingSphere</span>();<span class="pl-smi">c</span>.<span class="pl-en">copy</span>(<span class="pl-smi">h</span>.<span class="pl-smi">boundingSphere</span>);<span class="pl-smi">c</span>.<span class="pl-en">applyMatrix4</span>(l);<span class="pl-smi">c</span>.<span class="pl-smi">radius</span><span class="pl-k">+=</span>m;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-smi">ray</span>.<span class="pl-en">intersectsSphere</span>(c)){<span class="pl-smi">a</span>.<span class="pl-en">getInverse</span>(l);<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-smi">d</span>.<span class="pl-smi">ray</span>).<span class="pl-en">applyMatrix4</span>(a);m<span class="pl-k">/=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">z</span>)<span class="pl-k">/</span><span class="pl-c1">3</span>;<span class="pl-k">var</span> k<span class="pl-k">=</span>m<span class="pl-k">*</span>m;m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">if</span>(<span class="pl-smi">h</span>.<span class="pl-smi">isBufferGeometry</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">index</span>;h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>.<span class="pl-smi">array</span>;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="LC642" class="blob-code blob-code-inner js-file-line">t){<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">array</span>;t<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">length</span>;t<span class="pl-k">&lt;</span>r;t<span class="pl-k">++</span>){<span class="pl-k">var</span> u<span class="pl-k">=</span>q[t];<span class="pl-smi">m</span>.<span class="pl-en">fromArray</span>(h,<span class="pl-c1">3</span><span class="pl-k">*</span>u);<span class="pl-en">f</span>(m,u)}}<span class="pl-k">else</span> <span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">3</span>;t<span class="pl-k">&lt;</span>q;t<span class="pl-k">++</span>)<span class="pl-smi">m</span>.<span class="pl-en">fromArray</span>(h,<span class="pl-c1">3</span><span class="pl-k">*</span>t),<span class="pl-en">f</span>(m,t)}<span class="pl-k">else</span> <span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">vertices</span>,t<span class="pl-k">=</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>;t<span class="pl-k">&lt;</span>q;t<span class="pl-k">++</span>)<span class="pl-en">f</span>(m[t],t)}}}(),<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>,<span class="pl-c1">this</span>.<span class="pl-smi">material</span>)).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)}});<span class="pl-smi">be</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">ea</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:be,isVideoTexture:!0,update:<span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">image</span>;<span class="pl-smi">a</span>.<span class="pl-c1">readyState</span><span class="pl-k">&gt;=</span><span class="pl-smi">a</span>.<span class="pl-c1">HAVE_CURRENT_DATA</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)}});<span class="pl-smi">Yb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">ea</span>.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="LC643" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Yb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Yb;<span class="pl-smi">Yb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isCompressedTexture</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Lc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">ea</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Lc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Lc;<span class="pl-smi">Lc</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isDepthTexture</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Zb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Zb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Zb;<span class="pl-smi">Mc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Mc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Mc;<span class="pl-smi">$b</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">$b</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>$b;<span class="pl-smi">Nc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Nc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Nc;<span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="LC644" class="blob-code blob-code-inner js-file-line">xa;<span class="pl-smi">Oc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Oc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Oc;<span class="pl-smi">ac</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ac</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>ac;<span class="pl-smi">Pc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Pc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Pc;<span class="pl-smi">ub</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ub</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>ub;<span class="pl-smi">Qc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Qc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Qc;<span class="pl-smi">bc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">bc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>bc;<span class="pl-smi">Rc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Rc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Rc;<span class="pl-smi">cc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">xa</span>.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="LC645" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">cc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>cc;<span class="pl-smi">Sc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Sc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Sc;<span class="pl-smi">dc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">dc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>dc;<span class="pl-smi">Tc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Tc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Tc;<span class="pl-smi">ec</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ec</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>ec;<span class="pl-smi">Uc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Uc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Uc;<span class="pl-smi">fc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">fc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>fc;<span class="pl-k">var</span> Ug<span class="pl-k">=</span>{<span class="pl-en">triangulate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">2</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,e<span class="pl-k">=</span>d<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="LC646" class="blob-code blob-code-inner js-file-line">b[<span class="pl-c1">0</span>]<span class="pl-k">*</span>c<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span><span class="pl-en">cf</span>(a,<span class="pl-c1">0</span>,e,c,<span class="pl-k">!</span><span class="pl-c1">0</span>),g<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-k">!</span>f)<span class="pl-k">return</span> g;<span class="pl-k">var</span> h;<span class="pl-k">if</span>(d){<span class="pl-k">var</span> l<span class="pl-k">=</span>c;d<span class="pl-k">=</span>[];<span class="pl-k">var</span> m;<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>m;k<span class="pl-k">++</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>b[k]<span class="pl-k">*</span>l;<span class="pl-k">var</span> p<span class="pl-k">=</span>k<span class="pl-k">&lt;</span>m<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span>b[k<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">*</span>l<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;n<span class="pl-k">=</span><span class="pl-en">cf</span>(a,n,p,l,<span class="pl-k">!</span><span class="pl-c1">1</span>);n<span class="pl-k">===</span><span class="pl-smi">n</span>.<span class="pl-c1">next</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">steiner</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-en">Rg</span>(n))}<span class="pl-smi">d</span>.<span class="pl-c1">sort</span>(Pg);<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;k<span class="pl-k">++</span>){b<span class="pl-k">=</span>d[k];l<span class="pl-k">=</span>f;<span class="pl-k">if</span>(l<span class="pl-k">=</span><span class="pl-en">Qg</span>(b,l))b<span class="pl-k">=</span><span class="pl-en">ff</span>(l,b),<span class="pl-en">Wc</span>(b,<span class="pl-smi">b</span>.<span class="pl-c1">next</span>);f<span class="pl-k">=</span><span class="pl-en">Wc</span>(f,<span class="pl-smi">f</span>.<span class="pl-c1">next</span>)}}<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">80</span><span class="pl-k">*</span>c){<span class="pl-k">var</span> q<span class="pl-k">=</span>h<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];<span class="pl-k">var</span> r<span class="pl-k">=</span>d<span class="pl-k">=</span>a[<span class="pl-c1">1</span>];<span class="pl-k">for</span>(l<span class="pl-k">=</span>c;l<span class="pl-k">&lt;</span>e;l<span class="pl-k">+=</span>c)k<span class="pl-k">=</span>a[l],b<span class="pl-k">=</span>a[l<span class="pl-k">+</span><span class="pl-c1">1</span>],k<span class="pl-k">&lt;</span>q<span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span>k),b<span class="pl-k">&lt;</span>r<span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span>b),k<span class="pl-k">&gt;</span>h<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span>k),b<span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>b);h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(h<span class="pl-k">-</span>q,d<span class="pl-k">-</span>r);h<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">!==</span>h<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">/</span>h<span class="pl-k">:</span><span class="pl-c1">0</span>}<span class="pl-en">Xc</span>(f,g,c,q,r,h);<span class="pl-k">return</span> g}},$a<span class="pl-k">=</span>{<span class="pl-en">area</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="LC647" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span>b<span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>b;d<span class="pl-k">=</span>e<span class="pl-k">++</span>)c<span class="pl-k">+=</span>a[d].<span class="pl-c1">x</span><span class="pl-k">*</span>a[e].<span class="pl-c1">y</span><span class="pl-k">-</span>a[e].<span class="pl-c1">x</span><span class="pl-k">*</span>a[d].<span class="pl-c1">y</span>;<span class="pl-k">return</span>.<span class="pl-ii">5</span><span class="pl-k">*</span>c},<span class="pl-en">isClockWise</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-smi">$a</span>.<span class="pl-en">area</span>(a)},<span class="pl-en">triangulateShape</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d<span class="pl-k">=</span>[],e<span class="pl-k">=</span>[];<span class="pl-en">gf</span>(a);<span class="pl-en">hf</span>(c,a);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-smi">b</span>.<span class="pl-c1">forEach</span>(gf);<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;a<span class="pl-k">++</span>)<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(f),f<span class="pl-k">+=</span>b[a].<span class="pl-c1">length</span>,<span class="pl-en">hf</span>(c,b[a]);b<span class="pl-k">=</span><span class="pl-smi">Ug</span>.<span class="pl-en">triangulate</span>(c,d);<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;a<span class="pl-k">+=</span><span class="pl-c1">3</span>)<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(a,a<span class="pl-k">+</span><span class="pl-c1">3</span>));<span class="pl-k">return</span> e}};<span class="pl-smi">wb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">wb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>wb;<span class="pl-smi">wb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-k">return</span> <span class="pl-en">jf</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span>.<span class="pl-smi">shapes</span>,</td>
      </tr>
      <tr>
        <td id="L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="LC648" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">parameters</span>.<span class="pl-c1">options</span>,a)};<span class="pl-smi">Ta</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Ta</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Ta;<span class="pl-smi">Ta</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-k">return</span> <span class="pl-en">jf</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span>.<span class="pl-smi">shapes</span>,<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span>.<span class="pl-c1">options</span>,a)};<span class="pl-k">var</span> Sg<span class="pl-k">=</span>{<span class="pl-en">generateTopUV</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){a<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>d];d<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">var</span> f<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>e];e<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">return</span>[<span class="pl-k">new</span> <span class="pl-en">B</span>(b[<span class="pl-c1">3</span><span class="pl-k">*</span>c],b[<span class="pl-c1">3</span><span class="pl-k">*</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>]),<span class="pl-k">new</span> <span class="pl-en">B</span>(a,d),<span class="pl-k">new</span> <span class="pl-en">B</span>(f,e)]},<span class="pl-en">generateSideWallUV</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){a<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>c];<span class="pl-k">var</span> g<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>];c<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>c<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-k">var</span> h<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>d],l<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>];d<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-k">var</span> m<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>e],k<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>];e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="LC649" class="blob-code blob-code-inner js-file-line">b[<span class="pl-c1">3</span><span class="pl-k">*</span>e<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-k">var</span> n<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>f],p<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>f<span class="pl-k">+</span><span class="pl-c1">1</span>];b<span class="pl-k">=</span>b[<span class="pl-c1">3</span><span class="pl-k">*</span>f<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-k">return</span>.<span class="pl-ii">01</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(g<span class="pl-k">-</span>l)<span class="pl-k">?</span>[<span class="pl-k">new</span> <span class="pl-en">B</span>(a,<span class="pl-c1">1</span><span class="pl-k">-</span>c),<span class="pl-k">new</span> <span class="pl-en">B</span>(h,<span class="pl-c1">1</span><span class="pl-k">-</span>d),<span class="pl-k">new</span> <span class="pl-en">B</span>(m,<span class="pl-c1">1</span><span class="pl-k">-</span>e),<span class="pl-k">new</span> <span class="pl-en">B</span>(n,<span class="pl-c1">1</span><span class="pl-k">-</span>b)]<span class="pl-k">:</span>[<span class="pl-k">new</span> <span class="pl-en">B</span>(g,<span class="pl-c1">1</span><span class="pl-k">-</span>c),<span class="pl-k">new</span> <span class="pl-en">B</span>(l,<span class="pl-c1">1</span><span class="pl-k">-</span>d),<span class="pl-k">new</span> <span class="pl-en">B</span>(k,<span class="pl-c1">1</span><span class="pl-k">-</span>e),<span class="pl-k">new</span> <span class="pl-en">B</span>(p,<span class="pl-c1">1</span><span class="pl-k">-</span>b)]}};<span class="pl-smi">Zc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Zc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Zc;<span class="pl-smi">gc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Ta</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">gc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>gc;<span class="pl-smi">$c</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">$c</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>$c;<span class="pl-smi">xb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">xb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>xb;<span class="pl-smi">ad</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ad</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="LC650" class="blob-code blob-code-inner js-file-line">ad;<span class="pl-smi">hc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">hc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>hc;<span class="pl-smi">bd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">bd</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>bd;<span class="pl-smi">ic</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ic</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>ic;<span class="pl-smi">yb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">yb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>yb;<span class="pl-smi">yb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-k">return</span> <span class="pl-en">kf</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span>.<span class="pl-smi">shapes</span>,a)};<span class="pl-smi">zb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">zb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>zb;<span class="pl-smi">zb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);</td>
      </tr>
      <tr>
        <td id="L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="LC651" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-en">kf</span>(<span class="pl-c1">this</span>.<span class="pl-smi">parameters</span>.<span class="pl-smi">shapes</span>,a)};<span class="pl-smi">jc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">jc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>jc;<span class="pl-smi">Ab</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Ab</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Ab;<span class="pl-smi">ab</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ab</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>ab;<span class="pl-smi">cd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Ab</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">cd</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>cd;<span class="pl-smi">dd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">ab</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">dd</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>dd;<span class="pl-smi">ed</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ed</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>ed;<span class="pl-smi">kc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">kc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="LC652" class="blob-code blob-code-inner js-file-line">kc;<span class="pl-k">var</span> ka<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">freeze</span>({WireframeGeometry<span class="pl-k">:</span>Zb,ParametricGeometry<span class="pl-k">:</span>Mc,ParametricBufferGeometry<span class="pl-k">:</span>$b,TetrahedronGeometry<span class="pl-k">:</span>Oc,TetrahedronBufferGeometry<span class="pl-k">:</span>ac,OctahedronGeometry<span class="pl-k">:</span>Pc,OctahedronBufferGeometry<span class="pl-k">:</span>ub,IcosahedronGeometry<span class="pl-k">:</span>Qc,IcosahedronBufferGeometry<span class="pl-k">:</span>bc,DodecahedronGeometry<span class="pl-k">:</span>Rc,DodecahedronBufferGeometry<span class="pl-k">:</span>cc,PolyhedronGeometry<span class="pl-k">:</span>Nc,PolyhedronBufferGeometry<span class="pl-k">:</span>xa,TubeGeometry<span class="pl-k">:</span>Sc,TubeBufferGeometry<span class="pl-k">:</span>dc,TorusKnotGeometry<span class="pl-k">:</span>Tc,TorusKnotBufferGeometry<span class="pl-k">:</span>ec,TorusGeometry<span class="pl-k">:</span>Uc,TorusBufferGeometry<span class="pl-k">:</span>fc,TextGeometry<span class="pl-k">:</span>Zc,TextBufferGeometry<span class="pl-k">:</span>gc,</td>
      </tr>
      <tr>
        <td id="L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="LC653" class="blob-code blob-code-inner js-file-line">SphereGeometry<span class="pl-k">:</span>$c,SphereBufferGeometry<span class="pl-k">:</span>xb,RingGeometry<span class="pl-k">:</span>ad,RingBufferGeometry<span class="pl-k">:</span>hc,PlaneGeometry<span class="pl-k">:</span>Fc,PlaneBufferGeometry<span class="pl-k">:</span>rb,LatheGeometry<span class="pl-k">:</span>bd,LatheBufferGeometry<span class="pl-k">:</span>ic,ShapeGeometry<span class="pl-k">:</span>yb,ShapeBufferGeometry<span class="pl-k">:</span>zb,ExtrudeGeometry<span class="pl-k">:</span>wb,ExtrudeBufferGeometry<span class="pl-k">:</span>Ta,EdgesGeometry<span class="pl-k">:</span>jc,ConeGeometry<span class="pl-k">:</span>cd,ConeBufferGeometry<span class="pl-k">:</span>dd,CylinderGeometry<span class="pl-k">:</span>Ab,CylinderBufferGeometry<span class="pl-k">:</span>ab,CircleGeometry<span class="pl-k">:</span>ed,CircleBufferGeometry<span class="pl-k">:</span>kc,BoxGeometry<span class="pl-k">:</span>Nb,BoxBufferGeometry<span class="pl-k">:</span>pb});<span class="pl-smi">Bb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Bb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Bb;<span class="pl-smi">Bb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isShadowMaterial</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="LC654" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Bb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">lc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Fa</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">lc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>lc;<span class="pl-smi">lc</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isRawShaderMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Ua</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Ua</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Ua;<span class="pl-smi">Ua</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isMeshStandardMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Ua</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">defines</span><span class="pl-k">=</span>{<span class="pl-c1">STANDARD</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>};<span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>);<span class="pl-c1">this</span>.<span class="pl-smi">roughness</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">roughness</span>;<span class="pl-c1">this</span>.<span class="pl-smi">metalness</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">metalness</span>;<span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">map</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lightMap</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="LC655" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">lightMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lightMapIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lightMapIntensity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aoMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aoMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aoMapIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aoMapIntensity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">emissive</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">emissive</span>);<span class="pl-c1">this</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">emissiveMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">emissiveIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">emissiveIntensity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">bumpMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bumpScale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">bumpScale</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalMapType</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalMapType</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalScale</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">normalScale</span>);<span class="pl-c1">this</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementScale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementScale</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementBias</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementBias</span>;<span class="pl-c1">this</span>.<span class="pl-smi">roughnessMap</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="LC656" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">roughnessMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">metalnessMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">metalnessMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">alphaMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">envMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">envMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">envMapIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">envMapIntensity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">refractionRatio</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">refractionRatio</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframe</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinewidth</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinecap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinecap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinejoin</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinejoin</span>;<span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinning</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphNormals</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Cb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Ua</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Cb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Cb;</td>
      </tr>
      <tr>
        <td id="L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="LC657" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Cb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isMeshPhysicalMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Cb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">Ua</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">defines</span><span class="pl-k">=</span>{<span class="pl-c1">PHYSICAL</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>};<span class="pl-c1">this</span>.<span class="pl-smi">reflectivity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">reflectivity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">clearCoat</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clearCoat</span>;<span class="pl-c1">this</span>.<span class="pl-smi">clearCoatRoughness</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clearCoatRoughness</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Ka</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Ka</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Ka;<span class="pl-smi">Ka</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isMeshPhongMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Ka</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>);<span class="pl-c1">this</span>.<span class="pl-smi">specular</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">specular</span>);<span class="pl-c1">this</span>.<span class="pl-smi">shininess</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shininess</span>;<span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="LC658" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">map</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lightMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lightMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lightMapIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lightMapIntensity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aoMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aoMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aoMapIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aoMapIntensity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">emissive</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">emissive</span>);<span class="pl-c1">this</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">emissiveMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">emissiveIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">emissiveIntensity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">bumpMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bumpScale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">bumpScale</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalMapType</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalMapType</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalScale</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">normalScale</span>);<span class="pl-c1">this</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementScale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementScale</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementBias</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementBias</span>;</td>
      </tr>
      <tr>
        <td id="L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="LC659" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">specularMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">specularMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">alphaMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">envMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">envMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">combine</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">combine</span>;<span class="pl-c1">this</span>.<span class="pl-smi">reflectivity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">reflectivity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">refractionRatio</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">refractionRatio</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframe</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinewidth</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinecap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinecap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinejoin</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinejoin</span>;<span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinning</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphNormals</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Db</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Ka</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Db</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Db;</td>
      </tr>
      <tr>
        <td id="L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="LC660" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Db</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isMeshToonMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Db</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">Ka</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">gradientMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">gradientMap</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Eb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Eb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Eb;<span class="pl-smi">Eb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isMeshNormalMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Eb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">bumpMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">bumpScale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">bumpScale</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalMapType</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalMapType</span>;<span class="pl-c1">this</span>.<span class="pl-smi">normalScale</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">normalScale</span>);<span class="pl-c1">this</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementScale</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="LC661" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">displacementScale</span>;<span class="pl-c1">this</span>.<span class="pl-smi">displacementBias</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementBias</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframe</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinewidth</span>;<span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinning</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphNormals</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Fb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Fb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Fb;<span class="pl-smi">Fb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isMeshLambertMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Fb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>);<span class="pl-c1">this</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">map</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lightMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lightMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">lightMapIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lightMapIntensity</span>;</td>
      </tr>
      <tr>
        <td id="L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="LC662" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">aoMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aoMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aoMapIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aoMapIntensity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">emissive</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">emissive</span>);<span class="pl-c1">this</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">emissiveMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">emissiveIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">emissiveIntensity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">specularMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">specularMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">alphaMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">envMap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">envMap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">combine</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">combine</span>;<span class="pl-c1">this</span>.<span class="pl-smi">reflectivity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">reflectivity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">refractionRatio</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">refractionRatio</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframe</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinewidth</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinecap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinecap</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wireframeLinejoin</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinejoin</span>;<span class="pl-c1">this</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="LC663" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">skinning</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>;<span class="pl-c1">this</span>.<span class="pl-smi">morphNormals</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphNormals</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Gb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">T</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Gb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Gb;<span class="pl-smi">Gb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isLineDashedMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Gb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">T</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">scale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scale</span>;<span class="pl-c1">this</span>.<span class="pl-smi">dashSize</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dashSize</span>;<span class="pl-c1">this</span>.<span class="pl-smi">gapSize</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">gapSize</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-k">var</span> Vg<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">freeze</span>({ShadowMaterial<span class="pl-k">:</span>Bb,SpriteMaterial<span class="pl-k">:</span>ib,RawShaderMaterial<span class="pl-k">:</span>lc,ShaderMaterial<span class="pl-k">:</span>Fa,PointsMaterial<span class="pl-k">:</span>Ja,MeshPhysicalMaterial<span class="pl-k">:</span>Cb,MeshStandardMaterial<span class="pl-k">:</span>Ua,MeshPhongMaterial<span class="pl-k">:</span>Ka,</td>
      </tr>
      <tr>
        <td id="L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="LC664" class="blob-code blob-code-inner js-file-line">MeshToonMaterial<span class="pl-k">:</span>Db,MeshNormalMaterial<span class="pl-k">:</span>Eb,MeshLambertMaterial<span class="pl-k">:</span>Fb,MeshDepthMaterial<span class="pl-k">:</span>fb,MeshDistanceMaterial<span class="pl-k">:</span>gb,MeshBasicMaterial<span class="pl-k">:</span>ua,LineDashedMaterial<span class="pl-k">:</span>Gb,LineBasicMaterial<span class="pl-k">:</span><span class="pl-c1">T</span>,Material<span class="pl-k">:</span><span class="pl-c1">I</span>}),Kb<span class="pl-k">=</span>{enabled<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,files<span class="pl-k">:</span>{},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">files</span>[a]<span class="pl-k">=</span>b)},<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">enabled</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">files</span>[a]},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-smi">files</span>[a]},<span class="pl-en">clear</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">files</span><span class="pl-k">=</span>{}}},ya<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ee</span>,cb<span class="pl-k">=</span>{};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">La</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="LC665" class="blob-code blob-code-inner js-file-line">(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">+</span>a);a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">manager</span>.<span class="pl-en">resolveURL</span>(a);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>,f<span class="pl-k">=</span><span class="pl-smi">Kb</span>.<span class="pl-c1">get</span>(a);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f)<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemStart</span>(a),<span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(f);<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a)},<span class="pl-c1">0</span>),f;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>cb[a])cb[a].<span class="pl-c1">push</span>({onLoad<span class="pl-k">:</span>b,onProgress<span class="pl-k">:</span>c,onError<span class="pl-k">:</span>d});<span class="pl-k">else</span>{<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>data:(<span class="pl-c1">.</span><span class="pl-k">*?</span>)(;base64)<span class="pl-k">?</span>,(<span class="pl-c1">.</span><span class="pl-k">*</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>);<span class="pl-k">if</span>(g){c<span class="pl-k">=</span>g[<span class="pl-c1">1</span>];<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-k">!!</span>g[<span class="pl-c1">2</span>];g<span class="pl-k">=</span>g[<span class="pl-c1">3</span>];g<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-en">decodeURIComponent</span>(g);h<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-c1">atob</span>(g));<span class="pl-k">try</span>{<span class="pl-k">var</span> l<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">responseType</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>();<span class="pl-k">switch</span>(l){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>arraybuffer<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>blob<span class="pl-pds">&quot;</span></span>:<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-smi">g</span>.<span class="pl-c1">length</span>);<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>)m[h]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="LC666" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-c1">charCodeAt</span>(h);<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>blob<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>l<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Blob</span>([<span class="pl-smi">m</span>.<span class="pl-smi">buffer</span>],{type<span class="pl-k">:</span>c})<span class="pl-k">:</span><span class="pl-smi">m</span>.<span class="pl-smi">buffer</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>document<span class="pl-pds">&quot;</span></span>:k<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">DOMParser</span>).<span class="pl-en">parseFromString</span>(g,c);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>json<span class="pl-pds">&quot;</span></span>:k<span class="pl-k">=</span><span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(g);<span class="pl-k">break</span>;<span class="pl-k">default</span>:k<span class="pl-k">=</span>g}<span class="pl-c1">window</span>.<span class="pl-en">setTimeout</span>(<span class="pl-k">function</span>(){b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(k);<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a)},<span class="pl-c1">0</span>)}<span class="pl-k">catch</span>(t){<span class="pl-c1">window</span>.<span class="pl-en">setTimeout</span>(<span class="pl-k">function</span>(){d<span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(t);<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a);<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemError</span>(a)},<span class="pl-c1">0</span>)}}<span class="pl-k">else</span>{cb[a]<span class="pl-k">=</span>[];cb[a].<span class="pl-c1">push</span>({onLoad<span class="pl-k">:</span>b,onProgress<span class="pl-k">:</span>c,onError<span class="pl-k">:</span>d});<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>;<span class="pl-smi">n</span>.<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span>,a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">n</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">response</span>;</td>
      </tr>
      <tr>
        <td id="L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="LC667" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Kb</span>.<span class="pl-c1">add</span>(a,c);<span class="pl-k">var</span> d<span class="pl-k">=</span>cb[a];<span class="pl-k">delete</span> cb[a];<span class="pl-k">if</span>(<span class="pl-c1">200</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">status</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">status</span>){<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">status</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.FileLoader: HTTP Status 0 received.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>d[f];<span class="pl-k">if</span>(<span class="pl-smi">h</span>.<span class="pl-smi">onLoad</span>)<span class="pl-smi">h</span>.<span class="pl-c1">onLoad</span>(c)}<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a)}<span class="pl-k">else</span>{f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>)<span class="pl-k">if</span>(h<span class="pl-k">=</span>d[f],<span class="pl-smi">h</span>.<span class="pl-smi">onError</span>)<span class="pl-smi">h</span>.<span class="pl-c1">onError</span>(b);<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a);<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemError</span>(a)}},<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">n</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>progress<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>cb[a],d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>c[d];<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-smi">onProgress</span>)<span class="pl-smi">f</span>.<span class="pl-en">onProgress</span>(b)}},<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">n</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>error<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="LC668" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>cb[a];<span class="pl-k">delete</span> cb[a];<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>f;d<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>c[d];<span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-smi">onError</span>)<span class="pl-smi">g</span>.<span class="pl-c1">onError</span>(b)}<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a);<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemError</span>(a)},<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">responseType</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">responseType</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">responseType</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">withCredentials</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">n</span>.<span class="pl-smi">withCredentials</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">withCredentials</span>);<span class="pl-smi">n</span>.<span class="pl-smi">overrideMimeType</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-en">overrideMimeType</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">mimeType</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">mimeType</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text/plain<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(h <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">requestHeader</span>)<span class="pl-smi">n</span>.<span class="pl-c1">setRequestHeader</span>(h,<span class="pl-c1">this</span>.<span class="pl-smi">requestHeader</span>[h]);<span class="pl-smi">n</span>.<span class="pl-c1">send</span>(<span class="pl-c1">null</span>)}<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemStart</span>(a);<span class="pl-k">return</span> n}},<span class="pl-en">setPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="LC669" class="blob-code blob-code-inner js-file-line">a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setResponseType</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">responseType</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setWithCredentials</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">withCredentials</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setMimeType</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">mimeType</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setRequestHeader</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">requestHeader</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">lf</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">e</span>){<span class="pl-smi">l</span>.<span class="pl-c1">load</span>(a[e],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">_parser</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);g[e]<span class="pl-k">=</span>{width<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,height<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>,format<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">format</span>,mipmaps<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">mipmaps</span>};m<span class="pl-k">+=</span><span class="pl-c1">1</span>;<span class="pl-c1">6</span><span class="pl-k">===</span>m<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">mipmapCount</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">minFilter</span><span class="pl-k">=</span><span class="pl-c1">1006</span>),<span class="pl-smi">h</span>.<span class="pl-smi">format</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">format</span>,</td>
      </tr>
      <tr>
        <td id="L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="LC670" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(h))},c,d)}<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>,g<span class="pl-k">=</span>[],h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Yb</span>;<span class="pl-smi">h</span>.<span class="pl-smi">image</span><span class="pl-k">=</span>g;<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">La</span>(<span class="pl-c1">this</span>.<span class="pl-smi">manager</span>);<span class="pl-smi">l</span>.<span class="pl-en">setPath</span>(<span class="pl-c1">this</span>.<span class="pl-smi">path</span>);<span class="pl-smi">l</span>.<span class="pl-en">setResponseType</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>arraybuffer<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(a))<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>,n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>n;<span class="pl-k">++</span>k)<span class="pl-en">e</span>(k);<span class="pl-k">else</span> <span class="pl-smi">l</span>.<span class="pl-c1">load</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">_parser</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isCubemap</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">mipmaps</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-smi">mipmapCount</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>c;d<span class="pl-k">++</span>){g[d]<span class="pl-k">=</span>{mipmaps<span class="pl-k">:</span>[]};<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">mipmapCount</span>;e<span class="pl-k">++</span>)g[d].<span class="pl-smi">mipmaps</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mipmaps</span>[d<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">mipmapCount</span><span class="pl-k">+</span>e]),g[d].<span class="pl-smi">format</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">format</span>,g[d].<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,g[d].<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>}<span class="pl-k">else</span> <span class="pl-smi">h</span>.<span class="pl-smi">image</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,</td>
      </tr>
      <tr>
        <td id="L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="LC671" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-smi">image</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>,<span class="pl-smi">h</span>.<span class="pl-smi">mipmaps</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">mipmaps</span>;<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">mipmapCount</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">minFilter</span><span class="pl-k">=</span><span class="pl-c1">1006</span>);<span class="pl-smi">h</span>.<span class="pl-smi">format</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">format</span>;<span class="pl-smi">h</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(h)},c,d);<span class="pl-k">return</span> h},<span class="pl-en">setPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">fe</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>,f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">lb</span>,g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">La</span>(<span class="pl-c1">this</span>.<span class="pl-smi">manager</span>);<span class="pl-smi">g</span>.<span class="pl-en">setResponseType</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>arraybuffer<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">g</span>.<span class="pl-c1">load</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">_parser</span>(a))<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">image</span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-smi">image</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">image</span><span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">image</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-smi">f</span>.<span class="pl-smi">image</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>,<span class="pl-smi">f</span>.<span class="pl-smi">image</span>.<span class="pl-c1">data</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>),<span class="pl-smi">f</span>.<span class="pl-smi">wrapS</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">wrapS</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">wrapS</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="LC672" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1001</span>,<span class="pl-smi">f</span>.<span class="pl-smi">wrapT</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">wrapT</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">wrapT</span><span class="pl-k">:</span><span class="pl-c1">1001</span>,<span class="pl-smi">f</span>.<span class="pl-smi">magFilter</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">magFilter</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">magFilter</span><span class="pl-k">:</span><span class="pl-c1">1006</span>,<span class="pl-smi">f</span>.<span class="pl-smi">minFilter</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">minFilter</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">minFilter</span><span class="pl-k">:</span><span class="pl-c1">1008</span>,<span class="pl-smi">f</span>.<span class="pl-smi">anisotropy</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">anisotropy</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">anisotropy</span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">format</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">format</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">format</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">mipmaps</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">mipmaps</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">mipmaps</span>),<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">mipmapCount</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">minFilter</span><span class="pl-k">=</span><span class="pl-c1">1006</span>),<span class="pl-smi">f</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(f,a)},c,d);<span class="pl-k">return</span> f}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">fd</span>.<span class="pl-c1">prototype</span>,{crossOrigin<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>anonymous<span class="pl-pds">&quot;</span></span>,<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(){<span class="pl-smi">l</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="LC673" class="blob-code blob-code-inner js-file-line">e,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">l</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>error<span class="pl-pds">&quot;</span></span>,f,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">Kb</span>.<span class="pl-c1">add</span>(a,<span class="pl-c1">this</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(<span class="pl-c1">this</span>);<span class="pl-smi">g</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a)}function f(b){l.removeEventListener(&quot;load&quot;,e,!1);l.removeEventListener(&quot;error&quot;,f,!1);d&amp;&amp;d(b);g.manager.itemEnd(a);g.manager.itemError(a)}void 0===a&amp;&amp;(a=&quot;&quot;);void 0!==this.path&amp;&amp;(a=this.path+a);a=this.manager.resolveURL(a);var g=this,h=Kb.get(a);if(void 0!==h)return g.manager.itemStart(a),setTimeout(function(){b&amp;&amp;b(h);g.manager.itemEnd(a)},0),h;var l=document.createElementNS(&quot;http://www.w3.org/1999/xhtml&quot;,&quot;img&quot;);</td>
      </tr>
      <tr>
        <td id="L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="LC674" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">l</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>,e,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">l</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>error<span class="pl-pds">&quot;</span></span>,f,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>data:<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">5</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">l</span>.<span class="pl-smi">crossOrigin</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span>);<span class="pl-smi">g</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemStart</span>(a);<span class="pl-smi">l</span>.<span class="pl-smi">src</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> l},<span class="pl-en">setCrossOrigin</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ge</span>.<span class="pl-c1">prototype</span>,{crossOrigin<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>anonymous<span class="pl-pds">&quot;</span></span>,<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">c</span>){<span class="pl-smi">g</span>.<span class="pl-c1">load</span>(a[c],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">f</span>.<span class="pl-c1">images</span>[c]<span class="pl-k">=</span>a;h<span class="pl-k">++</span>;<span class="pl-c1">6</span><span class="pl-k">===</span>h<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(f))},<span class="pl-k">void</span> <span class="pl-c1">0</span>,d)}<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Za</span>,g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">fd</span>(<span class="pl-c1">this</span>.<span class="pl-smi">manager</span>);</td>
      </tr>
      <tr>
        <td id="L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="LC675" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-en">setCrossOrigin</span>(<span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span>);<span class="pl-smi">g</span>.<span class="pl-en">setPath</span>(<span class="pl-c1">this</span>.<span class="pl-smi">path</span>);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">++</span>c)<span class="pl-en">e</span>(c);<span class="pl-k">return</span> f},<span class="pl-en">setCrossOrigin</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Ad</span>.<span class="pl-c1">prototype</span>,{crossOrigin<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>anonymous<span class="pl-pds">&quot;</span></span>,<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ea</span>,f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">fd</span>(<span class="pl-c1">this</span>.<span class="pl-smi">manager</span>);<span class="pl-smi">f</span>.<span class="pl-en">setCrossOrigin</span>(<span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span>);<span class="pl-smi">f</span>.<span class="pl-en">setPath</span>(<span class="pl-c1">this</span>.<span class="pl-smi">path</span>);<span class="pl-smi">f</span>.<span class="pl-c1">load</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">e</span>.<span class="pl-smi">image</span><span class="pl-k">=</span>c;c<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">search</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\.</span>(jpg<span class="pl-k">|</span>jpeg)<span class="pl-k">$</span><span class="pl-pds">/</span></span>)<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">search</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>data:image<span class="pl-cce">\/</span>jpeg<span class="pl-pds">/</span></span>);<span class="pl-smi">e</span>.<span class="pl-smi">format</span><span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-c1">1022</span><span class="pl-k">:</span><span class="pl-c1">1023</span>;<span class="pl-smi">e</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="LC676" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(e)},c,d);<span class="pl-k">return</span> e},<span class="pl-en">setCrossOrigin</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">getPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Curve: .getPoint() not implemented.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">getPointAt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getUtoTmapping</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getPoint</span>(a,b)},<span class="pl-en">getPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">5</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;=</span>a;c<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-en">getPoint</span>(c<span class="pl-k">/</span>a));<span class="pl-k">return</span> b},<span class="pl-en">getSpacedPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">5</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="LC677" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;c<span class="pl-k">&lt;=</span>a;c<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-en">getPointAt</span>(c<span class="pl-k">/</span>a));<span class="pl-k">return</span> b},<span class="pl-en">getLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getLengths</span>();<span class="pl-k">return</span> a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]},<span class="pl-en">getLengths</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">arcLengthDivisions</span>);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">cacheArcLengths</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">cacheArcLengths</span>.<span class="pl-c1">length</span><span class="pl-k">===</span>a<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">needsUpdate</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">cacheArcLengths</span>;<span class="pl-c1">this</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getPoint</span>(<span class="pl-c1">0</span>),d,e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">1</span>;d<span class="pl-k">&lt;=</span>a;d<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getPoint</span>(d<span class="pl-k">/</span>a);e<span class="pl-k">+=</span><span class="pl-smi">f</span>.<span class="pl-en">distanceTo</span>(c);<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(e);c<span class="pl-k">=</span>f}<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">cacheArcLengths</span><span class="pl-k">=</span>b},<span class="pl-en">updateArcLengths</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="LC678" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-en">getLengths</span>()},<span class="pl-en">getUtoTmapping</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getLengths</span>(),d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;b<span class="pl-k">=</span>b<span class="pl-k">?</span>b<span class="pl-k">:</span>a<span class="pl-k">*</span>c[d<span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>,g;e<span class="pl-k">&lt;=</span>f;)<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(e<span class="pl-k">+</span>(f<span class="pl-k">-</span>e)<span class="pl-k">/</span><span class="pl-c1">2</span>),g<span class="pl-k">=</span>c[a]<span class="pl-k">-</span>b,<span class="pl-c1">0</span><span class="pl-k">&gt;</span>g)e<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>g)f<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">else</span>{f<span class="pl-k">=</span>a;<span class="pl-k">break</span>}a<span class="pl-k">=</span>f;<span class="pl-k">if</span>(c[a]<span class="pl-k">===</span>b)<span class="pl-k">return</span> a<span class="pl-k">/</span>(d<span class="pl-k">-</span><span class="pl-c1">1</span>);e<span class="pl-k">=</span>c[a];<span class="pl-k">return</span>(a<span class="pl-k">+</span>(b<span class="pl-k">-</span>e)<span class="pl-k">/</span>(c[a<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">-</span>e))<span class="pl-k">/</span>(d<span class="pl-k">-</span><span class="pl-c1">1</span>)},<span class="pl-en">getTangent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">1E-4</span>;a<span class="pl-k">+=</span><span class="pl-c1">1E-4</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">1</span><span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span>);b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getPoint</span>(b);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getPoint</span>(a).<span class="pl-en">clone</span>().<span class="pl-c1">sub</span>(b).<span class="pl-c1">normalize</span>()},<span class="pl-en">getTangentAt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getUtoTmapping</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getTangent</span>(a)},<span class="pl-en">computeFrenetFrames</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="LC679" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,d<span class="pl-k">=</span>[],e<span class="pl-k">=</span>[],f<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>,l;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;=</span>a;l<span class="pl-k">++</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span>l<span class="pl-k">/</span>a;d[l]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getTangentAt</span>(m);d[l].<span class="pl-c1">normalize</span>()}e[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;f[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;l<span class="pl-k">=</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>;m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d[<span class="pl-c1">0</span>].<span class="pl-c1">x</span>);<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d[<span class="pl-c1">0</span>].<span class="pl-c1">y</span>),n<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d[<span class="pl-c1">0</span>].<span class="pl-c1">z</span>);m<span class="pl-k">&lt;=</span>l<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>m,<span class="pl-smi">c</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>));k<span class="pl-k">&lt;=</span>l<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>k,<span class="pl-smi">c</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>));n<span class="pl-k">&lt;=</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-smi">g</span>.<span class="pl-en">crossVectors</span>(d[<span class="pl-c1">0</span>],c).<span class="pl-c1">normalize</span>();e[<span class="pl-c1">0</span>].<span class="pl-en">crossVectors</span>(d[<span class="pl-c1">0</span>],g);f[<span class="pl-c1">0</span>].<span class="pl-en">crossVectors</span>(d[<span class="pl-c1">0</span>],e[<span class="pl-c1">0</span>]);<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">1</span>;l<span class="pl-k">&lt;=</span>a;l<span class="pl-k">++</span>)e[l]<span class="pl-k">=</span>e[l<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-en">clone</span>(),f[l]<span class="pl-k">=</span>f[l<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-en">clone</span>(),<span class="pl-smi">g</span>.<span class="pl-en">crossVectors</span>(d[l<span class="pl-k">-</span><span class="pl-c1">1</span>],d[l]),<span class="pl-smi">g</span>.<span class="pl-c1">length</span>()<span class="pl-k">&gt;</span><span class="pl-c1">Number</span>.<span class="pl-c1">EPSILON</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">g</span>.<span class="pl-c1">normalize</span>(),</td>
      </tr>
      <tr>
        <td id="L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="LC680" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">acos</span>(<span class="pl-c1">J</span>.<span class="pl-en">clamp</span>(d[l<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-en">dot</span>(d[l]),<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)),e[l].<span class="pl-en">applyMatrix4</span>(<span class="pl-smi">h</span>.<span class="pl-en">makeRotationAxis</span>(g,c))),f[l].<span class="pl-en">crossVectors</span>(d[l],e[l]);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">acos</span>(<span class="pl-c1">J</span>.<span class="pl-en">clamp</span>(e[<span class="pl-c1">0</span>].<span class="pl-en">dot</span>(e[a]),<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)),c<span class="pl-k">/=</span>a,<span class="pl-c1">0</span><span class="pl-k">&lt;</span>d[<span class="pl-c1">0</span>].<span class="pl-en">dot</span>(<span class="pl-smi">g</span>.<span class="pl-en">crossVectors</span>(e[<span class="pl-c1">0</span>],e[a]))<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">-</span>c),l<span class="pl-k">=</span><span class="pl-c1">1</span>;l<span class="pl-k">&lt;=</span>a;l<span class="pl-k">++</span>)e[l].<span class="pl-en">applyMatrix4</span>(<span class="pl-smi">h</span>.<span class="pl-en">makeRotationAxis</span>(d[l],c<span class="pl-k">*</span>l)),f[l].<span class="pl-en">crossVectors</span>(d[l],e[l]);<span class="pl-k">return</span>{tangents<span class="pl-k">:</span>d,normals<span class="pl-k">:</span>e,binormals<span class="pl-k">:</span>f}},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">arcLengthDivisions</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">arcLengthDivisions</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="LC681" class="blob-code blob-code-inner js-file-line">{metadata<span class="pl-k">:</span>{version<span class="pl-k">:</span><span class="pl-c1">4.5</span>,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Curve<span class="pl-pds">&quot;</span></span>,generator<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Curve.toJSON<span class="pl-pds">&quot;</span></span>}};<span class="pl-smi">a</span>.<span class="pl-smi">arcLengthDivisions</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">arcLengthDivisions</span>;<span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">type</span>;<span class="pl-k">return</span> a},<span class="pl-en">fromJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">arcLengthDivisions</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">arcLengthDivisions</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">Da</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Da</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Da;<span class="pl-smi">Da</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isEllipseCurve</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Da</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPoint</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-k">new</span> <span class="pl-en">B</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aEndAngle</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">aStartAngle</span>,e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(d)<span class="pl-k">&lt;</span><span class="pl-c1">Number</span>.<span class="pl-c1">EPSILON</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d;)d<span class="pl-k">+=</span>c;<span class="pl-k">for</span>(;d<span class="pl-k">&gt;</span>c;)d<span class="pl-k">-=</span>c;d<span class="pl-k">&lt;</span><span class="pl-c1">Number</span>.<span class="pl-c1">EPSILON</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>e<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>c);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="LC682" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">aClockwise</span><span class="pl-k">||</span>e<span class="pl-k">||</span>(d<span class="pl-k">=</span>d<span class="pl-k">===</span>c<span class="pl-k">?</span><span class="pl-k">-</span>c<span class="pl-k">:</span>d<span class="pl-k">-</span>c);c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aStartAngle</span><span class="pl-k">+</span>a<span class="pl-k">*</span>d;a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aX</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">xRadius</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(c);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aY</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">yRadius</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(c);<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">aRotation</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-c1">this</span>.<span class="pl-smi">aRotation</span>),d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-c1">this</span>.<span class="pl-smi">aRotation</span>),e<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">aX</span>,f<span class="pl-k">-=</span><span class="pl-c1">this</span>.<span class="pl-smi">aY</span>,a<span class="pl-k">=</span>e<span class="pl-k">*</span>c<span class="pl-k">-</span>f<span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">aX</span>,f<span class="pl-k">=</span>e<span class="pl-k">*</span>d<span class="pl-k">+</span>f<span class="pl-k">*</span>c<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">aY</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">set</span>(a,f)};<span class="pl-smi">Da</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">aX</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aX</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aY</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aY</span>;<span class="pl-c1">this</span>.<span class="pl-smi">xRadius</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xRadius</span>;<span class="pl-c1">this</span>.<span class="pl-smi">yRadius</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">yRadius</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aStartAngle</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aStartAngle</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aEndAngle</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aEndAngle</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aClockwise</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aClockwise</span>;</td>
      </tr>
      <tr>
        <td id="L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="LC683" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">aRotation</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aRotation</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Da</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">aX</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aX</span>;<span class="pl-smi">a</span>.<span class="pl-smi">aY</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aY</span>;<span class="pl-smi">a</span>.<span class="pl-smi">xRadius</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">xRadius</span>;<span class="pl-smi">a</span>.<span class="pl-smi">yRadius</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">yRadius</span>;<span class="pl-smi">a</span>.<span class="pl-smi">aStartAngle</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aStartAngle</span>;<span class="pl-smi">a</span>.<span class="pl-smi">aEndAngle</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aEndAngle</span>;<span class="pl-smi">a</span>.<span class="pl-smi">aClockwise</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aClockwise</span>;<span class="pl-smi">a</span>.<span class="pl-smi">aRotation</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">aRotation</span>;<span class="pl-k">return</span> a};<span class="pl-smi">Da</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fromJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">aX</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aX</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aY</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aY</span>;<span class="pl-c1">this</span>.<span class="pl-smi">xRadius</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">xRadius</span>;<span class="pl-c1">this</span>.<span class="pl-smi">yRadius</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">yRadius</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aStartAngle</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aStartAngle</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aEndAngle</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aEndAngle</span>;</td>
      </tr>
      <tr>
        <td id="L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="LC684" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">aClockwise</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aClockwise</span>;<span class="pl-c1">this</span>.<span class="pl-smi">aRotation</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aRotation</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">mc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Da</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">mc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>mc;<span class="pl-smi">mc</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isArcCurve</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> Td<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,Ce<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">he</span>,De<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">he</span>,Ee<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">he</span>;<span class="pl-smi">pa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>pa;<span class="pl-smi">pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isCatmullRomCurve3</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPoint</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;a<span class="pl-k">*=</span>d<span class="pl-k">-</span>(<span class="pl-c1">this</span>.<span class="pl-c1">closed</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a);a<span class="pl-k">-=</span>e;<span class="pl-c1">this</span>.<span class="pl-c1">closed</span><span class="pl-k">?</span>e<span class="pl-k">+=</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>e<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(e)<span class="pl-k">/</span>d)<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>d<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">===</span>d<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="LC685" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>d<span class="pl-k">-</span><span class="pl-c1">2</span>,a<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">closed</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>e)<span class="pl-k">var</span> f<span class="pl-k">=</span>c[(e<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">%</span>d];<span class="pl-k">else</span> <span class="pl-smi">Td</span>.<span class="pl-en">subVectors</span>(c[<span class="pl-c1">0</span>],c[<span class="pl-c1">1</span>]).<span class="pl-c1">add</span>(c[<span class="pl-c1">0</span>]),f<span class="pl-k">=</span>Td;<span class="pl-k">var</span> g<span class="pl-k">=</span>c[e<span class="pl-k">%</span>d];<span class="pl-k">var</span> h<span class="pl-k">=</span>c[(e<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span>d];<span class="pl-c1">this</span>.<span class="pl-c1">closed</span><span class="pl-k">||</span>e<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">&lt;</span>d<span class="pl-k">?</span>c<span class="pl-k">=</span>c[(e<span class="pl-k">+</span><span class="pl-c1">2</span>)<span class="pl-k">%</span>d]<span class="pl-k">:</span>(<span class="pl-smi">Td</span>.<span class="pl-en">subVectors</span>(c[d<span class="pl-k">-</span><span class="pl-c1">1</span>],c[d<span class="pl-k">-</span><span class="pl-c1">2</span>]).<span class="pl-c1">add</span>(c[d<span class="pl-k">-</span><span class="pl-c1">1</span>]),c<span class="pl-k">=</span>Td);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>centripetal<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">curveType</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>chordal<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">curveType</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>chordal<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">curveType</span><span class="pl-k">?</span><span class="pl-c1">.5</span><span class="pl-k">:</span><span class="pl-c1">.25</span>;d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-smi">f</span>.<span class="pl-en">distanceToSquared</span>(g),l);e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-smi">g</span>.<span class="pl-en">distanceToSquared</span>(h),l);l<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-smi">h</span>.<span class="pl-en">distanceToSquared</span>(c),l);<span class="pl-c1">1E-4</span><span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-c1">1E-4</span><span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>e);<span class="pl-c1">1E-4</span><span class="pl-k">&gt;</span>l<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>e);<span class="pl-smi">Ce</span>.<span class="pl-en">initNonuniformCatmullRom</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span>,<span class="pl-smi">g</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,</td>
      </tr>
      <tr>
        <td id="L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="LC686" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">x</span>,d,e,l);<span class="pl-smi">De</span>.<span class="pl-en">initNonuniformCatmullRom</span>(<span class="pl-smi">f</span>.<span class="pl-c1">y</span>,<span class="pl-smi">g</span>.<span class="pl-c1">y</span>,<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span>,d,e,l);<span class="pl-smi">Ee</span>.<span class="pl-en">initNonuniformCatmullRom</span>(<span class="pl-smi">f</span>.<span class="pl-c1">z</span>,<span class="pl-smi">g</span>.<span class="pl-c1">z</span>,<span class="pl-smi">h</span>.<span class="pl-c1">z</span>,<span class="pl-smi">c</span>.<span class="pl-c1">z</span>,d,e,l)}<span class="pl-k">else</span><span class="pl-s"><span class="pl-pds">&quot;</span>catmullrom<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">curveType</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">Ce</span>.<span class="pl-en">initCatmullRom</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span>,<span class="pl-smi">g</span>.<span class="pl-c1">x</span>,<span class="pl-smi">h</span>.<span class="pl-c1">x</span>,<span class="pl-smi">c</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">tension</span>),<span class="pl-smi">De</span>.<span class="pl-en">initCatmullRom</span>(<span class="pl-smi">f</span>.<span class="pl-c1">y</span>,<span class="pl-smi">g</span>.<span class="pl-c1">y</span>,<span class="pl-smi">h</span>.<span class="pl-c1">y</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">tension</span>),<span class="pl-smi">Ee</span>.<span class="pl-en">initCatmullRom</span>(<span class="pl-smi">f</span>.<span class="pl-c1">z</span>,<span class="pl-smi">g</span>.<span class="pl-c1">z</span>,<span class="pl-smi">h</span>.<span class="pl-c1">z</span>,<span class="pl-smi">c</span>.<span class="pl-c1">z</span>,<span class="pl-c1">this</span>.<span class="pl-smi">tension</span>));<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-smi">Ce</span>.<span class="pl-en">calc</span>(a),<span class="pl-smi">De</span>.<span class="pl-en">calc</span>(a),<span class="pl-smi">Ee</span>.<span class="pl-en">calc</span>(a));<span class="pl-k">return</span> b};<span class="pl-smi">pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">points</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">points</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">points</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>[b].<span class="pl-en">clone</span>());<span class="pl-c1">this</span>.<span class="pl-c1">closed</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="LC687" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">closed</span>;<span class="pl-c1">this</span>.<span class="pl-smi">curveType</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">curveType</span>;<span class="pl-c1">this</span>.<span class="pl-smi">tension</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tension</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">points</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-smi">points</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">points</span>[b].<span class="pl-en">toArray</span>());<span class="pl-smi">a</span>.<span class="pl-c1">closed</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">closed</span>;<span class="pl-smi">a</span>.<span class="pl-smi">curveType</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">curveType</span>;<span class="pl-smi">a</span>.<span class="pl-smi">tension</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">tension</span>;<span class="pl-k">return</span> a};<span class="pl-smi">pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fromJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">points</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">points</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">points</span>[b];<span class="pl-c1">this</span>.<span class="pl-smi">points</span>.<span class="pl-c1">push</span>((<span class="pl-k">new</span> <span class="pl-en">p</span>).<span class="pl-en">fromArray</span>(d))}<span class="pl-c1">this</span>.<span class="pl-c1">closed</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="LC688" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">closed</span>;<span class="pl-c1">this</span>.<span class="pl-smi">curveType</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">curveType</span>;<span class="pl-c1">this</span>.<span class="pl-smi">tension</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tension</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Ma</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Ma;<span class="pl-smi">Ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isCubicBezierCurve</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPoint</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-k">new</span> <span class="pl-en">B</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v1</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v2</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v3</span>;<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-en">hd</span>(a,<span class="pl-smi">c</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-c1">x</span>,<span class="pl-smi">f</span>.<span class="pl-c1">x</span>),<span class="pl-en">hd</span>(a,<span class="pl-smi">c</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-c1">y</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span>));<span class="pl-k">return</span> b};<span class="pl-smi">Ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v3</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v3</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="LC689" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">v0</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v1</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v2</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v3</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v3</span>.<span class="pl-en">toArray</span>();<span class="pl-k">return</span> a};<span class="pl-smi">Ma</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fromJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v3</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v3</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Va</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Va</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Va;<span class="pl-smi">Va</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isCubicBezierCurve3</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Va</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPoint</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v1</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v2</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v3</span>;</td>
      </tr>
      <tr>
        <td id="L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="LC690" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-en">hd</span>(a,<span class="pl-smi">c</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-c1">x</span>,<span class="pl-smi">f</span>.<span class="pl-c1">x</span>),<span class="pl-en">hd</span>(a,<span class="pl-smi">c</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-c1">y</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span>),<span class="pl-en">hd</span>(a,<span class="pl-smi">c</span>.<span class="pl-c1">z</span>,<span class="pl-smi">d</span>.<span class="pl-c1">z</span>,<span class="pl-smi">e</span>.<span class="pl-c1">z</span>,<span class="pl-smi">f</span>.<span class="pl-c1">z</span>));<span class="pl-k">return</span> b};<span class="pl-smi">Va</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v3</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v3</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Va</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">v0</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v1</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v2</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v3</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v3</span>.<span class="pl-en">toArray</span>();<span class="pl-k">return</span> a};<span class="pl-smi">Va</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fromJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);</td>
      </tr>
      <tr>
        <td id="L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="LC691" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v3</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v3</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">ia</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ia</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>ia;<span class="pl-smi">ia</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isLineCurve</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">ia</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPoint</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-k">new</span> <span class="pl-en">B</span>;<span class="pl-c1">1</span><span class="pl-k">===</span>a<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>)<span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>).<span class="pl-c1">sub</span>(<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>),<span class="pl-smi">b</span>.<span class="pl-en">multiplyScalar</span>(a).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>));<span class="pl-k">return</span> b};<span class="pl-smi">ia</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPointAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getPoint</span>(a,b)};<span class="pl-smi">ia</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getTangent</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">clone</span>().<span class="pl-c1">sub</span>(<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>).<span class="pl-c1">normalize</span>()};<span class="pl-smi">ia</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="LC692" class="blob-code blob-code-inner js-file-line">a);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">ia</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">v1</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v2</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">toArray</span>();<span class="pl-k">return</span> a};<span class="pl-smi">ia</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fromJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Na</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Na</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Na;<span class="pl-smi">Na</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isLineCurve3</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Na</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPoint</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-c1">1</span><span class="pl-k">===</span>a<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>)<span class="pl-k">:</span>(<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>).<span class="pl-c1">sub</span>(<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>),</td>
      </tr>
      <tr>
        <td id="L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="LC693" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">multiplyScalar</span>(a).<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>));<span class="pl-k">return</span> b};<span class="pl-smi">Na</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPointAt</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getPoint</span>(a,b)};<span class="pl-smi">Na</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Na</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">v1</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v2</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">toArray</span>();<span class="pl-k">return</span> a};<span class="pl-smi">Na</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fromJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Oa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="LC694" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">Oa</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Oa;<span class="pl-smi">Oa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isQuadraticBezierCurve</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Oa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPoint</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-k">new</span> <span class="pl-en">B</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v1</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v2</span>;<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-en">gd</span>(a,<span class="pl-smi">c</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-c1">x</span>),<span class="pl-en">gd</span>(a,<span class="pl-smi">c</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-c1">y</span>));<span class="pl-k">return</span> b};<span class="pl-smi">Oa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Oa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">v0</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v1</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v2</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">toArray</span>();<span class="pl-k">return</span> a};<span class="pl-smi">Oa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fromJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="LC695" class="blob-code blob-code-inner js-file-line">a);<span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Wa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Wa</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Wa;<span class="pl-smi">Wa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isQuadraticBezierCurve3</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Wa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPoint</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v1</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v2</span>;<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-en">gd</span>(a,<span class="pl-smi">c</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-c1">x</span>),<span class="pl-en">gd</span>(a,<span class="pl-smi">c</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-c1">y</span>),<span class="pl-en">gd</span>(a,<span class="pl-smi">c</span>.<span class="pl-c1">z</span>,<span class="pl-smi">d</span>.<span class="pl-c1">z</span>,<span class="pl-smi">e</span>.<span class="pl-c1">z</span>));<span class="pl-k">return</span> b};<span class="pl-smi">Wa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Wa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="LC696" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">v0</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v1</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">v2</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">toArray</span>();<span class="pl-k">return</span> a};<span class="pl-smi">Wa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fromJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">v0</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v1</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">v2</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v2</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Pa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Pa;<span class="pl-smi">Pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isSplineCurve</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">Pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getPoint</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-k">new</span> <span class="pl-en">B</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>,d<span class="pl-k">=</span>(<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">*</span>a;a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(d);d<span class="pl-k">-=</span>a;<span class="pl-k">var</span> e<span class="pl-k">=</span>c[<span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>a<span class="pl-k">-</span><span class="pl-c1">1</span>],f<span class="pl-k">=</span>c[a],g<span class="pl-k">=</span>c[a<span class="pl-k">&gt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="LC697" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>];c<span class="pl-k">=</span>c[a<span class="pl-k">&gt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">3</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>a<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-en">mf</span>(d,<span class="pl-smi">e</span>.<span class="pl-c1">x</span>,<span class="pl-smi">f</span>.<span class="pl-c1">x</span>,<span class="pl-smi">g</span>.<span class="pl-c1">x</span>,<span class="pl-smi">c</span>.<span class="pl-c1">x</span>),<span class="pl-en">mf</span>(d,<span class="pl-smi">e</span>.<span class="pl-c1">y</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span>,<span class="pl-smi">g</span>.<span class="pl-c1">y</span>,<span class="pl-smi">c</span>.<span class="pl-c1">y</span>));<span class="pl-k">return</span> b};<span class="pl-smi">Pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">copy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">points</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">points</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">points</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">points</span>[b].<span class="pl-en">clone</span>());<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">Pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">toJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">points</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">points</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-smi">points</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">points</span>[b].<span class="pl-en">toArray</span>());<span class="pl-k">return</span> a};<span class="pl-smi">Pa</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fromJSON</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="LC698" class="blob-code blob-code-inner js-file-line">a);<span class="pl-c1">this</span>.<span class="pl-smi">points</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">points</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">points</span>[b];<span class="pl-c1">this</span>.<span class="pl-smi">points</span>.<span class="pl-c1">push</span>((<span class="pl-k">new</span> <span class="pl-en">B</span>).<span class="pl-en">fromArray</span>(d))}<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-k">var</span> Bf<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">freeze</span>({ArcCurve<span class="pl-k">:</span>mc,CatmullRomCurve3<span class="pl-k">:</span>pa,CubicBezierCurve<span class="pl-k">:</span>Ma,CubicBezierCurve3<span class="pl-k">:</span>Va,EllipseCurve<span class="pl-k">:</span>Da,LineCurve<span class="pl-k">:</span>ia,LineCurve3<span class="pl-k">:</span>Na,QuadraticBezierCurve<span class="pl-k">:</span>Oa,QuadraticBezierCurve3<span class="pl-k">:</span>Wa,SplineCurve<span class="pl-k">:</span>Pa});<span class="pl-smi">bb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:bb,add:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">push</span>(a)},<span class="pl-en">closePath</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">curves</span>[<span class="pl-c1">0</span>].<span class="pl-en">getPoint</span>(<span class="pl-c1">0</span>),b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">curves</span>[<span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">length</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="LC699" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>].<span class="pl-en">getPoint</span>(<span class="pl-c1">1</span>);<span class="pl-smi">a</span>.<span class="pl-en">equals</span>(b)<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">ia</span>(b,a))},<span class="pl-en">getPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-en">getLength</span>(),c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getCurveLengths</span>();<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;){<span class="pl-k">if</span>(c[a]<span class="pl-k">&gt;=</span>b)<span class="pl-k">return</span> b<span class="pl-k">=</span>c[a]<span class="pl-k">-</span>b,a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">curves</span>[a],c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getLength</span>(),<span class="pl-smi">a</span>.<span class="pl-en">getPointAt</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">-</span>b<span class="pl-k">/</span>c);a<span class="pl-k">++</span>}<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">getLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getCurveLengths</span>();<span class="pl-k">return</span> a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]},<span class="pl-en">updateArcLengths</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">cacheLengths</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-en">getCurveLengths</span>()},<span class="pl-en">getCurveLengths</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">cacheLengths</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">cacheLengths</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">cacheLengths</span>;</td>
      </tr>
      <tr>
        <td id="L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="LC700" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>[],b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)b<span class="pl-k">+=</span><span class="pl-c1">this</span>.<span class="pl-smi">curves</span>[c].<span class="pl-en">getLength</span>(),<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(b);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">cacheLengths</span><span class="pl-k">=</span>a},<span class="pl-en">getSpacedPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">40</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;=</span>a;c<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-en">getPoint</span>(c<span class="pl-k">/</span>a));<span class="pl-c1">this</span>.<span class="pl-smi">autoClose</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(b[<span class="pl-c1">0</span>]);<span class="pl-k">return</span> b},<span class="pl-en">getPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-c1">12</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">curves</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>e[d];f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">getPoints</span>(f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">isEllipseCurve</span><span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">*</span>a<span class="pl-k">:</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">isLineCurve</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-smi">isLineCurve3</span>)<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">isSplineCurve</span><span class="pl-k">?</span>a<span class="pl-k">*</span><span class="pl-smi">f</span>.<span class="pl-smi">points</span>.<span class="pl-c1">length</span><span class="pl-k">:</span>a);<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>f[g];</td>
      </tr>
      <tr>
        <td id="L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="LC701" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">equals</span>(h)<span class="pl-k">||</span>(<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(h),c<span class="pl-k">=</span>h)}}<span class="pl-c1">this</span>.<span class="pl-smi">autoClose</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;!</span>b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-en">equals</span>(b[<span class="pl-c1">0</span>])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(b[<span class="pl-c1">0</span>]);<span class="pl-k">return</span> b},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">curves</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">curves</span>[b].<span class="pl-en">clone</span>());<span class="pl-c1">this</span>.<span class="pl-smi">autoClose</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">autoClose</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">autoClose</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">autoClose</span>;<span class="pl-smi">a</span>.<span class="pl-smi">curves</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">curves</span>[b].<span class="pl-en">toJSON</span>());<span class="pl-k">return</span> a},<span class="pl-en">fromJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="LC702" class="blob-code blob-code-inner js-file-line">a);<span class="pl-c1">this</span>.<span class="pl-smi">autoClose</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">autoClose</span>;<span class="pl-c1">this</span>.<span class="pl-smi">curves</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">curves</span>[b];<span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">push</span>((<span class="pl-k">new</span> <span class="pl-en">Bf</span>[<span class="pl-smi">d</span>.<span class="pl-c1">type</span>]).<span class="pl-en">fromJSON</span>(d))}<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">Qa</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">bb</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Qa,setFromPoints:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">moveTo</span>(a[<span class="pl-c1">0</span>].<span class="pl-c1">x</span>,a[<span class="pl-c1">0</span>].<span class="pl-c1">y</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-en">lineTo</span>(a[b].<span class="pl-c1">x</span>,a[b].<span class="pl-c1">y</span>)},<span class="pl-en">moveTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-c1">set</span>(a,b)},<span class="pl-en">lineTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ia</span>(<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-en">clone</span>(),<span class="pl-k">new</span> <span class="pl-en">B</span>(a,b));<span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">push</span>(c);<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-c1">set</span>(a,</td>
      </tr>
      <tr>
        <td id="L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="LC703" class="blob-code blob-code-inner js-file-line">b)},<span class="pl-en">quadraticCurveTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Oa</span>(<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-en">clone</span>(),<span class="pl-k">new</span> <span class="pl-en">B</span>(a,b),<span class="pl-k">new</span> <span class="pl-en">B</span>(c,d));<span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">push</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-c1">set</span>(c,d)},<span class="pl-en">bezierCurveTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ma</span>(<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-en">clone</span>(),<span class="pl-k">new</span> <span class="pl-en">B</span>(a,b),<span class="pl-k">new</span> <span class="pl-en">B</span>(c,d),<span class="pl-k">new</span> <span class="pl-en">B</span>(e,f));<span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">push</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-c1">set</span>(e,f)},<span class="pl-en">splineThru</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-en">clone</span>()].<span class="pl-c1">concat</span>(a);b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Pa</span>(b);<span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">push</span>(b);<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-en">copy</span>(a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>])},<span class="pl-en">arc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-c1">this</span>.<span class="pl-en">absarc</span>(a<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-c1">x</span>,b<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-c1">y</span>,</td>
      </tr>
      <tr>
        <td id="L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="LC704" class="blob-code blob-code-inner js-file-line">c,d,e,f)},<span class="pl-en">absarc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-c1">this</span>.<span class="pl-en">absellipse</span>(a,b,c,c,d,e,f)},<span class="pl-en">ellipse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){<span class="pl-c1">this</span>.<span class="pl-en">absellipse</span>(a<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-c1">x</span>,b<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-c1">y</span>,c,d,e,f,g,h)},<span class="pl-en">absellipse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Da</span>(a,b,c,d,e,f,g,h);<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getPoint</span>(<span class="pl-c1">0</span>),<span class="pl-smi">b</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>)<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">lineTo</span>(<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>));<span class="pl-c1">this</span>.<span class="pl-smi">curves</span>.<span class="pl-c1">push</span>(a);a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getPoint</span>(<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-en">copy</span>(a)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">bb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">currentPoint</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="LC705" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">bb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">currentPoint</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-en">toArray</span>();<span class="pl-k">return</span> a},<span class="pl-en">fromJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">bb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">currentPoint</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">currentPoint</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">jb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Qa</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:jb,getPointsHoles:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">holes</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)b[c]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">holes</span>[c].<span class="pl-en">getPoints</span>(a);<span class="pl-k">return</span> b},<span class="pl-en">extractPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>{shape<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">getPoints</span>(a),holes<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">getPointsHoles</span>(a)}},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">Qa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="LC706" class="blob-code blob-code-inner js-file-line">a);<span class="pl-c1">this</span>.<span class="pl-smi">holes</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">holes</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">holes</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">holes</span>[b].<span class="pl-en">clone</span>());<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">Qa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">uuid</span>;<span class="pl-smi">a</span>.<span class="pl-smi">holes</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">holes</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-smi">holes</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">holes</span>[b].<span class="pl-en">toJSON</span>());<span class="pl-k">return</span> a},<span class="pl-en">fromJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">Qa</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">fromJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">uuid</span>;<span class="pl-c1">this</span>.<span class="pl-smi">holes</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">holes</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">holes</span>[b];<span class="pl-c1">this</span>.<span class="pl-smi">holes</span>.<span class="pl-c1">push</span>((<span class="pl-k">new</span> <span class="pl-en">Qa</span>).<span class="pl-en">fromJSON</span>(d))}<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),</td>
      </tr>
      <tr>
        <td id="L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="LC707" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">constructor</span>:X,isLight:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>);<span class="pl-c1">this</span>.<span class="pl-smi">intensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">intensity</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span>.<span class="pl-en">getHex</span>();<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">intensity</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">intensity</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">groundColor</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">groundColor</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">groundColor</span>.<span class="pl-en">getHex</span>());<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">distance</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">distance</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">distance</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">angle</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">angle</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">angle</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">decay</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">decay</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">decay</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="LC708" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">penumbra</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">penumbra</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">penumbra</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">shadow</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-smi">shadow</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">shadow</span>.<span class="pl-en">toJSON</span>());<span class="pl-k">return</span> a}});<span class="pl-smi">Bd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Bd,isHemisphereLight:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">groundColor</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">groundColor</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Hb</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">camera</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">camera</span>.<span class="pl-en">clone</span>();<span class="pl-c1">this</span>.<span class="pl-smi">bias</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">bias</span>;<span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span>;<span class="pl-c1">this</span>.<span class="pl-smi">mapSize</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mapSize</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},</td>
      </tr>
      <tr>
        <td id="L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="LC709" class="blob-code blob-code-inner js-file-line"><span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{};<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">bias</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">bias</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bias</span>);<span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span>);<span class="pl-k">if</span>(<span class="pl-c1">512</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">mapSize</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">512</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">mapSize</span>.<span class="pl-c1">y</span>)<span class="pl-smi">a</span>.<span class="pl-smi">mapSize</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mapSize</span>.<span class="pl-en">toArray</span>();<span class="pl-smi">a</span>.<span class="pl-smi">camera</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">camera</span>.<span class="pl-en">toJSON</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>).<span class="pl-c1">object</span>;<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-smi">camera</span>.<span class="pl-smi">matrix</span>;<span class="pl-k">return</span> a}});<span class="pl-smi">Cd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Hb</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Cd,isSpotLightShadow:!0,update:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">camera</span>,c<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">J</span>.<span class="pl-c1">RAD2DEG</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">angle</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">mapSize</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">mapSize</span>.<span class="pl-c1">height</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">distance</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">far</span>;<span class="pl-k">if</span>(c<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">fov</span><span class="pl-k">||</span>d<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">aspect</span><span class="pl-k">||</span>a<span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">far</span>)<span class="pl-smi">b</span>.<span class="pl-smi">fov</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="LC710" class="blob-code blob-code-inner js-file-line">c,<span class="pl-smi">b</span>.<span class="pl-smi">aspect</span><span class="pl-k">=</span>d,<span class="pl-smi">b</span>.<span class="pl-smi">far</span><span class="pl-k">=</span>a,<span class="pl-smi">b</span>.<span class="pl-en">updateProjectionMatrix</span>()}});<span class="pl-smi">Dd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Dd,isSpotLight:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">distance</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">distance</span>;<span class="pl-c1">this</span>.<span class="pl-smi">angle</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">angle</span>;<span class="pl-c1">this</span>.<span class="pl-smi">penumbra</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">penumbra</span>;<span class="pl-c1">this</span>.<span class="pl-smi">decay</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">decay</span>;<span class="pl-c1">this</span>.<span class="pl-c1">target</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">target</span>.<span class="pl-en">clone</span>();<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>.<span class="pl-en">clone</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">Ed</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Ed,isPointLight:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">distance</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">distance</span>;</td>
      </tr>
      <tr>
        <td id="L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="LC711" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">decay</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">decay</span>;<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>.<span class="pl-en">clone</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">Fd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Hb</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Fd});Gd.prototype=Object.assign(Object.create(X.prototype),{<span class="pl-en">constructor</span>:Gd,isDirectionalLight:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">target</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">target</span>.<span class="pl-en">clone</span>();<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>.<span class="pl-en">clone</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">Hd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Hd,isAmbientLight:!0});Id.prototype=Object.assign(Object.create(X.prototype),{<span class="pl-en">constructor</span>:Id,</td>
      </tr>
      <tr>
        <td id="L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="LC712" class="blob-code blob-code-inner js-file-line">isRectAreaLight:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>;<span class="pl-c1">this</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toJSON</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">width</span>;<span class="pl-smi">a</span>.<span class="pl-c1">object</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">height</span>;<span class="pl-k">return</span> a}});<span class="pl-smi">Jd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">ja</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Jd,ValueTypeName:&quot;string&quot;,ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});Kd.prototype=Object.assign(Object.create(ja.prototype),</td>
      </tr>
      <tr>
        <td id="L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="LC713" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">constructor</span>:Kd,ValueTypeName:&quot;bool&quot;,ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});Object.assign(Ea.prototype,{<span class="pl-en">evaluate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">parameterPositions</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_cachedIndex</span>,d<span class="pl-k">=</span>b[c],e<span class="pl-k">=</span>b[c<span class="pl-k">-</span><span class="pl-c1">1</span>];a<span class="pl-k">:</span>{b<span class="pl-k">:</span>{c<span class="pl-k">:</span>{d<span class="pl-k">:</span><span class="pl-k">if</span>(<span class="pl-k">!</span>(a<span class="pl-k">&lt;</span>d)){<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-c1">2</span>;;){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d){<span class="pl-k">if</span>(a<span class="pl-k">&lt;</span>e)<span class="pl-k">break</span> d;<span class="pl-c1">this</span>.<span class="pl-smi">_cachedIndex</span><span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">afterEnd_</span>(c<span class="pl-k">-</span><span class="pl-c1">1</span>,a,e)}<span class="pl-k">if</span>(c<span class="pl-k">===</span>f)<span class="pl-k">break</span>;e<span class="pl-k">=</span>d;d<span class="pl-k">=</span>b[<span class="pl-k">++</span>c];<span class="pl-k">if</span>(a<span class="pl-k">&lt;</span>d)<span class="pl-k">break</span> b}d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;<span class="pl-k">break</span> c}<span class="pl-k">if</span>(a<span class="pl-k">&gt;=</span>e)<span class="pl-k">break</span> a;<span class="pl-k">else</span>{f<span class="pl-k">=</span>b[<span class="pl-c1">1</span>];a<span class="pl-k">&lt;</span>f<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="LC714" class="blob-code blob-code-inner js-file-line">(c<span class="pl-k">=</span><span class="pl-c1">2</span>,e<span class="pl-k">=</span>f);<span class="pl-k">for</span>(f<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">2</span>;;){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_cachedIndex</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-en">beforeStart_</span>(<span class="pl-c1">0</span>,a,d);<span class="pl-k">if</span>(c<span class="pl-k">===</span>f)<span class="pl-k">break</span>;d<span class="pl-k">=</span>e;e<span class="pl-k">=</span>b[<span class="pl-k">--</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-k">if</span>(a<span class="pl-k">&gt;=</span>e)<span class="pl-k">break</span> b}d<span class="pl-k">=</span>c;c<span class="pl-k">=</span><span class="pl-c1">0</span>}}<span class="pl-k">for</span>(;c<span class="pl-k">&lt;</span>d;)e<span class="pl-k">=</span>c<span class="pl-k">+</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">1</span>,a<span class="pl-k">&lt;</span>b[e]<span class="pl-k">?</span>d<span class="pl-k">=</span>e<span class="pl-k">:</span>c<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>;d<span class="pl-k">=</span>b[c];e<span class="pl-k">=</span>b[c<span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_cachedIndex</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-en">beforeStart_</span>(<span class="pl-c1">0</span>,a,d);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_cachedIndex</span><span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,<span class="pl-c1">this</span>.<span class="pl-en">afterEnd_</span>(c<span class="pl-k">-</span><span class="pl-c1">1</span>,e,a)}<span class="pl-c1">this</span>.<span class="pl-smi">_cachedIndex</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-en">intervalChanged_</span>(c,e,d)}<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">interpolate_</span>(c,e,a,d)},settings<span class="pl-k">:</span><span class="pl-c1">null</span>,DefaultSettings_<span class="pl-k">:</span>{},<span class="pl-en">getSettings_</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">settings</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="LC715" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">DefaultSettings_</span>},<span class="pl-en">copySampleValue_</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">resultBuffer</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">sampleValues</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">valueSize</span>;a<span class="pl-k">*=</span>d;<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">!==</span>d;<span class="pl-k">++</span>e)b[e]<span class="pl-k">=</span>c[a<span class="pl-k">+</span>e];<span class="pl-k">return</span> b},<span class="pl-en">interpolate_</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>call to abstract method<span class="pl-pds">&quot;</span></span>);},<span class="pl-en">intervalChanged_</span><span class="pl-k">:</span><span class="pl-k">function</span>(){}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Ea</span>.<span class="pl-c1">prototype</span>,{beforeStart_<span class="pl-k">:</span><span class="pl-smi">Ea</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copySampleValue_</span>,afterEnd_<span class="pl-k">:</span><span class="pl-smi">Ea</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copySampleValue_</span>});<span class="pl-smi">Ld</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Ea</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Ld,interpolate_:<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">resultBuffer</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">sampleValues</span>,</td>
      </tr>
      <tr>
        <td id="L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="LC716" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">valueSize</span>;a<span class="pl-k">*=</span>g;b<span class="pl-k">=</span>(c<span class="pl-k">-</span>b)<span class="pl-k">/</span>(d<span class="pl-k">-</span>b);<span class="pl-k">for</span>(c<span class="pl-k">=</span>a<span class="pl-k">+</span>g;a<span class="pl-k">!==</span>c;a<span class="pl-k">+=</span><span class="pl-c1">4</span>)<span class="pl-smi">ca</span>.<span class="pl-en">slerpFlat</span>(e,<span class="pl-c1">0</span>,f,a<span class="pl-k">-</span>g,f,a,b);<span class="pl-k">return</span> e}});<span class="pl-smi">id</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">ja</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:id,ValueTypeName:&quot;quaternion&quot;,DefaultInterpolation:2301,InterpolantFactoryMethodLinear:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Ld</span>(<span class="pl-c1">this</span>.<span class="pl-smi">times</span>,<span class="pl-c1">this</span>.<span class="pl-smi">values</span>,<span class="pl-c1">this</span>.<span class="pl-en">getValueSize</span>(),a)},InterpolantFactoryMethodSmooth<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>});<span class="pl-smi">Md</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">ja</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Md,ValueTypeName:&quot;color&quot;});nc.prototype=Object.assign(Object.create(ja.prototype),</td>
      </tr>
      <tr>
        <td id="L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="LC717" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">constructor</span>:nc,ValueTypeName:&quot;number&quot;});Nd.prototype=Object.assign(Object.create(Ea.prototype),{<span class="pl-en">constructor</span>:Nd,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">parameterPositions</span>,e<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">2</span>,f<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span>d[e],h<span class="pl-k">=</span>d[f];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>g)<span class="pl-k">switch</span>(<span class="pl-c1">this</span>.<span class="pl-en">getSettings_</span>().<span class="pl-smi">endingStart</span>){<span class="pl-k">case</span> <span class="pl-c1">2401</span>:e<span class="pl-k">=</span>a;g<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>b<span class="pl-k">-</span>c;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2402</span>:e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">2</span>;g<span class="pl-k">=</span>b<span class="pl-k">+</span>d[e]<span class="pl-k">-</span>d[e<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">break</span>;<span class="pl-k">default</span>:e<span class="pl-k">=</span>a,g<span class="pl-k">=</span>c}<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>h)<span class="pl-k">switch</span>(<span class="pl-c1">this</span>.<span class="pl-en">getSettings_</span>().<span class="pl-smi">endingEnd</span>){<span class="pl-k">case</span> <span class="pl-c1">2401</span>:f<span class="pl-k">=</span>a;h<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">-</span>b;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2402</span>:f<span class="pl-k">=</span><span class="pl-c1">1</span>;h<span class="pl-k">=</span>c<span class="pl-k">+</span>d[<span class="pl-c1">1</span>]<span class="pl-k">-</span>d[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="LC718" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">default</span>:f<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span>b}a<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span>(c<span class="pl-k">-</span>b);d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">valueSize</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_weightPrev</span><span class="pl-k">=</span>a<span class="pl-k">/</span>(b<span class="pl-k">-</span>g);<span class="pl-c1">this</span>.<span class="pl-smi">_weightNext</span><span class="pl-k">=</span>a<span class="pl-k">/</span>(h<span class="pl-k">-</span>c);<span class="pl-c1">this</span>.<span class="pl-smi">_offsetPrev</span><span class="pl-k">=</span>e<span class="pl-k">*</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">_offsetNext</span><span class="pl-k">=</span>f<span class="pl-k">*</span>d},<span class="pl-en">interpolate_</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">resultBuffer</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">sampleValues</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">valueSize</span>;a<span class="pl-k">*=</span>g;<span class="pl-k">var</span> h<span class="pl-k">=</span>a<span class="pl-k">-</span>g,l<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_offsetPrev</span>,m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_offsetNext</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_weightPrev</span>,n<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_weightNext</span>,p<span class="pl-k">=</span>(c<span class="pl-k">-</span>b)<span class="pl-k">/</span>(d<span class="pl-k">-</span>b);c<span class="pl-k">=</span>p<span class="pl-k">*</span>p;d<span class="pl-k">=</span>c<span class="pl-k">*</span>p;b<span class="pl-k">=</span><span class="pl-k">-</span>k<span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>k<span class="pl-k">*</span>c<span class="pl-k">-</span>k<span class="pl-k">*</span>p;k<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">+</span>k)<span class="pl-k">*</span>d<span class="pl-k">+</span>(<span class="pl-k">-</span><span class="pl-c1">1.5</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>k)<span class="pl-k">*</span>c<span class="pl-k">+</span>(<span class="pl-k">-</span><span class="pl-c1">.5</span><span class="pl-k">+</span>k)<span class="pl-k">*</span>p<span class="pl-k">+</span><span class="pl-c1">1</span>;p<span class="pl-k">=</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>n)<span class="pl-k">*</span>d<span class="pl-k">+</span>(<span class="pl-c1">1.5</span><span class="pl-k">+</span>n)<span class="pl-k">*</span>c<span class="pl-k">+</span><span class="pl-c1">.5</span><span class="pl-k">*</span>p;n<span class="pl-k">=</span>n<span class="pl-k">*</span>d<span class="pl-k">-</span>n<span class="pl-k">*</span>c;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">!==</span>g;<span class="pl-k">++</span>c)e[c]<span class="pl-k">=</span>b<span class="pl-k">*</span>f[l<span class="pl-k">+</span>c]<span class="pl-k">+</span>k<span class="pl-k">*</span>f[h<span class="pl-k">+</span>c]<span class="pl-k">+</span>p<span class="pl-k">*</span>f[a<span class="pl-k">+</span>c]<span class="pl-k">+</span>n<span class="pl-k">*</span>f[m<span class="pl-k">+</span>c];</td>
      </tr>
      <tr>
        <td id="L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="LC719" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> e}});<span class="pl-smi">jd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Ea</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:jd,interpolate_:<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">resultBuffer</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">sampleValues</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">valueSize</span>;a<span class="pl-k">*=</span>g;<span class="pl-k">var</span> h<span class="pl-k">=</span>a<span class="pl-k">-</span>g;b<span class="pl-k">=</span>(c<span class="pl-k">-</span>b)<span class="pl-k">/</span>(d<span class="pl-k">-</span>b);c<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span>b;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">!==</span>g;<span class="pl-k">++</span>d)e[d]<span class="pl-k">=</span>f[h<span class="pl-k">+</span>d]<span class="pl-k">*</span>c<span class="pl-k">+</span>f[a<span class="pl-k">+</span>d]<span class="pl-k">*</span>b;<span class="pl-k">return</span> e}});<span class="pl-smi">Od</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">Ea</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:Od,interpolate_:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">copySampleValue_</span>(a<span class="pl-k">-</span><span class="pl-c1">1</span>)}});<span class="pl-k">var</span> na<span class="pl-k">=</span>{<span class="pl-en">arraySlice</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-smi">na</span>.<span class="pl-en">isTypedArray</span>(a)<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">a.constructor</span>(<span class="pl-smi">a</span>.<span class="pl-en">subarray</span>(b,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">?</span>c<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="LC720" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">length</span>))<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(b,c)},<span class="pl-en">convertArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span><span class="pl-k">!</span>a<span class="pl-k">||!</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">constructor</span><span class="pl-k">===</span>b<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-smi">b</span>.<span class="pl-c1">BYTES_PER_ELEMENT</span><span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">b</span>(a)<span class="pl-k">:</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(a)},<span class="pl-en">isTypedArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">ArrayBuffer</span>.<span class="pl-en">isView</span>(a)<span class="pl-k">&amp;&amp;!</span>(a <span class="pl-k">instanceof</span> <span class="pl-c1">DataView</span>)},<span class="pl-en">getKeyframeOrder</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span><span class="pl-c1">Array</span>(b),d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">!==</span>b;<span class="pl-k">++</span>d)c[d]<span class="pl-k">=</span>d;<span class="pl-smi">c</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> a[b]<span class="pl-k">-</span>a[c]});<span class="pl-k">return</span> c},<span class="pl-en">sortedArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.constructor</span>(d),f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">!==</span>d;<span class="pl-k">++</span>f)<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span>c[f]<span class="pl-k">*</span>b,l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">!==</span>b;<span class="pl-k">++</span>l)e[g<span class="pl-k">++</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="LC721" class="blob-code blob-code-inner js-file-line">a[h<span class="pl-k">+</span>l];<span class="pl-k">return</span> e},<span class="pl-en">flattenJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span>a[<span class="pl-c1">0</span>];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f[d];)f<span class="pl-k">=</span>a[e<span class="pl-k">++</span>];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f){<span class="pl-k">var</span> g<span class="pl-k">=</span>f[d];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>g)<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(g)){<span class="pl-k">do</span> g<span class="pl-k">=</span>f[d],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">f</span>.<span class="pl-smi">time</span>),<span class="pl-smi">c</span>.<span class="pl-smi">push</span>.<span class="pl-c1">apply</span>(c,g)),f<span class="pl-k">=</span>a[e<span class="pl-k">++</span>];<span class="pl-k">while</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f)}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">toArray</span>){<span class="pl-k">do</span> g<span class="pl-k">=</span>f[d],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">f</span>.<span class="pl-smi">time</span>),<span class="pl-smi">g</span>.<span class="pl-en">toArray</span>(c,<span class="pl-smi">c</span>.<span class="pl-c1">length</span>)),f<span class="pl-k">=</span>a[e<span class="pl-k">++</span>];<span class="pl-k">while</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f)}<span class="pl-k">else</span>{<span class="pl-k">do</span> g<span class="pl-k">=</span>f[d],<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">f</span>.<span class="pl-smi">time</span>),<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(g)),f<span class="pl-k">=</span>a[e<span class="pl-k">++</span>];<span class="pl-k">while</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f)}}}};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(ja,{<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.KeyframeTrack: track type undefined, can not parse<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="LC722" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">ja</span>.<span class="pl-en">_getTrackTypeForValueTypeName</span>(<span class="pl-smi">a</span>.<span class="pl-c1">type</span>);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">times</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d<span class="pl-k">=</span>[];<span class="pl-smi">na</span>.<span class="pl-en">flattenJSON</span>(<span class="pl-smi">a</span>.<span class="pl-smi">keys</span>,c,d,<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-smi">times</span><span class="pl-k">=</span>c;<span class="pl-smi">a</span>.<span class="pl-smi">values</span><span class="pl-k">=</span>d}<span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">parse</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">parse</span>(a)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span>,<span class="pl-smi">a</span>.<span class="pl-smi">times</span>,<span class="pl-smi">a</span>.<span class="pl-smi">values</span>,<span class="pl-smi">a</span>.<span class="pl-smi">interpolation</span>)},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">constructor</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">toJSON</span>)b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">toJSON</span>(a);<span class="pl-k">else</span>{b<span class="pl-k">=</span>{name<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>,times<span class="pl-k">:</span><span class="pl-smi">na</span>.<span class="pl-en">convertArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">times</span>,<span class="pl-c1">Array</span>),values<span class="pl-k">:</span><span class="pl-smi">na</span>.<span class="pl-en">convertArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">values</span>,<span class="pl-c1">Array</span>)};<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getInterpolation</span>();c<span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">DefaultInterpolation</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">interpolation</span><span class="pl-k">=</span>c)}<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ValueTypeName</span>;<span class="pl-k">return</span> b},<span class="pl-en">_getTrackTypeForValueTypeName</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">switch</span>(<span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>()){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>scalar<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>double<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>float<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>integer<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> nc;</td>
      </tr>
      <tr>
        <td id="L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="LC723" class="blob-code blob-code-inner js-file-line"><span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>vector<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>vector2<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>vector3<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>vector4<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> oc;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> Md;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>quaternion<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> id;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>bool<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> Kd;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> Jd}<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.KeyframeTrack: Unsupported typeName: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ja</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">constructor</span>:ja,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Od</span>(<span class="pl-c1">this</span>.<span class="pl-smi">times</span>,<span class="pl-c1">this</span>.<span class="pl-smi">values</span>,<span class="pl-c1">this</span>.<span class="pl-en">getValueSize</span>(),a)},<span class="pl-en">InterpolantFactoryMethodLinear</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">jd</span>(<span class="pl-c1">this</span>.<span class="pl-smi">times</span>,</td>
      </tr>
      <tr>
        <td id="L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="LC724" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">values</span>,<span class="pl-c1">this</span>.<span class="pl-en">getValueSize</span>(),a)},<span class="pl-en">InterpolantFactoryMethodSmooth</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Nd</span>(<span class="pl-c1">this</span>.<span class="pl-smi">times</span>,<span class="pl-c1">this</span>.<span class="pl-smi">values</span>,<span class="pl-c1">this</span>.<span class="pl-en">getValueSize</span>(),a)},<span class="pl-en">setInterpolation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">switch</span>(a){<span class="pl-k">case</span> <span class="pl-c1">2300</span>:<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">InterpolantFactoryMethodDiscrete</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2301</span>:b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">InterpolantFactoryMethodLinear</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2302</span>:b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">InterpolantFactoryMethodSmooth</span>}<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b){b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>unsupported interpolation for <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">ValueTypeName</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> keyframe track named <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">createInterpolant</span>)<span class="pl-k">if</span>(a<span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">DefaultInterpolation</span>)<span class="pl-c1">this</span>.<span class="pl-en">setInterpolation</span>(<span class="pl-c1">this</span>.<span class="pl-smi">DefaultInterpolation</span>);</td>
      </tr>
      <tr>
        <td id="L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="LC725" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span> <span class="pl-k">throw</span> <span class="pl-c1">Error</span>(b);<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.KeyframeTrack:<span class="pl-pds">&quot;</span></span>,b)}<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-smi">createInterpolant</span><span class="pl-k">=</span>b},<span class="pl-en">getInterpolation</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">switch</span>(<span class="pl-c1">this</span>.<span class="pl-smi">createInterpolant</span>){<span class="pl-k">case</span> <span class="pl-c1">this</span>.<span class="pl-smi">InterpolantFactoryMethodDiscrete</span>:<span class="pl-k">return</span> <span class="pl-c1">2300</span>;<span class="pl-k">case</span> <span class="pl-c1">this</span>.<span class="pl-smi">InterpolantFactoryMethodLinear</span>:<span class="pl-k">return</span> <span class="pl-c1">2301</span>;<span class="pl-k">case</span> <span class="pl-c1">this</span>.<span class="pl-smi">InterpolantFactoryMethodSmooth</span>:<span class="pl-k">return</span> <span class="pl-c1">2302</span>}},<span class="pl-en">getValueSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">values</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">times</span>.<span class="pl-c1">length</span>},<span class="pl-en">shift</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span>a)<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">times</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">!==</span>d;<span class="pl-k">++</span>c)b[c]<span class="pl-k">+=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">scale</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">!==</span>a)<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="LC726" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">times</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">!==</span>d;<span class="pl-k">++</span>c)b[c]<span class="pl-k">*=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">trim</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">times</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>;e<span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span>c[e]<span class="pl-k">&lt;</span>a;)<span class="pl-k">++</span>e;<span class="pl-k">for</span>(;<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span>c[f]<span class="pl-k">&gt;</span>b;)<span class="pl-k">--</span>f;<span class="pl-k">++</span>f;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span>e<span class="pl-k">||</span>f<span class="pl-k">!==</span>d)e<span class="pl-k">&gt;=</span>f<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(f,<span class="pl-c1">1</span>),e<span class="pl-k">=</span>f<span class="pl-k">-</span><span class="pl-c1">1</span>),a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getValueSize</span>(),<span class="pl-c1">this</span>.<span class="pl-smi">times</span><span class="pl-k">=</span><span class="pl-smi">na</span>.<span class="pl-en">arraySlice</span>(c,e,f),<span class="pl-c1">this</span>.<span class="pl-smi">values</span><span class="pl-k">=</span><span class="pl-smi">na</span>.<span class="pl-en">arraySlice</span>(<span class="pl-c1">this</span>.<span class="pl-smi">values</span>,e<span class="pl-k">*</span>a,f<span class="pl-k">*</span>a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">validate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getValueSize</span>();<span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(b)<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.KeyframeTrack: Invalid value size in track.<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>),a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">times</span>;b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">values</span>;</td>
      </tr>
      <tr>
        <td id="L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="LC727" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-c1">0</span><span class="pl-k">===</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.KeyframeTrack: Track is empty.<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>),a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">null</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">!==</span>d;f<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>c[f];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> g<span class="pl-k">&amp;&amp;</span><span class="pl-c1">isNaN</span>(g)){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.KeyframeTrack: Time is not a valid number.<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>,f,g);a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&gt;</span>g){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.KeyframeTrack: Out of order keys.<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>,f,g,e);a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}e<span class="pl-k">=</span>g}<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">na</span>.<span class="pl-en">isTypedArray</span>(b))<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;f<span class="pl-k">!==</span>c;<span class="pl-k">++</span>f)<span class="pl-k">if</span>(d<span class="pl-k">=</span>b[f],<span class="pl-c1">isNaN</span>(d)){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.KeyframeTrack: Value is not a valid number.<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="LC728" class="blob-code blob-code-inner js-file-line">f,d);a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}<span class="pl-k">return</span> a},<span class="pl-en">optimize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">times</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">values</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getValueSize</span>(),d<span class="pl-k">=</span><span class="pl-c1">2302</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-en">getInterpolation</span>(),e<span class="pl-k">=</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-c1">1</span>;g<span class="pl-k">&lt;</span>f;<span class="pl-k">++</span>g){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,l<span class="pl-k">=</span>a[g];<span class="pl-k">if</span>(l<span class="pl-k">!==</span>a[g<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">1</span><span class="pl-k">!==</span>g<span class="pl-k">||</span>l<span class="pl-k">!==</span>l[<span class="pl-c1">0</span>]))<span class="pl-k">if</span>(d)h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> k<span class="pl-k">=</span>g<span class="pl-k">*</span>c,p<span class="pl-k">=</span>k<span class="pl-k">-</span>c,n<span class="pl-k">=</span>k<span class="pl-k">+</span>c;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">!==</span>c;<span class="pl-k">++</span>l){<span class="pl-k">var</span> t<span class="pl-k">=</span>b[k<span class="pl-k">+</span>l];<span class="pl-k">if</span>(t<span class="pl-k">!==</span>b[p<span class="pl-k">+</span>l]<span class="pl-k">||</span>t<span class="pl-k">!==</span>b[n<span class="pl-k">+</span>l]){h<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}}}<span class="pl-k">if</span>(h){<span class="pl-k">if</span>(g<span class="pl-k">!==</span>e)<span class="pl-k">for</span>(a[e]<span class="pl-k">=</span>a[g],h<span class="pl-k">=</span>g<span class="pl-k">*</span>c,k<span class="pl-k">=</span>e<span class="pl-k">*</span>c,l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">!==</span>c;<span class="pl-k">++</span>l)b[k<span class="pl-k">+</span>l]<span class="pl-k">=</span>b[h<span class="pl-k">+</span>l];<span class="pl-k">++</span>e}}<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>f){a[e]<span class="pl-k">=</span>a[f];h<span class="pl-k">=</span>f<span class="pl-k">*</span>c;k<span class="pl-k">=</span>e<span class="pl-k">*</span>c;<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">!==</span>c;<span class="pl-k">++</span>l)b[k<span class="pl-k">+</span>l]<span class="pl-k">=</span>b[h<span class="pl-k">+</span>l];<span class="pl-k">++</span>e}e<span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">times</span><span class="pl-k">=</span><span class="pl-smi">na</span>.<span class="pl-en">arraySlice</span>(a,</td>
      </tr>
      <tr>
        <td id="L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="LC729" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,e),<span class="pl-c1">this</span>.<span class="pl-smi">values</span><span class="pl-k">=</span><span class="pl-smi">na</span>.<span class="pl-en">arraySlice</span>(b,<span class="pl-c1">0</span>,e<span class="pl-k">*</span>c));<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">oc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">ja</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:oc,ValueTypeName:&quot;vector&quot;});Object.assign(Ga,{<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tracks</span>,d<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>(<span class="pl-smi">a</span>.<span class="pl-smi">fps</span><span class="pl-k">||</span><span class="pl-c1">1</span>),e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;e<span class="pl-k">!==</span>f;<span class="pl-k">++</span>e)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">ja</span>.<span class="pl-c1">parse</span>(c[e]).<span class="pl-en">scale</span>(d));<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Ga</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span>,<span class="pl-smi">a</span>.<span class="pl-smi">duration</span>,b)},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tracks</span>;a<span class="pl-k">=</span>{name<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>,duration<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">duration</span>,tracks<span class="pl-k">:</span>b,uuid<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">uuid</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">!==</span>e;<span class="pl-k">++</span>d)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">ja</span>.<span class="pl-en">toJSON</span>(c[d]));<span class="pl-k">return</span> a},<span class="pl-en">CreateFromMorphTargetSequence</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="LC730" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>e;g<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>[],l<span class="pl-k">=</span>[];<span class="pl-smi">h</span>.<span class="pl-c1">push</span>((g<span class="pl-k">+</span>e<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">%</span>e,g,(g<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span>e);<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>);<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">na</span>.<span class="pl-en">getKeyframeOrder</span>(h);h<span class="pl-k">=</span><span class="pl-smi">na</span>.<span class="pl-en">sortedArray</span>(h,<span class="pl-c1">1</span>,k);l<span class="pl-k">=</span><span class="pl-smi">na</span>.<span class="pl-en">sortedArray</span>(l,<span class="pl-c1">1</span>,k);d<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">!==</span>h[<span class="pl-c1">0</span>]<span class="pl-k">||</span>(<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(e),<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(l[<span class="pl-c1">0</span>]));<span class="pl-smi">f</span>.<span class="pl-c1">push</span>((<span class="pl-k">new</span> <span class="pl-en">nc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.morphTargetInfluences[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b[g].<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>,h,l)).<span class="pl-en">scale</span>(<span class="pl-c1">1</span><span class="pl-k">/</span>c))}<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Ga</span>(a,<span class="pl-k">-</span><span class="pl-c1">1</span>,f)},<span class="pl-en">findByName</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a;<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">geometry</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">animations</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">animations</span>);<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;a<span class="pl-k">++</span>)<span class="pl-k">if</span>(c[a].<span class="pl-c1">name</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> c[a];<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">CreateClipsFromMorphTargetSequences</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="LC731" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span>{},e<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-c1">[<span class="pl-c1">\w</span>-]</span><span class="pl-k">*?</span>)(<span class="pl-c1">[<span class="pl-c1">\d</span>]</span><span class="pl-k">+</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>a[f],l<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">name</span>.<span class="pl-c1">match</span>(e);<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>l[<span class="pl-c1">1</span>];(l<span class="pl-k">=</span>d[k])<span class="pl-k">||</span>(d[k]<span class="pl-k">=</span>l<span class="pl-k">=</span>[]);<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(h)}}a<span class="pl-k">=</span>[];<span class="pl-k">for</span>(k <span class="pl-k">in</span> d)<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-smi">Ga</span>.<span class="pl-en">CreateFromMorphTargetSequence</span>(k,d[k],b,c));<span class="pl-k">return</span> a},<span class="pl-en">parseAnimation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.AnimationClip: No animation in JSONLoader data.<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">null</span>;<span class="pl-k">var</span> <span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>[],g<span class="pl-k">=</span>[];<span class="pl-smi">na</span>.<span class="pl-en">flattenJSON</span>(c,f,g,d);<span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">a</span>(b,f,g))}},d<span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="LC732" class="blob-code blob-code-inner js-file-line"><span class="pl-k">-</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fps</span><span class="pl-k">||</span><span class="pl-c1">30</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">hierarchy</span><span class="pl-k">||</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span>a[h].<span class="pl-smi">keys</span>;<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>)<span class="pl-k">if</span>(l[<span class="pl-c1">0</span>].<span class="pl-smi">morphTargets</span>){f<span class="pl-k">=</span>{};<span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;k<span class="pl-k">++</span>)<span class="pl-k">if</span>(l[k].<span class="pl-smi">morphTargets</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">0</span>;p<span class="pl-k">&lt;</span>l[k].<span class="pl-smi">morphTargets</span>.<span class="pl-c1">length</span>;p<span class="pl-k">++</span>)f[l[k].<span class="pl-smi">morphTargets</span>[p]]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> n <span class="pl-k">in</span> f){<span class="pl-k">var</span> t<span class="pl-k">=</span>[],q<span class="pl-k">=</span>[];<span class="pl-k">for</span>(p<span class="pl-k">=</span><span class="pl-c1">0</span>;p<span class="pl-k">!==</span>l[k].<span class="pl-smi">morphTargets</span>.<span class="pl-c1">length</span>;<span class="pl-k">++</span>p){<span class="pl-k">var</span> r<span class="pl-k">=</span>l[k];<span class="pl-smi">t</span>.<span class="pl-c1">push</span>(<span class="pl-smi">r</span>.<span class="pl-smi">time</span>);<span class="pl-smi">q</span>.<span class="pl-c1">push</span>(<span class="pl-smi">r</span>.<span class="pl-smi">morphTarget</span><span class="pl-k">===</span>n<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>)}<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">nc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.morphTargetInfluence[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>,t,q))}f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">*</span>(g<span class="pl-k">||</span><span class="pl-c1">1</span>)}<span class="pl-k">else</span> k<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>.bones[<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b[h].<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>,<span class="pl-en">c</span>(oc,k<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.position<span class="pl-pds">&quot;</span></span>,l,<span class="pl-s"><span class="pl-pds">&quot;</span>pos<span class="pl-pds">&quot;</span></span>,d),<span class="pl-en">c</span>(id,</td>
      </tr>
      <tr>
        <td id="L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="LC733" class="blob-code blob-code-inner js-file-line">k<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.quaternion<span class="pl-pds">&quot;</span></span>,l,<span class="pl-s"><span class="pl-pds">&quot;</span>rot<span class="pl-pds">&quot;</span></span>,d),<span class="pl-en">c</span>(oc,k<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.scale<span class="pl-pds">&quot;</span></span>,l,<span class="pl-s"><span class="pl-pds">&quot;</span>scl<span class="pl-pds">&quot;</span></span>,d)}<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">Ga</span>(e,f,d)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Ga</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">resetDuration</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">tracks</span>.<span class="pl-c1">length</span>;b<span class="pl-k">!==</span>c;<span class="pl-k">++</span>b){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">tracks</span>[b];a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(a,<span class="pl-smi">d</span>.<span class="pl-smi">times</span>[<span class="pl-smi">d</span>.<span class="pl-smi">times</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>])}<span class="pl-c1">this</span>.<span class="pl-smi">duration</span><span class="pl-k">=</span>a},<span class="pl-en">trim</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">tracks</span>.<span class="pl-c1">length</span>;a<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">tracks</span>[a].<span class="pl-en">trim</span>(<span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">duration</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">optimize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">tracks</span>.<span class="pl-c1">length</span>;a<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">tracks</span>[a].<span class="pl-en">optimize</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Pd</span>.<span class="pl-c1">prototype</span>,</td>
      </tr>
      <tr>
        <td id="L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="LC734" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>;(<span class="pl-k">new</span> <span class="pl-en">La</span>(<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>)).<span class="pl-c1">load</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">b</span>(<span class="pl-smi">e</span>.<span class="pl-c1">parse</span>(<span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(a)))},c,d)},<span class="pl-en">setTextures</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">textures</span><span class="pl-k">=</span>a},<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c[a]<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.MaterialLoader: Undefined texture<span class="pl-pds">&quot;</span></span>,a);<span class="pl-k">return</span> c[a]}<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">textures</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Vg</span>[<span class="pl-smi">a</span>.<span class="pl-c1">type</span>];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">uuid</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">uuid</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">color</span>.<span class="pl-en">setHex</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">roughness</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">roughness</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">roughness</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">metalness</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">metalness</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">metalness</span>);</td>
      </tr>
      <tr>
        <td id="L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="LC735" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">emissive</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">emissive</span>.<span class="pl-en">setHex</span>(<span class="pl-smi">a</span>.<span class="pl-smi">emissive</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">specular</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">specular</span>.<span class="pl-en">setHex</span>(<span class="pl-smi">a</span>.<span class="pl-smi">specular</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">shininess</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">shininess</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shininess</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">clearCoat</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">clearCoat</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clearCoat</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">clearCoatRoughness</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">clearCoatRoughness</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clearCoatRoughness</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">uniforms</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">uniforms</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">uniforms</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexShader</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">vertexShader</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexShader</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">fragmentShader</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">fragmentShader</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fragmentShader</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexColors</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">vertexColors</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">vertexColors</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="LC736" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">fog</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">fog</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fog</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">flatShading</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">flatShading</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">flatShading</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">blending</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">blending</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">blending</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">side</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">side</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">side</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">opacity</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">opacity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">opacity</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">transparent</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">transparent</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">transparent</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">alphaTest</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">alphaTest</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">alphaTest</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">depthTest</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">depthTest</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">depthTest</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">depthWrite</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">depthWrite</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">depthWrite</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">colorWrite</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">colorWrite</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">colorWrite</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframe</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">wireframe</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframe</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="LC737" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">wireframeLinewidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinewidth</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinecap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">wireframeLinecap</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinecap</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinejoin</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">wireframeLinejoin</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">wireframeLinejoin</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">rotation</span>);<span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">linewidth</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">linewidth</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">linewidth</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">dashSize</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">dashSize</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dashSize</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">gapSize</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">gapSize</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">gapSize</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">scale</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">scale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">scale</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">polygonOffset</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">polygonOffset</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">polygonOffset</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">polygonOffsetFactor</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="LC738" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">d</span>.<span class="pl-smi">polygonOffsetFactor</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">polygonOffsetFactor</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">polygonOffsetUnits</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">polygonOffsetUnits</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">polygonOffsetUnits</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">skinning</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">skinning</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skinning</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">morphTargets</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">dithering</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">dithering</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dithering</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">userData</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">userData</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">userData</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">shading</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">flatShading</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">shading</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">size</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">size</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">sizeAttenuation</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">sizeAttenuation</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">sizeAttenuation</span>);</td>
      </tr>
      <tr>
        <td id="L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="LC739" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">map</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">map</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">alphaMap</span>),<span class="pl-smi">d</span>.<span class="pl-smi">transparent</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">bumpMap</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">bumpScale</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">bumpScale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">bumpScale</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">normalMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">normalMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">normalMap</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">normalMapType</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">normalMapType</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalMapType</span>);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">normalScale</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">normalScale</span>;<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(e)<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>[e,e]);<span class="pl-smi">d</span>.<span class="pl-smi">normalScale</span><span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">B</span>).<span class="pl-en">fromArray</span>(e)}<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">displacementMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">displacementMap</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementScale</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="LC740" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">d</span>.<span class="pl-smi">displacementScale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementScale</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementBias</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">displacementBias</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">displacementBias</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">roughnessMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">roughnessMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">roughnessMap</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">metalnessMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">metalnessMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">metalnessMap</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">emissiveMap</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">emissiveIntensity</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">emissiveIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">emissiveIntensity</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">specularMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">specularMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">specularMap</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">envMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">envMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">envMap</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">reflectivity</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">reflectivity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">reflectivity</span>);</td>
      </tr>
      <tr>
        <td id="L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="LC741" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">lightMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">lightMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">lightMap</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">lightMapIntensity</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">lightMapIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">lightMapIntensity</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">aoMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">aoMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">aoMap</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">aoMapIntensity</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">aoMapIntensity</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">aoMapIntensity</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">gradientMap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">gradientMap</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">gradientMap</span>));<span class="pl-k">return</span> d}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ie</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>;(<span class="pl-k">new</span> <span class="pl-en">La</span>(<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>)).<span class="pl-c1">load</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">b</span>(<span class="pl-smi">e</span>.<span class="pl-c1">parse</span>(<span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(a)))},c,d)},<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">D</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-c1">index</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Cf</span>[<span class="pl-smi">c</span>.<span class="pl-c1">type</span>](<span class="pl-smi">c</span>.<span class="pl-smi">array</span>),</td>
      </tr>
      <tr>
        <td id="L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="LC742" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">setIndex</span>(<span class="pl-k">new</span> <span class="pl-en">L</span>(c,<span class="pl-c1">1</span>)));<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-c1">attributes</span>;<span class="pl-k">for</span>(f <span class="pl-k">in</span> d){<span class="pl-k">var</span> e<span class="pl-k">=</span>d[f];c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Cf</span>[<span class="pl-smi">e</span>.<span class="pl-c1">type</span>](<span class="pl-smi">e</span>.<span class="pl-smi">array</span>);<span class="pl-smi">b</span>.<span class="pl-en">addAttribute</span>(f,<span class="pl-k">new</span> <span class="pl-en">L</span>(c,<span class="pl-smi">e</span>.<span class="pl-smi">itemSize</span>,<span class="pl-smi">e</span>.<span class="pl-smi">normalized</span>))}<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-smi">groups</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-smi">drawcalls</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-smi">offsets</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;c<span class="pl-k">!==</span>d;<span class="pl-k">++</span>c)e<span class="pl-k">=</span>f[c],<span class="pl-smi">b</span>.<span class="pl-en">addGroup</span>(<span class="pl-smi">e</span>.<span class="pl-c1">start</span>,<span class="pl-smi">e</span>.<span class="pl-smi">count</span>,<span class="pl-smi">e</span>.<span class="pl-smi">materialIndex</span>);a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>.<span class="pl-smi">boundingSphere</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">center</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">center</span>),<span class="pl-smi">b</span>.<span class="pl-smi">boundingSphere</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ha</span>(f,<span class="pl-smi">a</span>.<span class="pl-smi">radius</span>));<span class="pl-k">return</span> b}});<span class="pl-k">var</span> Cf<span class="pl-k">=</span>{<span class="pl-c1">Int8Array</span><span class="pl-k">:</span><span class="pl-c1">Int8Array</span>,<span class="pl-c1">Uint8Array</span><span class="pl-k">:</span><span class="pl-c1">Uint8Array</span>,<span class="pl-c1">Uint8ClampedArray</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="LC743" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> <span class="pl-c1">Uint8ClampedArray</span><span class="pl-k">?</span><span class="pl-c1">Uint8ClampedArray</span><span class="pl-k">:</span><span class="pl-c1">Uint8Array</span>,<span class="pl-c1">Int16Array</span><span class="pl-k">:</span><span class="pl-c1">Int16Array</span>,<span class="pl-c1">Uint16Array</span><span class="pl-k">:</span><span class="pl-c1">Uint16Array</span>,<span class="pl-c1">Int32Array</span><span class="pl-k">:</span><span class="pl-c1">Int32Array</span>,<span class="pl-c1">Uint32Array</span><span class="pl-k">:</span><span class="pl-c1">Uint32Array</span>,<span class="pl-c1">Float32Array</span><span class="pl-k">:</span><span class="pl-c1">Float32Array</span>,<span class="pl-c1">Float64Array</span><span class="pl-k">:</span><span class="pl-c1">Float64Array</span>};<span class="pl-smi">pc</span>.<span class="pl-smi">Handlers</span><span class="pl-k">=</span>{handlers<span class="pl-k">:</span>[],<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">handlers</span>.<span class="pl-c1">push</span>(a,b)},<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">handlers</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">+=</span><span class="pl-c1">2</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>b[c<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">if</span>(b[c].<span class="pl-c1">test</span>(a))<span class="pl-k">return</span> e}<span class="pl-k">return</span> <span class="pl-c1">null</span>}};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">pc</span>.<span class="pl-c1">prototype</span>,{crossOrigin<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>anonymous<span class="pl-pds">&quot;</span></span>,<span class="pl-en">onLoadStart</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},<span class="pl-en">onLoadProgress</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},<span class="pl-en">onLoadComplete</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},</td>
      </tr>
      <tr>
        <td id="L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="LC744" class="blob-code blob-code-inner js-file-line"><span class="pl-en">initMaterials</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span>[],e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">++</span>e)d[e]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">createMaterial</span>(a[e],b,c);<span class="pl-k">return</span> d},<span class="pl-en">createMaterial</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{NoBlending<span class="pl-k">:</span><span class="pl-c1">0</span>,NormalBlending<span class="pl-k">:</span><span class="pl-c1">1</span>,AdditiveBlending<span class="pl-k">:</span><span class="pl-c1">2</span>,SubtractiveBlending<span class="pl-k">:</span><span class="pl-c1">3</span>,MultiplyBlending<span class="pl-k">:</span><span class="pl-c1">4</span>,CustomBlending<span class="pl-k">:</span><span class="pl-c1">5</span>},b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ad</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Pd</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">h</span>){a<span class="pl-k">=</span>f<span class="pl-k">+</span>a;<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">pc</span>.<span class="pl-smi">Handlers</span>.<span class="pl-c1">get</span>(a);<span class="pl-c1">null</span><span class="pl-k">!==</span>k<span class="pl-k">?</span>a<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">load</span>(a)<span class="pl-k">:</span>(<span class="pl-smi">c</span>.<span class="pl-en">setCrossOrigin</span>(g),a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">load</span>(a));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">repeat</span>.<span class="pl-en">fromArray</span>(b),<span class="pl-c1">1</span><span class="pl-k">!==</span>b[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">wrapS</span><span class="pl-k">=</span><span class="pl-c1">1E3</span>),<span class="pl-c1">1</span><span class="pl-k">!==</span>b[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">wrapT</span><span class="pl-k">=</span><span class="pl-c1">1E3</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="LC745" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">offset</span>.<span class="pl-en">fromArray</span>(d);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>repeat<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>e[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">wrapS</span><span class="pl-k">=</span><span class="pl-c1">1E3</span>),<span class="pl-s"><span class="pl-pds">&quot;</span>mirror<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>e[<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">wrapS</span><span class="pl-k">=</span><span class="pl-c1">1002</span>),<span class="pl-s"><span class="pl-pds">&quot;</span>repeat<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>e[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">wrapT</span><span class="pl-k">=</span><span class="pl-c1">1E3</span>),<span class="pl-s"><span class="pl-pds">&quot;</span>mirror<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>e[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">wrapT</span><span class="pl-k">=</span><span class="pl-c1">1002</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>h<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">anisotropy</span><span class="pl-k">=</span>h);b<span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-en">generateUUID</span>();l[b]<span class="pl-k">=</span>a;<span class="pl-k">return</span> b}<span class="pl-k">var</span> l<span class="pl-k">=</span>{},k<span class="pl-k">=</span>{uuid<span class="pl-k">:</span><span class="pl-c1">J</span>.<span class="pl-en">generateUUID</span>(),type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>MeshLambertMaterial<span class="pl-pds">&quot;</span></span>},p;<span class="pl-k">for</span>(p <span class="pl-k">in</span> e){<span class="pl-k">var</span> n<span class="pl-k">=</span>e[p];<span class="pl-k">switch</span>(p){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>DbgColor<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>DbgIndex<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>opticalDensity<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>illumination<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>DbgName<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>n;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>blending<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">blending</span><span class="pl-k">=</span>a[n];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>colorAmbient<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapAmbient<span class="pl-pds">&quot;</span></span>:<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Loader.createMaterial:<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="LC746" class="blob-code blob-code-inner js-file-line">p,<span class="pl-s"><span class="pl-pds">&quot;</span>is no longer supported.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>colorDiffuse<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">fromArray</span>(n).<span class="pl-en">getHex</span>();<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>colorSpecular<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">specular</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">fromArray</span>(n).<span class="pl-en">getHex</span>();<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>colorEmissive<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">emissive</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">fromArray</span>(n).<span class="pl-en">getHex</span>();<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>specularCoef<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">shininess</span><span class="pl-k">=</span>n;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>shading<span class="pl-pds">&quot;</span></span>:<span class="pl-s"><span class="pl-pds">&quot;</span>basic<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">n</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>MeshBasicMaterial<span class="pl-pds">&quot;</span></span>);<span class="pl-s"><span class="pl-pds">&quot;</span>phong<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">n</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>MeshPhongMaterial<span class="pl-pds">&quot;</span></span>);<span class="pl-s"><span class="pl-pds">&quot;</span>standard<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">n</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-c1">type</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>MeshStandardMaterial<span class="pl-pds">&quot;</span></span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapDiffuse<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-en">h</span>(n,<span class="pl-smi">e</span>.<span class="pl-smi">mapDiffuseRepeat</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapDiffuseOffset</span>,</td>
      </tr>
      <tr>
        <td id="L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="LC747" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-smi">mapDiffuseWrap</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapDiffuseAnisotropy</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapDiffuseRepeat<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapDiffuseOffset<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapDiffuseWrap<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapDiffuseAnisotropy<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapEmissive<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">emissiveMap</span><span class="pl-k">=</span><span class="pl-en">h</span>(n,<span class="pl-smi">e</span>.<span class="pl-smi">mapEmissiveRepeat</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapEmissiveOffset</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapEmissiveWrap</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapEmissiveAnisotropy</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapEmissiveRepeat<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapEmissiveOffset<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapEmissiveWrap<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapEmissiveAnisotropy<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapLight<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">lightMap</span><span class="pl-k">=</span><span class="pl-en">h</span>(n,<span class="pl-smi">e</span>.<span class="pl-smi">mapLightRepeat</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapLightOffset</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapLightWrap</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapLightAnisotropy</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapLightRepeat<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapLightOffset<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapLightWrap<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapLightAnisotropy<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="LC748" class="blob-code blob-code-inner js-file-line"><span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapAO<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">aoMap</span><span class="pl-k">=</span><span class="pl-en">h</span>(n,<span class="pl-smi">e</span>.<span class="pl-smi">mapAORepeat</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapAOOffset</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapAOWrap</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapAOAnisotropy</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapAORepeat<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapAOOffset<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapAOWrap<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapAOAnisotropy<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapBump<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">bumpMap</span><span class="pl-k">=</span><span class="pl-en">h</span>(n,<span class="pl-smi">e</span>.<span class="pl-smi">mapBumpRepeat</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapBumpOffset</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapBumpWrap</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapBumpAnisotropy</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapBumpScale<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">bumpScale</span><span class="pl-k">=</span>n;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapBumpRepeat<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapBumpOffset<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapBumpWrap<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapBumpAnisotropy<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapNormal<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">normalMap</span><span class="pl-k">=</span><span class="pl-en">h</span>(n,<span class="pl-smi">e</span>.<span class="pl-smi">mapNormalRepeat</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapNormalOffset</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapNormalWrap</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapNormalAnisotropy</span>);</td>
      </tr>
      <tr>
        <td id="L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="LC749" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapNormalFactor<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">normalScale</span><span class="pl-k">=</span>n;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapNormalRepeat<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapNormalOffset<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapNormalWrap<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapNormalAnisotropy<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapSpecular<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">specularMap</span><span class="pl-k">=</span><span class="pl-en">h</span>(n,<span class="pl-smi">e</span>.<span class="pl-smi">mapSpecularRepeat</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapSpecularOffset</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapSpecularWrap</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapSpecularAnisotropy</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapSpecularRepeat<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapSpecularOffset<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapSpecularWrap<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapSpecularAnisotropy<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapMetalness<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">metalnessMap</span><span class="pl-k">=</span><span class="pl-en">h</span>(n,<span class="pl-smi">e</span>.<span class="pl-smi">mapMetalnessRepeat</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapMetalnessOffset</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapMetalnessWrap</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapMetalnessAnisotropy</span>);</td>
      </tr>
      <tr>
        <td id="L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="LC750" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapMetalnessRepeat<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapMetalnessOffset<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapMetalnessWrap<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapMetalnessAnisotropy<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapRoughness<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">roughnessMap</span><span class="pl-k">=</span><span class="pl-en">h</span>(n,<span class="pl-smi">e</span>.<span class="pl-smi">mapRoughnessRepeat</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapRoughnessOffset</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapRoughnessWrap</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapRoughnessAnisotropy</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapRoughnessRepeat<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapRoughnessOffset<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapRoughnessWrap<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapRoughnessAnisotropy<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapAlpha<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">alphaMap</span><span class="pl-k">=</span><span class="pl-en">h</span>(n,<span class="pl-smi">e</span>.<span class="pl-smi">mapAlphaRepeat</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapAlphaOffset</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapAlphaWrap</span>,<span class="pl-smi">e</span>.<span class="pl-smi">mapAlphaAnisotropy</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapAlphaRepeat<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapAlphaOffset<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapAlphaWrap<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>mapAlphaAnisotropy<span class="pl-pds">&quot;</span></span>:<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="LC751" class="blob-code blob-code-inner js-file-line"><span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>flipSided<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">side</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>doubleSided<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">k</span>.<span class="pl-smi">side</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>transparency<span class="pl-pds">&quot;</span></span>:<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Loader.createMaterial: transparency has been renamed to opacity<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">k</span>.<span class="pl-smi">opacity</span><span class="pl-k">=</span>n;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>depthTest<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>depthWrite<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>colorWrite<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>reflectivity<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>transparent<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>visible<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>wireframe<span class="pl-pds">&quot;</span></span>:k[p]<span class="pl-k">=</span>n;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>vertexColors<span class="pl-pds">&quot;</span></span>:<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>n<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-smi">vertexColors</span><span class="pl-k">=</span><span class="pl-c1">2</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>face<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>n<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-smi">vertexColors</span><span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Loader.createMaterial: Unsupported<span class="pl-pds">&quot;</span></span>,p,n)}}<span class="pl-s"><span class="pl-pds">&quot;</span>MeshBasicMaterial<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="LC752" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-smi">k</span>.<span class="pl-smi">emissive</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>MeshPhongMaterial<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">k</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-smi">k</span>.<span class="pl-smi">specular</span>;<span class="pl-c1">1</span><span class="pl-k">&gt;</span><span class="pl-smi">k</span>.<span class="pl-smi">opacity</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-smi">transparent</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">d</span>.<span class="pl-en">setTextures</span>(l);<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">parse</span>(k)}}()});<span class="pl-k">var</span> Fe<span class="pl-k">=</span>{<span class="pl-en">decodeText</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> TextDecoder)<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">TextDecoder</span>).<span class="pl-en">decode</span>(a);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)b<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(a[c]);<span class="pl-k">return</span> <span class="pl-c1">decodeURIComponent</span>(<span class="pl-c1">escape</span>(b))},<span class="pl-en">extractUrlBase</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>./<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,b<span class="pl-k">+</span><span class="pl-c1">1</span>)}};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">je</span>.<span class="pl-c1">prototype</span>,{crossOrigin<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>anonymous<span class="pl-pds">&quot;</span></span>,<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="LC753" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">texturePath</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">this</span>.<span class="pl-smi">texturePath</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">texturePath</span><span class="pl-k">:</span><span class="pl-smi">Fe</span>.<span class="pl-en">extractUrlBase</span>(a),g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">La</span>(<span class="pl-c1">this</span>.<span class="pl-smi">manager</span>);<span class="pl-smi">g</span>.<span class="pl-en">setWithCredentials</span>(<span class="pl-c1">this</span>.<span class="pl-smi">withCredentials</span>);<span class="pl-smi">g</span>.<span class="pl-c1">load</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(c);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">metadata</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">type</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">toLowerCase</span>())){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.JSONLoader: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> should be loaded with THREE.ObjectLoader instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>}c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">parse</span>(c,f);<span class="pl-en">b</span>(<span class="pl-smi">c</span>.<span class="pl-smi">geometry</span>,<span class="pl-smi">c</span>.<span class="pl-smi">materials</span>)},c,d)},<span class="pl-en">setCrossOrigin</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="LC754" class="blob-code blob-code-inner js-file-line"><span class="pl-en">setTexturePath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">texturePath</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>);<span class="pl-smi">a</span>.<span class="pl-smi">scale</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">scale</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-smi">scale</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">P</span>,d<span class="pl-k">=</span>a,e,f,g,h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">faces</span>;<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">vertices</span>;<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">normals</span>,v<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">colors</span>;<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">scale</span>;<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-smi">uvs</span>){<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-smi">uvs</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)<span class="pl-smi">d</span>.<span class="pl-smi">uvs</span>[e].<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>t<span class="pl-k">++</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>t;e<span class="pl-k">++</span>)<span class="pl-smi">c</span>.<span class="pl-smi">faceVertexUvs</span>[e]<span class="pl-k">=</span>[]}<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;q<span class="pl-k">&lt;</span>g;)e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>l[q<span class="pl-k">++</span>]<span class="pl-k">*</span>n,<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>l[q<span class="pl-k">++</span>]<span class="pl-k">*</span>n,<span class="pl-smi">e</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>l[q<span class="pl-k">++</span>]<span class="pl-k">*</span>n,<span class="pl-smi">c</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">push</span>(e);q<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>;q<span class="pl-k">&lt;</span>g;){l<span class="pl-k">=</span>h[q<span class="pl-k">++</span>];<span class="pl-k">var</span> r<span class="pl-k">=</span>l<span class="pl-k">&amp;</span></td>
      </tr>
      <tr>
        <td id="L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="LC755" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>;<span class="pl-k">var</span> u<span class="pl-k">=</span>l<span class="pl-k">&amp;</span><span class="pl-c1">2</span>;e<span class="pl-k">=</span>l<span class="pl-k">&amp;</span><span class="pl-c1">8</span>;<span class="pl-k">var</span> y<span class="pl-k">=</span>l<span class="pl-k">&amp;</span><span class="pl-c1">16</span>;<span class="pl-k">var</span> w<span class="pl-k">=</span>l<span class="pl-k">&amp;</span><span class="pl-c1">32</span>;n<span class="pl-k">=</span>l<span class="pl-k">&amp;</span><span class="pl-c1">64</span>;l<span class="pl-k">&amp;=</span><span class="pl-c1">128</span>;<span class="pl-k">if</span>(r){r<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ya</span>;<span class="pl-smi">r</span>.<span class="pl-smi">a</span><span class="pl-k">=</span>h[q];<span class="pl-smi">r</span>.<span class="pl-smi">b</span><span class="pl-k">=</span>h[q<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-smi">r</span>.<span class="pl-smi">c</span><span class="pl-k">=</span>h[q<span class="pl-k">+</span><span class="pl-c1">3</span>];<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ya</span>;<span class="pl-smi">x</span>.<span class="pl-smi">a</span><span class="pl-k">=</span>h[q<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-smi">x</span>.<span class="pl-smi">b</span><span class="pl-k">=</span>h[q<span class="pl-k">+</span><span class="pl-c1">2</span>];<span class="pl-smi">x</span>.<span class="pl-smi">c</span><span class="pl-k">=</span>h[q<span class="pl-k">+</span><span class="pl-c1">3</span>];q<span class="pl-k">+=</span><span class="pl-c1">4</span>;u<span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span>h[q<span class="pl-k">++</span>],<span class="pl-smi">r</span>.<span class="pl-smi">materialIndex</span><span class="pl-k">=</span>u,<span class="pl-smi">x</span>.<span class="pl-smi">materialIndex</span><span class="pl-k">=</span>u);u<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(e)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>t;e<span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">uvs</span>[e];<span class="pl-smi">c</span>.<span class="pl-smi">faceVertexUvs</span>[e][u]<span class="pl-k">=</span>[];<span class="pl-smi">c</span>.<span class="pl-smi">faceVertexUvs</span>[e][u<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>[];<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>f;f<span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">C</span><span class="pl-k">=</span>h[q<span class="pl-k">++</span>];<span class="pl-k">var</span> z<span class="pl-k">=</span><span class="pl-c1">A</span>[<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">C</span>];<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">A</span>[<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">C</span><span class="pl-k">+</span><span class="pl-c1">1</span>];z<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>(z,<span class="pl-c1">C</span>);<span class="pl-c1">2</span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">faceVertexUvs</span>[e][u].<span class="pl-c1">push</span>(z);<span class="pl-c1">0</span><span class="pl-k">!==</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">faceVertexUvs</span>[e][u<span class="pl-k">+</span><span class="pl-c1">1</span>].<span class="pl-c1">push</span>(z)}}y<span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span>h[q<span class="pl-k">++</span>],<span class="pl-smi">r</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">set</span>(k[y<span class="pl-k">++</span>],k[y<span class="pl-k">++</span>],k[y]),<span class="pl-smi">x</span>.<span class="pl-smi">normal</span>.<span class="pl-en">copy</span>(<span class="pl-smi">r</span>.<span class="pl-smi">normal</span>));</td>
      </tr>
      <tr>
        <td id="L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="LC756" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(w)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>)y<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span>h[q<span class="pl-k">++</span>],w<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(k[y<span class="pl-k">++</span>],k[y<span class="pl-k">++</span>],k[y]),<span class="pl-c1">2</span><span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-smi">vertexNormals</span>.<span class="pl-c1">push</span>(w),<span class="pl-c1">0</span><span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">x</span>.<span class="pl-smi">vertexNormals</span>.<span class="pl-c1">push</span>(w);n<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span>h[q<span class="pl-k">++</span>],n<span class="pl-k">=</span>v[n],<span class="pl-smi">r</span>.<span class="pl-c1">color</span>.<span class="pl-en">setHex</span>(n),<span class="pl-smi">x</span>.<span class="pl-c1">color</span>.<span class="pl-en">setHex</span>(n));<span class="pl-k">if</span>(l)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>)n<span class="pl-k">=</span>h[q<span class="pl-k">++</span>],n<span class="pl-k">=</span>v[n],<span class="pl-c1">2</span><span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-smi">vertexColors</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">G</span>(n)),<span class="pl-c1">0</span><span class="pl-k">!==</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">x</span>.<span class="pl-smi">vertexColors</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">G</span>(n));<span class="pl-smi">c</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">push</span>(r);<span class="pl-smi">c</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">push</span>(x)}<span class="pl-k">else</span>{r<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ya</span>;<span class="pl-smi">r</span>.<span class="pl-smi">a</span><span class="pl-k">=</span>h[q<span class="pl-k">++</span>];<span class="pl-smi">r</span>.<span class="pl-smi">b</span><span class="pl-k">=</span>h[q<span class="pl-k">++</span>];<span class="pl-smi">r</span>.<span class="pl-smi">c</span><span class="pl-k">=</span>h[q<span class="pl-k">++</span>];u<span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span>h[q<span class="pl-k">++</span>],<span class="pl-smi">r</span>.<span class="pl-smi">materialIndex</span><span class="pl-k">=</span>u);u<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(e)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>t;e<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">uvs</span>[e],<span class="pl-smi">c</span>.<span class="pl-smi">faceVertexUvs</span>[e][u]<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>f;f<span class="pl-k">++</span>)<span class="pl-c1">C</span><span class="pl-k">=</span>h[q<span class="pl-k">++</span>],z<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="LC757" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">A</span>[<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">C</span>],<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">A</span>[<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">C</span><span class="pl-k">+</span><span class="pl-c1">1</span>],z<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>(z,<span class="pl-c1">C</span>),<span class="pl-smi">c</span>.<span class="pl-smi">faceVertexUvs</span>[e][u].<span class="pl-c1">push</span>(z);y<span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span>h[q<span class="pl-k">++</span>],<span class="pl-smi">r</span>.<span class="pl-smi">normal</span>.<span class="pl-c1">set</span>(k[y<span class="pl-k">++</span>],k[y<span class="pl-k">++</span>],k[y]));<span class="pl-k">if</span>(w)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>)y<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span>h[q<span class="pl-k">++</span>],w<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>(k[y<span class="pl-k">++</span>],k[y<span class="pl-k">++</span>],k[y]),<span class="pl-smi">r</span>.<span class="pl-smi">vertexNormals</span>.<span class="pl-c1">push</span>(w);n<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span>h[q<span class="pl-k">++</span>],<span class="pl-smi">r</span>.<span class="pl-c1">color</span>.<span class="pl-en">setHex</span>(v[n]));<span class="pl-k">if</span>(l)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>)n<span class="pl-k">=</span>h[q<span class="pl-k">++</span>],<span class="pl-smi">r</span>.<span class="pl-smi">vertexColors</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">G</span>(v[n]));<span class="pl-smi">c</span>.<span class="pl-smi">faces</span>.<span class="pl-c1">push</span>(r)}}d<span class="pl-k">=</span>a;q<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-smi">influencesPerVertex</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">influencesPerVertex</span><span class="pl-k">:</span><span class="pl-c1">2</span>;<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">skinWeights</span>)<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">skinWeights</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>h;g<span class="pl-k">+=</span>q)<span class="pl-smi">c</span>.<span class="pl-smi">skinWeights</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">W</span>(<span class="pl-smi">d</span>.<span class="pl-smi">skinWeights</span>[g],<span class="pl-c1">1</span><span class="pl-k">&lt;</span>q<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">skinWeights</span>[g<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">&lt;</span>q<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">skinWeights</span>[g<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="LC758" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span>]<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-c1">3</span><span class="pl-k">&lt;</span>q<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">skinWeights</span>[g<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">:</span><span class="pl-c1">0</span>));<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">skinIndices</span>)<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">skinIndices</span>.<span class="pl-c1">length</span>;g<span class="pl-k">&lt;</span>h;g<span class="pl-k">+=</span>q)<span class="pl-smi">c</span>.<span class="pl-smi">skinIndices</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">W</span>(<span class="pl-smi">d</span>.<span class="pl-smi">skinIndices</span>[g],<span class="pl-c1">1</span><span class="pl-k">&lt;</span>q<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">skinIndices</span>[g<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">&lt;</span>q<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">skinIndices</span>[g<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-c1">3</span><span class="pl-k">&lt;</span>q<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">skinIndices</span>[g<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">:</span><span class="pl-c1">0</span>));<span class="pl-smi">c</span>.<span class="pl-smi">bones</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">bones</span>;<span class="pl-smi">c</span>.<span class="pl-smi">bones</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-smi">bones</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">skinWeights</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">skinIndices</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">skinIndices</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>When skinning, number of vertices (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>), skinIndices (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">skinIndices</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>), and skinWeights (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">skinWeights</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) should match.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="LC759" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span>a;h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">scale</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">morphTargets</span>)<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">morphTargets</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>q;d<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-smi">c</span>.<span class="pl-smi">morphTargets</span>[d]<span class="pl-k">=</span>{},<span class="pl-smi">c</span>.<span class="pl-smi">morphTargets</span>[d].<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">morphTargets</span>[d].<span class="pl-c1">name</span>,<span class="pl-smi">c</span>.<span class="pl-smi">morphTargets</span>[d].<span class="pl-smi">vertices</span><span class="pl-k">=</span>[],k<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">morphTargets</span>[d].<span class="pl-smi">vertices</span>,v<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">morphTargets</span>[d].<span class="pl-smi">vertices</span>,t<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span>;t<span class="pl-k">&lt;</span>l;t<span class="pl-k">+=</span><span class="pl-c1">3</span>)n<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,<span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>v[t]<span class="pl-k">*</span>h,<span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>v[t<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">*</span>h,<span class="pl-smi">n</span>.<span class="pl-c1">z</span><span class="pl-k">=</span>v[t<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">*</span>h,<span class="pl-smi">k</span>.<span class="pl-c1">push</span>(n);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">morphColors</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-smi">morphColors</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>THREE.JSONLoader: &quot;morphColors&quot; no longer supported. Using them as face colors.<span class="pl-pds">&#39;</span></span>),h<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">faces</span>,g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">morphColors</span>[<span class="pl-c1">0</span>].<span class="pl-smi">colors</span>,</td>
      </tr>
      <tr>
        <td id="L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="LC760" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>q;d<span class="pl-k">++</span>)h[d].<span class="pl-c1">color</span>.<span class="pl-en">fromArray</span>(g,<span class="pl-c1">3</span><span class="pl-k">*</span>d);g<span class="pl-k">=</span>a;d<span class="pl-k">=</span>[];q<span class="pl-k">=</span>[];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">animation</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-c1">push</span>(<span class="pl-smi">g</span>.<span class="pl-smi">animation</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">animations</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">g</span>.<span class="pl-smi">animations</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>q<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">g</span>.<span class="pl-smi">animations</span>)<span class="pl-k">:</span><span class="pl-smi">q</span>.<span class="pl-c1">push</span>(<span class="pl-smi">g</span>.<span class="pl-smi">animations</span>));<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">q</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>)(h<span class="pl-k">=</span><span class="pl-smi">Ga</span>.<span class="pl-en">parseAnimation</span>(q[g],<span class="pl-smi">c</span>.<span class="pl-smi">bones</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">push</span>(h);<span class="pl-smi">c</span>.<span class="pl-smi">morphTargets</span><span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span><span class="pl-smi">Ga</span>.<span class="pl-en">CreateClipsFromMorphTargetSequences</span>(<span class="pl-smi">c</span>.<span class="pl-smi">morphTargets</span>,<span class="pl-c1">10</span>),d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">concat</span>(q));<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">animations</span><span class="pl-k">=</span>d);<span class="pl-smi">c</span>.<span class="pl-en">computeFaceNormals</span>();<span class="pl-smi">c</span>.<span class="pl-en">computeBoundingSphere</span>();<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">materials</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">materials</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span>{geometry<span class="pl-k">:</span>c};</td>
      </tr>
      <tr>
        <td id="L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="LC761" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">pc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">initMaterials</span>(<span class="pl-smi">a</span>.<span class="pl-smi">materials</span>,b,<span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span>);<span class="pl-k">return</span>{geometry<span class="pl-k">:</span>c,materials<span class="pl-k">:</span>a}}}()});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">nf</span>.<span class="pl-c1">prototype</span>,{crossOrigin<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>anonymous<span class="pl-pds">&quot;</span></span>,<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">texturePath</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">texturePath</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-c1">1</span>));<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>;(<span class="pl-k">new</span> <span class="pl-en">La</span>(<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>)).<span class="pl-c1">load</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">try</span>{f<span class="pl-k">=</span><span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(c)}<span class="pl-k">catch</span>(h){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(h);<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE:ObjectLoader: Can&#39;t parse <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">h</span>.<span class="pl-smi">message</span>);<span class="pl-k">return</span>}c<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">metadata</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">type</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>geometry<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-c1">type</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="LC762" class="blob-code blob-code-inner js-file-line"><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ObjectLoader: Can&#39;t load <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>. Use THREE.JSONLoader instead.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">parse</span>(f,b)},c,d)},<span class="pl-en">setTexturePath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">texturePath</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setCrossOrigin</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">parseShape</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shapes</span>);c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">parseGeometries</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometries</span>,c);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">parseImages</span>(<span class="pl-smi">a</span>.<span class="pl-c1">images</span>,<span class="pl-k">function</span>(){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(e)});d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">parseTextures</span>(<span class="pl-smi">a</span>.<span class="pl-smi">textures</span>,d);d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">parseMaterials</span>(<span class="pl-smi">a</span>.<span class="pl-smi">materials</span>,d);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">parseObject</span>(<span class="pl-smi">a</span>.<span class="pl-c1">object</span>,c,d);<span class="pl-smi">a</span>.<span class="pl-smi">animations</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">animations</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="LC763" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">parseAnimations</span>(<span class="pl-smi">a</span>.<span class="pl-smi">animations</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">images</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">images</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">||</span><span class="pl-en">b</span>(e);<span class="pl-k">return</span> e},<span class="pl-en">parseShape</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a)<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">jb</span>).<span class="pl-en">fromJSON</span>(a[c]);b[<span class="pl-smi">e</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>e}<span class="pl-k">return</span> b},<span class="pl-en">parseGeometries</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a)<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">je</span>,e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ie</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>a[f];<span class="pl-k">switch</span>(<span class="pl-smi">h</span>.<span class="pl-c1">type</span>){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>PlaneGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>PlaneBufferGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-c1">width</span>,<span class="pl-smi">h</span>.<span class="pl-c1">height</span>,<span class="pl-smi">h</span>.<span class="pl-smi">widthSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">heightSegments</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>BoxGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>BoxBufferGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>CubeGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="LC764" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-c1">width</span>,<span class="pl-smi">h</span>.<span class="pl-c1">height</span>,<span class="pl-smi">h</span>.<span class="pl-smi">depth</span>,<span class="pl-smi">h</span>.<span class="pl-smi">widthSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">heightSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">depthSegments</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>CircleGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>CircleBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-smi">radius</span>,<span class="pl-smi">h</span>.<span class="pl-smi">segments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">thetaStart</span>,<span class="pl-smi">h</span>.<span class="pl-smi">thetaLength</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>CylinderGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>CylinderBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-smi">radiusTop</span>,<span class="pl-smi">h</span>.<span class="pl-smi">radiusBottom</span>,<span class="pl-smi">h</span>.<span class="pl-c1">height</span>,<span class="pl-smi">h</span>.<span class="pl-smi">radialSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">heightSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">openEnded</span>,<span class="pl-smi">h</span>.<span class="pl-smi">thetaStart</span>,<span class="pl-smi">h</span>.<span class="pl-smi">thetaLength</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ConeGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ConeBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-smi">radius</span>,<span class="pl-smi">h</span>.<span class="pl-c1">height</span>,<span class="pl-smi">h</span>.<span class="pl-smi">radialSegments</span>,</td>
      </tr>
      <tr>
        <td id="L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="LC765" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-smi">heightSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">openEnded</span>,<span class="pl-smi">h</span>.<span class="pl-smi">thetaStart</span>,<span class="pl-smi">h</span>.<span class="pl-smi">thetaLength</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>SphereGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>SphereBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-smi">radius</span>,<span class="pl-smi">h</span>.<span class="pl-smi">widthSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">heightSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">phiStart</span>,<span class="pl-smi">h</span>.<span class="pl-smi">phiLength</span>,<span class="pl-smi">h</span>.<span class="pl-smi">thetaStart</span>,<span class="pl-smi">h</span>.<span class="pl-smi">thetaLength</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>DodecahedronGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>DodecahedronBufferGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>IcosahedronGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>IcosahedronBufferGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>OctahedronGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>OctahedronBufferGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>TetrahedronGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>TetrahedronBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-smi">radius</span>,<span class="pl-smi">h</span>.<span class="pl-smi">detail</span>);</td>
      </tr>
      <tr>
        <td id="L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="LC766" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>RingGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>RingBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-smi">innerRadius</span>,<span class="pl-smi">h</span>.<span class="pl-smi">outerRadius</span>,<span class="pl-smi">h</span>.<span class="pl-smi">thetaSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">phiSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">thetaStart</span>,<span class="pl-smi">h</span>.<span class="pl-smi">thetaLength</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>TorusGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>TorusBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-smi">radius</span>,<span class="pl-smi">h</span>.<span class="pl-smi">tube</span>,<span class="pl-smi">h</span>.<span class="pl-smi">radialSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">tubularSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">arc</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>TorusKnotGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>TorusKnotBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-smi">radius</span>,<span class="pl-smi">h</span>.<span class="pl-smi">tube</span>,<span class="pl-smi">h</span>.<span class="pl-smi">tubularSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">radialSegments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">p</span>,<span class="pl-smi">h</span>.<span class="pl-smi">q</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>LatheGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>LatheBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-smi">points</span>,</td>
      </tr>
      <tr>
        <td id="L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="LC767" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-smi">segments</span>,<span class="pl-smi">h</span>.<span class="pl-smi">phiStart</span>,<span class="pl-smi">h</span>.<span class="pl-smi">phiLength</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>PolyhedronGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>PolyhedronBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](<span class="pl-smi">h</span>.<span class="pl-smi">vertices</span>,<span class="pl-smi">h</span>.<span class="pl-smi">indices</span>,<span class="pl-smi">h</span>.<span class="pl-smi">radius</span>,<span class="pl-smi">h</span>.<span class="pl-smi">details</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ShapeGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ShapeBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">shapes</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>p;k<span class="pl-k">++</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>b[<span class="pl-smi">h</span>.<span class="pl-smi">shapes</span>[k]];<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(n)}l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](l,<span class="pl-smi">h</span>.<span class="pl-smi">curveSegments</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ExtrudeGeometry<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>ExtrudeBufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span>[];k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(p<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">shapes</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>p;k<span class="pl-k">++</span>)n<span class="pl-k">=</span>b[<span class="pl-smi">h</span>.<span class="pl-smi">shapes</span>[k]],<span class="pl-smi">l</span>.<span class="pl-c1">push</span>(n);k<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">options</span>.<span class="pl-smi">extrudePath</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>k<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-c1">options</span>.<span class="pl-smi">extrudePath</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="LC768" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">new</span> <span class="pl-en">Bf</span>[<span class="pl-smi">k</span>.<span class="pl-c1">type</span>]).<span class="pl-en">fromJSON</span>(k));l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ka</span>[<span class="pl-smi">h</span>.<span class="pl-c1">type</span>](l,<span class="pl-smi">h</span>.<span class="pl-c1">options</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>BufferGeometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">parse</span>(h);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Geometry<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">parse</span>(h,<span class="pl-c1">this</span>.<span class="pl-smi">texturePath</span>).<span class="pl-smi">geometry</span>;<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>THREE.ObjectLoader: Unsupported geometry type &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">h</span>.<span class="pl-c1">type</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>);<span class="pl-k">continue</span>}<span class="pl-smi">l</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">uuid</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">h</span>.<span class="pl-c1">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">l</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">name</span>);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">l</span>.<span class="pl-smi">isBufferGeometry</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">h</span>.<span class="pl-smi">userData</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">l</span>.<span class="pl-smi">userData</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">userData</span>);c[<span class="pl-smi">h</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>l}<span class="pl-k">return</span> c},<span class="pl-en">parseMaterials</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Pd</span>;<span class="pl-smi">d</span>.<span class="pl-en">setTextures</span>(b);b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="LC769" class="blob-code blob-code-inner js-file-line">e;b<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>a[b];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>MultiMaterial<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">f</span>.<span class="pl-c1">type</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span>[],h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">materials</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>)<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-smi">d</span>.<span class="pl-c1">parse</span>(<span class="pl-smi">f</span>.<span class="pl-smi">materials</span>[h]));c[<span class="pl-smi">f</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>g}<span class="pl-k">else</span> c[<span class="pl-smi">f</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">parse</span>(f)}}<span class="pl-k">return</span> c},<span class="pl-en">parseAnimations</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[c],e<span class="pl-k">=</span><span class="pl-smi">Ga</span>.<span class="pl-c1">parse</span>(d);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">d</span>.<span class="pl-smi">uuid</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">uuid</span>);<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(e)}<span class="pl-k">return</span> b},<span class="pl-en">parseImages</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemStart</span>(a);<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">load</span>(a,<span class="pl-k">function</span>(){<span class="pl-smi">d</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a)},<span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-k">function</span>(){<span class="pl-smi">d</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a);<span class="pl-smi">d</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemError</span>(a)})}<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>,e<span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="LC770" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>){b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ee</span>(b);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">fd</span>(b);<span class="pl-smi">f</span>.<span class="pl-en">setCrossOrigin</span>(<span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span>);b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>g;b<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>a[b],l<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">url</span>;<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(l)){e[<span class="pl-smi">h</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>p;k<span class="pl-k">++</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>l[k];n<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-cce">\/\/</span>)<span class="pl-k">|</span>(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span>:(<span class="pl-cce">\/\/</span>)<span class="pl-k">?</span>)<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(n)<span class="pl-k">?</span>n<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">texturePath</span><span class="pl-k">+</span>n;e[<span class="pl-smi">h</span>.<span class="pl-smi">uuid</span>].<span class="pl-c1">push</span>(<span class="pl-en">c</span>(n))}}<span class="pl-k">else</span> n<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-cce">\/\/</span>)<span class="pl-k">|</span>(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span>:(<span class="pl-cce">\/\/</span>)<span class="pl-k">?</span>)<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-smi">h</span>.<span class="pl-smi">url</span>)<span class="pl-k">?</span><span class="pl-smi">h</span>.<span class="pl-smi">url</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">texturePath</span><span class="pl-k">+</span><span class="pl-smi">h</span>.<span class="pl-smi">url</span>,e[<span class="pl-smi">h</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span><span class="pl-en">c</span>(n)}}<span class="pl-k">return</span> e},<span class="pl-en">parseTextures</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a)<span class="pl-k">return</span> a;<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ObjectLoader.parseTexture: Constant should be in numeric form.<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="LC771" class="blob-code blob-code-inner js-file-line">a);<span class="pl-k">return</span> b[a]}<span class="pl-k">var</span> d<span class="pl-k">=</span>{};<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a)<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>a[e];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">image</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>THREE.ObjectLoader: No &quot;image&quot; specified for<span class="pl-pds">&#39;</span></span>,<span class="pl-smi">g</span>.<span class="pl-smi">uuid</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b[<span class="pl-smi">g</span>.<span class="pl-smi">image</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ObjectLoader: Undefined image<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">g</span>.<span class="pl-smi">image</span>);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(b[<span class="pl-smi">g</span>.<span class="pl-smi">image</span>])<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Za</span>(b[<span class="pl-smi">g</span>.<span class="pl-smi">image</span>])<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">ea</span>(b[<span class="pl-smi">g</span>.<span class="pl-smi">image</span>]);<span class="pl-smi">h</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">h</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">uuid</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-c1">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">name</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">mapping</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">mapping</span><span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">g</span>.<span class="pl-smi">mapping</span>,Wg));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">offset</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">offset</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">g</span>.<span class="pl-smi">offset</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">repeat</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">repeat</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">g</span>.<span class="pl-smi">repeat</span>);</td>
      </tr>
      <tr>
        <td id="L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="LC772" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">center</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">center</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">g</span>.<span class="pl-smi">center</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">rotation</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">rotation</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">wrap</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">wrapS</span><span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">g</span>.<span class="pl-smi">wrap</span>[<span class="pl-c1">0</span>],Df),<span class="pl-smi">h</span>.<span class="pl-smi">wrapT</span><span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">g</span>.<span class="pl-smi">wrap</span>[<span class="pl-c1">1</span>],Df));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">format</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">format</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">format</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">minFilter</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">minFilter</span><span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">g</span>.<span class="pl-smi">minFilter</span>,Ef));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">magFilter</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">magFilter</span><span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">g</span>.<span class="pl-smi">magFilter</span>,Ef));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">anisotropy</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">anisotropy</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">anisotropy</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">g</span>.<span class="pl-smi">flipY</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">flipY</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">flipY</span>);d[<span class="pl-smi">g</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>h}<span class="pl-k">return</span> d},<span class="pl-en">parseObject</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b[a]<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ObjectLoader: Undefined geometry<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="LC773" class="blob-code blob-code-inner js-file-line">a);<span class="pl-k">return</span> b[a]}function e(a){if(void 0!==a){if(Array.isArray(a)){for(var b=[],d=0,e=a.length;d&lt;e;d++){var f=a[d];void 0===c[f]&amp;&amp;console.warn(&quot;THREE.ObjectLoader: Undefined material&quot;,f);b.push(c[f])}return b}void 0===c[a]&amp;&amp;console.warn(&quot;THREE.ObjectLoader: Undefined material&quot;,a);return c[a]}}switch(a.type){case &quot;Scene&quot;:var f=new vd;void 0!==a.background&amp;&amp;Number.isInteger(a.background)&amp;&amp;(f.background=new G(a.background));void 0!==a.fog&amp;&amp;(&quot;Fog&quot;===a.fog.type?f.fog=new Wb(a.fog.color,a.fog.near,a.fog.far):</td>
      </tr>
      <tr>
        <td id="L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="LC774" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>FogExp2<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">fog</span>.<span class="pl-c1">type</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">fog</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Vb</span>(<span class="pl-smi">a</span>.<span class="pl-smi">fog</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-smi">fog</span>.<span class="pl-smi">density</span>)));<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>PerspectiveCamera<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Z</span>(<span class="pl-smi">a</span>.<span class="pl-smi">fov</span>,<span class="pl-smi">a</span>.<span class="pl-smi">aspect</span>,<span class="pl-smi">a</span>.<span class="pl-smi">near</span>,<span class="pl-smi">a</span>.<span class="pl-smi">far</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">focus</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">focus</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">focus</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">zoom</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">zoom</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">zoom</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">filmGauge</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">filmGauge</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">filmGauge</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">filmOffset</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">filmOffset</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">filmOffset</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">view</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">view</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({},<span class="pl-smi">a</span>.<span class="pl-smi">view</span>));<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>OrthographicCamera<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Mb</span>(<span class="pl-smi">a</span>.<span class="pl-c1">left</span>,<span class="pl-smi">a</span>.<span class="pl-c1">right</span>,<span class="pl-smi">a</span>.<span class="pl-c1">top</span>,<span class="pl-smi">a</span>.<span class="pl-c1">bottom</span>,<span class="pl-smi">a</span>.<span class="pl-smi">near</span>,<span class="pl-smi">a</span>.<span class="pl-smi">far</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">zoom</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">zoom</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">zoom</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">view</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">view</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>({},</td>
      </tr>
      <tr>
        <td id="L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="LC775" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">view</span>));<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>AmbientLight<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Hd</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-smi">intensity</span>);<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>DirectionalLight<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Gd</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-smi">intensity</span>);<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>PointLight<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ed</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-smi">intensity</span>,<span class="pl-smi">a</span>.<span class="pl-smi">distance</span>,<span class="pl-smi">a</span>.<span class="pl-smi">decay</span>);<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>RectAreaLight<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Id</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-smi">intensity</span>,<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>SpotLight<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Dd</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-smi">intensity</span>,<span class="pl-smi">a</span>.<span class="pl-smi">distance</span>,<span class="pl-smi">a</span>.<span class="pl-smi">angle</span>,<span class="pl-smi">a</span>.<span class="pl-smi">penumbra</span>,<span class="pl-smi">a</span>.<span class="pl-smi">decay</span>);<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>HemisphereLight<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Bd</span>(<span class="pl-smi">a</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-smi">groundColor</span>,<span class="pl-smi">a</span>.<span class="pl-smi">intensity</span>);<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>SkinnedMesh<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="LC776" class="blob-code blob-code-inner js-file-line">case <span class="pl-s"><span class="pl-pds">&quot;</span>Mesh<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-smi">a</span>.<span class="pl-smi">material</span>);f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">bones</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">bones</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">xd</span>(f,g)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">va</span>(f,g);<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>LOD<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Jc</span>;<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>Line<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">wa</span>(<span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>),<span class="pl-en">e</span>(<span class="pl-smi">a</span>.<span class="pl-smi">material</span>),<span class="pl-smi">a</span>.<span class="pl-smi">mode</span>);<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>LineLoop<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">yd</span>(<span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>),<span class="pl-en">e</span>(<span class="pl-smi">a</span>.<span class="pl-smi">material</span>));<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>LineSegments<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Y</span>(<span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>),<span class="pl-en">e</span>(<span class="pl-smi">a</span>.<span class="pl-smi">material</span>));<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>PointCloud<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>case <span class="pl-s"><span class="pl-pds">&quot;</span>Points<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Xb</span>(<span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>),<span class="pl-en">e</span>(<span class="pl-smi">a</span>.<span class="pl-smi">material</span>));<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>Sprite<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ic</span>(<span class="pl-en">e</span>(<span class="pl-smi">a</span>.<span class="pl-smi">material</span>));<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>Group<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ub</span>;<span class="pl-k">break</span>;default<span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">H</span>}<span class="pl-smi">f</span>.<span class="pl-smi">uuid</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">uuid</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="LC777" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">matrix</span><span class="pl-k">?</span>(<span class="pl-smi">f</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">matrix</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">matrixAutoUpdate</span>),<span class="pl-smi">f</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">matrix</span>.<span class="pl-en">decompose</span>(<span class="pl-smi">f</span>.<span class="pl-smi">position</span>,<span class="pl-smi">f</span>.<span class="pl-smi">quaternion</span>,<span class="pl-smi">f</span>.<span class="pl-smi">scale</span>))<span class="pl-k">:</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">position</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">position</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">rotation</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">rotation</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">rotation</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">quaternion</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">quaternion</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">scale</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">scale</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">scale</span>));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">castShadow</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">castShadow</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">castShadow</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">receiveShadow</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="LC778" class="blob-code blob-code-inner js-file-line">(<span class="pl-smi">f</span>.<span class="pl-smi">receiveShadow</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">receiveShadow</span>);<span class="pl-smi">a</span>.<span class="pl-smi">shadow</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">bias</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">bias</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">bias</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">radius</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">radius</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">mapSize</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">mapSize</span>.<span class="pl-en">fromArray</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">mapSize</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">camera</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">camera</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">parseObject</span>(<span class="pl-smi">a</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">camera</span>)));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">visible</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">visible</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">frustumCulled</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">frustumCulled</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">frustumCulled</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">renderOrder</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">renderOrder</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">userData</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">userData</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">userData</span>);</td>
      </tr>
      <tr>
        <td id="L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="LC779" class="blob-code blob-code-inner js-file-line"><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">layers</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-c1">layers</span>.<span class="pl-smi">mask</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">layers</span>);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">children</span>){g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">children</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>)<span class="pl-smi">f</span>.<span class="pl-c1">add</span>(<span class="pl-c1">this</span>.<span class="pl-en">parseObject</span>(g[h],b,c))}<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>LOD<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span>)<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">levels</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>){h<span class="pl-k">=</span>a[g];<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">getObjectByProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>uuid<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">h</span>.<span class="pl-c1">object</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">addLevel</span>(l,<span class="pl-smi">h</span>.<span class="pl-smi">distance</span>)}<span class="pl-k">return</span> f}});<span class="pl-k">var</span> Wg<span class="pl-k">=</span>{UVMapping<span class="pl-k">:</span><span class="pl-c1">300</span>,CubeReflectionMapping<span class="pl-k">:</span><span class="pl-c1">301</span>,CubeRefractionMapping<span class="pl-k">:</span><span class="pl-c1">302</span>,EquirectangularReflectionMapping<span class="pl-k">:</span><span class="pl-c1">303</span>,EquirectangularRefractionMapping<span class="pl-k">:</span><span class="pl-c1">304</span>,SphericalReflectionMapping<span class="pl-k">:</span><span class="pl-c1">305</span>,CubeUVReflectionMapping<span class="pl-k">:</span><span class="pl-c1">306</span>,</td>
      </tr>
      <tr>
        <td id="L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="LC780" class="blob-code blob-code-inner js-file-line">CubeUVRefractionMapping<span class="pl-k">:</span><span class="pl-c1">307</span>},Df<span class="pl-k">=</span>{RepeatWrapping<span class="pl-k">:</span><span class="pl-c1">1E3</span>,ClampToEdgeWrapping<span class="pl-k">:</span><span class="pl-c1">1001</span>,MirroredRepeatWrapping<span class="pl-k">:</span><span class="pl-c1">1002</span>},Ef<span class="pl-k">=</span>{NearestFilter<span class="pl-k">:</span><span class="pl-c1">1003</span>,NearestMipMapNearestFilter<span class="pl-k">:</span><span class="pl-c1">1004</span>,NearestMipMapLinearFilter<span class="pl-k">:</span><span class="pl-c1">1005</span>,LinearFilter<span class="pl-k">:</span><span class="pl-c1">1006</span>,LinearMipMapNearestFilter<span class="pl-k">:</span><span class="pl-c1">1007</span>,LinearMipMapLinearFilter<span class="pl-k">:</span><span class="pl-c1">1008</span>};<span class="pl-smi">ke</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">constructor</span>:ke,setOptions:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">+</span>a);a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">manager</span>.<span class="pl-en">resolveURL</span>(a);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>,f<span class="pl-k">=</span><span class="pl-smi">Kb</span>.<span class="pl-c1">get</span>(a);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f)<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemStart</span>(a),</td>
      </tr>
      <tr>
        <td id="L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="LC781" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(f);<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a)},<span class="pl-c1">0</span>),f;<span class="pl-en">fetch</span>(a).<span class="pl-c1">then</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">blob</span>()}).<span class="pl-c1">then</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">createImageBitmap</span>(a,<span class="pl-smi">e</span>.<span class="pl-c1">options</span>)}).<span class="pl-c1">then</span>(<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">Kb</span>.<span class="pl-c1">add</span>(a,c);b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(c);<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a)}).<span class="pl-c1">catch</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){d<span class="pl-k">&amp;&amp;</span><span class="pl-en">d</span>(b);<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemEnd</span>(a);<span class="pl-smi">e</span>.<span class="pl-smi">manager</span>.<span class="pl-en">itemError</span>(a)})},<span class="pl-en">setCrossOrigin</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>}};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">le</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">moveTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">currentPath</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Qa</span>;<span class="pl-c1">this</span>.<span class="pl-smi">subPaths</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">currentPath</span>);<span class="pl-c1">this</span>.<span class="pl-smi">currentPath</span>.<span class="pl-c1">moveTo</span>(a,</td>
      </tr>
      <tr>
        <td id="L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="LC782" class="blob-code blob-code-inner js-file-line">b)},<span class="pl-en">lineTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">currentPath</span>.<span class="pl-en">lineTo</span>(a,b)},<span class="pl-en">quadraticCurveTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">currentPath</span>.<span class="pl-en">quadraticCurveTo</span>(a,b,c,d)},<span class="pl-en">bezierCurveTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-c1">this</span>.<span class="pl-smi">currentPath</span>.<span class="pl-en">bezierCurveTo</span>(a,b,c,d,e,f)},<span class="pl-en">splineThru</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">currentPath</span>.<span class="pl-en">splineThru</span>(a)},<span class="pl-en">toShapes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>a[c],f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">jb</span>;<span class="pl-smi">f</span>.<span class="pl-smi">curves</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">curves</span>;<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(f)}<span class="pl-k">return</span> b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f&lt;c;e=f++){var g=b[e],h=b[f],l=h.x-g.x,k=h.y-g.y;if(Math.abs(k)&gt;</td>
      </tr>
      <tr>
        <td id="L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="LC783" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Number</span>.<span class="pl-c1">EPSILON</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>k<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>b[f],l<span class="pl-k">=</span><span class="pl-k">-</span>l,h<span class="pl-k">=</span>b[e],k<span class="pl-k">=</span><span class="pl-k">-</span>k),<span class="pl-k">!</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span><span class="pl-smi">h</span>.<span class="pl-c1">y</span>))<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-c1">x</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span>{e<span class="pl-k">=</span>k<span class="pl-k">*</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-c1">x</span>)<span class="pl-k">-</span>l<span class="pl-k">*</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;</span>e<span class="pl-k">||</span>(d<span class="pl-k">=</span><span class="pl-k">!</span>d)}}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-smi">g</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-smi">h</span>.<span class="pl-c1">x</span>))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">return</span> d}<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">$a</span>.<span class="pl-smi">isClockWise</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">subPaths</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span>[];<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-en">c</span>(f);b<span class="pl-k">=</span>[];<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>f[<span class="pl-c1">0</span>];<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">jb</span>;<span class="pl-smi">h</span>.<span class="pl-smi">curves</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">curves</span>;<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(h);<span class="pl-k">return</span> b}<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-en">e</span>(f[<span class="pl-c1">0</span>].<span class="pl-en">getPoints</span>());l<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-k">!</span>l<span class="pl-k">:</span>l;h<span class="pl-k">=</span>[];<span class="pl-k">var</span> k<span class="pl-k">=</span>[],p<span class="pl-k">=</span>[],n<span class="pl-k">=</span><span class="pl-c1">0</span>;k[n]<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;p[n]<span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> t<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="LC784" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;t<span class="pl-k">&lt;</span>q;t<span class="pl-k">++</span>){g<span class="pl-k">=</span>f[t];<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getPoints</span>();<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-en">e</span>(r);(u<span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-k">!</span>u<span class="pl-k">:</span>u)<span class="pl-k">?</span>(<span class="pl-k">!</span>l<span class="pl-k">&amp;&amp;</span>k[n]<span class="pl-k">&amp;&amp;</span>n<span class="pl-k">++</span>,k[n]<span class="pl-k">=</span>{s<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">jb</span>,p<span class="pl-k">:</span>r},k[n].<span class="pl-smi">s</span>.<span class="pl-smi">curves</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">curves</span>,l<span class="pl-k">&amp;&amp;</span>n<span class="pl-k">++</span>,p[n]<span class="pl-k">=</span>[])<span class="pl-k">:</span>p[n].<span class="pl-c1">push</span>({h<span class="pl-k">:</span>g,p<span class="pl-k">:</span>r[<span class="pl-c1">0</span>]})}<span class="pl-k">if</span>(<span class="pl-k">!</span>k[<span class="pl-c1">0</span>])<span class="pl-k">return</span> <span class="pl-en">c</span>(f);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>){t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;a<span class="pl-k">=</span>[];e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">++</span>)h[e]<span class="pl-k">=</span>[];e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>;e<span class="pl-k">&lt;</span>f;e<span class="pl-k">++</span>)<span class="pl-k">for</span>(g<span class="pl-k">=</span>p[e],u<span class="pl-k">=</span><span class="pl-c1">0</span>;u<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;u<span class="pl-k">++</span>){l<span class="pl-k">=</span>g[u];n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>)<span class="pl-en">d</span>(<span class="pl-smi">l</span>.<span class="pl-smi">p</span>,k[r].<span class="pl-smi">p</span>)<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">!==</span>r<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>({froms<span class="pl-k">:</span>e,tos<span class="pl-k">:</span>r,hole<span class="pl-k">:</span>u}),n<span class="pl-k">?</span>(n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,h[r].<span class="pl-c1">push</span>(l))<span class="pl-k">:</span>t<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);n<span class="pl-k">&amp;&amp;</span>h[e].<span class="pl-c1">push</span>(l)}<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(t<span class="pl-k">||</span>(p<span class="pl-k">=</span>h))}t<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>;t<span class="pl-k">&lt;</span>e;t<span class="pl-k">++</span>)<span class="pl-k">for</span>(h<span class="pl-k">=</span>k[t].<span class="pl-smi">s</span>,</td>
      </tr>
      <tr>
        <td id="L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="LC785" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(h),a<span class="pl-k">=</span>p[t],f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>)<span class="pl-smi">h</span>.<span class="pl-smi">holes</span>.<span class="pl-c1">push</span>(a[f].<span class="pl-smi">h</span>);<span class="pl-k">return</span> b}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">me</span>.<span class="pl-c1">prototype</span>,{isFont<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">generateShapes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">100</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d<span class="pl-k">=</span>b;b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-smi">from</span><span class="pl-k">?</span><span class="pl-c1">Array</span>.<span class="pl-en">from</span>(a)<span class="pl-k">:</span><span class="pl-c1">String</span>(a).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);d<span class="pl-k">/=</span><span class="pl-smi">b</span>.<span class="pl-smi">resolution</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span>(<span class="pl-smi">b</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-smi">yMax</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">boundingBox</span>.<span class="pl-smi">yMin</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">underlineThickness</span>)<span class="pl-k">*</span>d;a<span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;l<span class="pl-k">++</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>e[l];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>k)g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">-=</span>f;<span class="pl-k">else</span>{<span class="pl-k">var</span> p<span class="pl-k">=</span>d;<span class="pl-k">var</span> n<span class="pl-k">=</span>g,t<span class="pl-k">=</span>h;<span class="pl-k">if</span>(k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">glyphs</span>[k]<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">glyphs</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>?<span class="pl-pds">&quot;</span></span>]){<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">le</span>;<span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-smi">o</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">_cachedOutline</span><span class="pl-k">||</span>(<span class="pl-smi">k</span>.<span class="pl-smi">_cachedOutline</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="LC786" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-smi">o</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)),u<span class="pl-k">=</span><span class="pl-c1">0</span>,y<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>;u<span class="pl-k">&lt;</span>y;)<span class="pl-k">switch</span>(r[u<span class="pl-k">++</span>]){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>:<span class="pl-k">var</span> w<span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>n;<span class="pl-k">var</span> x<span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>t;<span class="pl-smi">q</span>.<span class="pl-c1">moveTo</span>(w,x);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>l<span class="pl-pds">&quot;</span></span>:w<span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>n;x<span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>t;<span class="pl-smi">q</span>.<span class="pl-en">lineTo</span>(w,x);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>q<span class="pl-pds">&quot;</span></span>:<span class="pl-k">var</span> z<span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>n;<span class="pl-k">var</span> <span class="pl-c1">B</span><span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>t;<span class="pl-k">var</span> <span class="pl-c1">D</span><span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>n;<span class="pl-k">var</span> <span class="pl-c1">E</span><span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>t;<span class="pl-smi">q</span>.<span class="pl-en">quadraticCurveTo</span>(<span class="pl-c1">D</span>,<span class="pl-c1">E</span>,z,<span class="pl-c1">B</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>b<span class="pl-pds">&quot;</span></span>:z<span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>n,<span class="pl-c1">B</span><span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>t,<span class="pl-c1">D</span><span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>n,<span class="pl-c1">E</span><span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>t,w<span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>n,x<span class="pl-k">=</span>r[u<span class="pl-k">++</span>]<span class="pl-k">*</span>p<span class="pl-k">+</span>t,<span class="pl-smi">q</span>.<span class="pl-en">bezierCurveTo</span>(<span class="pl-c1">D</span>,<span class="pl-c1">E</span>,w,x,z,<span class="pl-c1">B</span>)}p<span class="pl-k">=</span>{offsetX<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-smi">ha</span><span class="pl-k">*</span>p,path<span class="pl-k">:</span>q}}<span class="pl-k">else</span> p<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;g<span class="pl-k">+=</span><span class="pl-smi">p</span>.<span class="pl-smi">offsetX</span>;<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-smi">p</span>.<span class="pl-smi">path</span>)}}b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>e;b<span class="pl-k">++</span>)<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">push</span>.<span class="pl-c1">apply</span>(c,</td>
      </tr>
      <tr>
        <td id="L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="LC787" class="blob-code blob-code-inner js-file-line">a[b].<span class="pl-en">toShapes</span>());<span class="pl-k">return</span> c}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-k">of</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>,f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">La</span>(<span class="pl-c1">this</span>.<span class="pl-smi">manager</span>);<span class="pl-smi">f</span>.<span class="pl-en">setPath</span>(<span class="pl-c1">this</span>.<span class="pl-smi">path</span>);<span class="pl-smi">f</span>.<span class="pl-c1">load</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(a)}<span class="pl-k">catch</span>(l){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(<span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">65</span>,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">2</span>))}a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">parse</span>(c);b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(a)},c,d)},<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">me</span>(a)},<span class="pl-en">setPath</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-k">var</span> Ud,pe<span class="pl-k">=</span>{<span class="pl-en">getContext</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>Ud<span class="pl-k">&amp;&amp;</span>(Ud<span class="pl-k">=</span><span class="pl-k">new</span> (<span class="pl-c1">window</span>.<span class="pl-smi">AudioContext</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="LC788" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">window</span>.<span class="pl-smi">webkitAudioContext</span>));<span class="pl-k">return</span> Ud},<span class="pl-en">setContext</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){Ud<span class="pl-k">=</span>a}};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ne</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">La</span>(<span class="pl-c1">this</span>.<span class="pl-smi">manager</span>);<span class="pl-smi">e</span>.<span class="pl-en">setResponseType</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>arraybuffer<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">e</span>.<span class="pl-c1">load</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);<span class="pl-smi">pe</span>.<span class="pl-c1">getContext</span>().<span class="pl-en">decodeAudioData</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">b</span>(a)})},c,d)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">pf</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b,c,d,e,f,g,h,l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>,k<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">m</span>){<span class="pl-k">if</span>(a<span class="pl-k">!==</span><span class="pl-c1">this</span><span class="pl-k">||</span>b<span class="pl-k">!==</span><span class="pl-smi">m</span>.<span class="pl-smi">focus</span><span class="pl-k">||</span>c<span class="pl-k">!==</span><span class="pl-smi">m</span>.<span class="pl-smi">fov</span><span class="pl-k">||</span>d<span class="pl-k">!==</span><span class="pl-smi">m</span>.<span class="pl-smi">aspect</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">aspect</span><span class="pl-k">||</span>e<span class="pl-k">!==</span><span class="pl-smi">m</span>.<span class="pl-smi">near</span><span class="pl-k">||</span>f<span class="pl-k">!==</span><span class="pl-smi">m</span>.<span class="pl-smi">far</span><span class="pl-k">||</span>g<span class="pl-k">!==</span><span class="pl-smi">m</span>.<span class="pl-smi">zoom</span><span class="pl-k">||</span>h<span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">eyeSep</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>;b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="LC789" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">m</span>.<span class="pl-smi">focus</span>;c<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">fov</span>;d<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">aspect</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">aspect</span>;e<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">near</span>;f<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">far</span>;g<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">zoom</span>;<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">clone</span>();h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">eyeSep</span><span class="pl-k">/</span><span class="pl-c1">2</span>;<span class="pl-k">var</span> p<span class="pl-k">=</span>h<span class="pl-k">*</span>e<span class="pl-k">/</span>b,q<span class="pl-k">=</span>e<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">tan</span>(<span class="pl-c1">J</span>.<span class="pl-c1">DEG2RAD</span><span class="pl-k">*</span>c<span class="pl-k">*</span><span class="pl-c1">.5</span>)<span class="pl-k">/</span>g;<span class="pl-smi">k</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">12</span>]<span class="pl-k">=</span><span class="pl-k">-</span>h;<span class="pl-smi">l</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">12</span>]<span class="pl-k">=</span>h;<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-k">-</span>q<span class="pl-k">*</span>d<span class="pl-k">+</span>p;<span class="pl-k">var</span> v<span class="pl-k">=</span>q<span class="pl-k">*</span>d<span class="pl-k">+</span>p;<span class="pl-smi">n</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">/</span>(v<span class="pl-k">-</span>r);<span class="pl-smi">n</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">8</span>]<span class="pl-k">=</span>(v<span class="pl-k">+</span>r)<span class="pl-k">/</span>(v<span class="pl-k">-</span>r);<span class="pl-c1">this</span>.<span class="pl-smi">cameraL</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">copy</span>(n);r<span class="pl-k">=</span><span class="pl-k">-</span>q<span class="pl-k">*</span>d<span class="pl-k">-</span>p;v<span class="pl-k">=</span>q<span class="pl-k">*</span>d<span class="pl-k">-</span>p;<span class="pl-smi">n</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">/</span>(v<span class="pl-k">-</span>r);<span class="pl-smi">n</span>.<span class="pl-c1">elements</span>[<span class="pl-c1">8</span>]<span class="pl-k">=</span>(v<span class="pl-k">+</span>r)<span class="pl-k">/</span>(v<span class="pl-k">-</span>r);<span class="pl-c1">this</span>.<span class="pl-smi">cameraR</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">copy</span>(n)}<span class="pl-c1">this</span>.<span class="pl-smi">cameraL</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">copy</span>(<span class="pl-smi">m</span>.<span class="pl-smi">matrixWorld</span>).<span class="pl-en">multiply</span>(k);<span class="pl-c1">this</span>.<span class="pl-smi">cameraR</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">copy</span>(<span class="pl-smi">m</span>.<span class="pl-smi">matrixWorld</span>).<span class="pl-en">multiply</span>(l)}}()});</td>
      </tr>
      <tr>
        <td id="L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="LC790" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">kd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">kd</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>kd;<span class="pl-smi">oe</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:oe,getInput:<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">gain</span>},<span class="pl-en">removeFilter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">filter</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">gain</span>.<span class="pl-c1">disconnect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">filter</span>),<span class="pl-c1">this</span>.<span class="pl-smi">filter</span>.<span class="pl-c1">disconnect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">destination</span>),<span class="pl-c1">this</span>.<span class="pl-smi">gain</span>.<span class="pl-en">connect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">destination</span>),<span class="pl-c1">this</span>.<span class="pl-smi">filter</span><span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getFilter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">filter</span>},<span class="pl-en">setFilter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">null</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">filter</span><span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">gain</span>.<span class="pl-c1">disconnect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">filter</span>),<span class="pl-c1">this</span>.<span class="pl-smi">filter</span>.<span class="pl-c1">disconnect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">destination</span>))<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="LC791" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">gain</span>.<span class="pl-c1">disconnect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">destination</span>);<span class="pl-c1">this</span>.<span class="pl-smi">filter</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">gain</span>.<span class="pl-en">connect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">filter</span>);<span class="pl-c1">this</span>.<span class="pl-smi">filter</span>.<span class="pl-en">connect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">destination</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getMasterVolume</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">gain</span>.<span class="pl-smi">gain</span>.<span class="pl-c1">value</span>},<span class="pl-en">setMasterVolume</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">gain</span>.<span class="pl-smi">gain</span>.<span class="pl-en">setTargetAtTime</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>,<span class="pl-c1">.01</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">updateMatrixWorld</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">updateMatrixWorld</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,e);e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">listener</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">up</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">decompose</span>(a,</td>
      </tr>
      <tr>
        <td id="L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="LC792" class="blob-code blob-code-inner js-file-line">b,c);<span class="pl-smi">d</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>).<span class="pl-en">applyQuaternion</span>(b);<span class="pl-smi">e</span>.<span class="pl-smi">positionX</span><span class="pl-k">?</span>(<span class="pl-smi">e</span>.<span class="pl-smi">positionX</span>.<span class="pl-en">setValueAtTime</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>),<span class="pl-smi">e</span>.<span class="pl-smi">positionY</span>.<span class="pl-en">setValueAtTime</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>),<span class="pl-smi">e</span>.<span class="pl-smi">positionZ</span>.<span class="pl-en">setValueAtTime</span>(<span class="pl-smi">a</span>.<span class="pl-c1">z</span>,<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>),<span class="pl-smi">e</span>.<span class="pl-smi">forwardX</span>.<span class="pl-en">setValueAtTime</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>),<span class="pl-smi">e</span>.<span class="pl-smi">forwardY</span>.<span class="pl-en">setValueAtTime</span>(<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>),<span class="pl-smi">e</span>.<span class="pl-smi">forwardZ</span>.<span class="pl-en">setValueAtTime</span>(<span class="pl-smi">d</span>.<span class="pl-c1">z</span>,<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>),<span class="pl-smi">e</span>.<span class="pl-smi">upX</span>.<span class="pl-en">setValueAtTime</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span>,<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>),<span class="pl-smi">e</span>.<span class="pl-smi">upY</span>.<span class="pl-en">setValueAtTime</span>(<span class="pl-smi">f</span>.<span class="pl-c1">y</span>,<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>),<span class="pl-smi">e</span>.<span class="pl-smi">upZ</span>.<span class="pl-en">setValueAtTime</span>(<span class="pl-smi">f</span>.<span class="pl-c1">z</span>,</td>
      </tr>
      <tr>
        <td id="L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="LC793" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>))<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-en">setPosition</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>),<span class="pl-smi">e</span>.<span class="pl-en">setOrientation</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">z</span>,<span class="pl-smi">f</span>.<span class="pl-c1">x</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span>,<span class="pl-smi">f</span>.<span class="pl-c1">z</span>))}}()});<span class="pl-smi">qc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:qc,getOutput:<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">gain</span>},<span class="pl-en">setNodeSource</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">hasPlaybackControl</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">sourceType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>audioNode<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-c1">source</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">connect</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setMediaElementSource</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">hasPlaybackControl</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">sourceType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>mediaNode<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-c1">source</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-en">createMediaElementSource</span>(a);<span class="pl-c1">this</span>.<span class="pl-en">connect</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="LC794" class="blob-code blob-code-inner js-file-line"><span class="pl-en">setBuffer</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">buffer</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">sourceType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>buffer<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">autoplay</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">play</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">play</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">isPlaying</span>)<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Audio: Audio is already playing.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">hasPlaybackControl</span>)<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Audio: this Audio has no playback control.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span>{<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-en">createBufferSource</span>();<span class="pl-smi">a</span>.<span class="pl-smi">buffer</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">buffer</span>;<span class="pl-smi">a</span>.<span class="pl-smi">loop</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">loop</span>;<span class="pl-smi">a</span>.<span class="pl-smi">onended</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">onEnded</span>.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">playbackRate</span>.<span class="pl-en">setValueAtTime</span>(<span class="pl-c1">this</span>.<span class="pl-smi">playbackRate</span>,<span class="pl-c1">this</span>.<span class="pl-smi">startTime</span>);<span class="pl-c1">this</span>.<span class="pl-smi">startTime</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>;</td>
      </tr>
      <tr>
        <td id="L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="LC795" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">start</span>(<span class="pl-c1">this</span>.<span class="pl-smi">startTime</span>,<span class="pl-c1">this</span>.<span class="pl-smi">offset</span>);<span class="pl-c1">this</span>.<span class="pl-smi">isPlaying</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">source</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">connect</span>()}},<span class="pl-en">pause</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">hasPlaybackControl</span>)<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Audio: this Audio has no playback control.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">isPlaying</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-c1">source</span>.<span class="pl-c1">stop</span>(),<span class="pl-c1">this</span>.<span class="pl-smi">offset</span><span class="pl-k">+=</span>(<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">startTime</span>)<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">playbackRate</span>,<span class="pl-c1">this</span>.<span class="pl-smi">isPlaying</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-c1">this</span>},<span class="pl-en">stop</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">hasPlaybackControl</span>)<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Audio: this Audio has no playback control.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">source</span>.<span class="pl-c1">stop</span>(),<span class="pl-c1">this</span>.<span class="pl-smi">offset</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="LC796" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">isPlaying</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">this</span>},<span class="pl-en">connect</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">filters</span>.<span class="pl-c1">length</span>){<span class="pl-c1">this</span>.<span class="pl-c1">source</span>.<span class="pl-en">connect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">filters</span>[<span class="pl-c1">0</span>]);<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">filters</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>b;a<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">filters</span>[a<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-en">connect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">filters</span>[a]);<span class="pl-c1">this</span>.<span class="pl-smi">filters</span>[<span class="pl-c1">this</span>.<span class="pl-smi">filters</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-en">connect</span>(<span class="pl-c1">this</span>.<span class="pl-en">getOutput</span>())}<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-c1">source</span>.<span class="pl-en">connect</span>(<span class="pl-c1">this</span>.<span class="pl-en">getOutput</span>());<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">disconnect</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">filters</span>.<span class="pl-c1">length</span>){<span class="pl-c1">this</span>.<span class="pl-c1">source</span>.<span class="pl-c1">disconnect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">filters</span>[<span class="pl-c1">0</span>]);<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">filters</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>b;a<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">filters</span>[a<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-c1">disconnect</span>(<span class="pl-c1">this</span>.<span class="pl-smi">filters</span>[a]);<span class="pl-c1">this</span>.<span class="pl-smi">filters</span>[<span class="pl-c1">this</span>.<span class="pl-smi">filters</span>.<span class="pl-c1">length</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="LC797" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>].<span class="pl-c1">disconnect</span>(<span class="pl-c1">this</span>.<span class="pl-en">getOutput</span>())}<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-c1">source</span>.<span class="pl-c1">disconnect</span>(<span class="pl-c1">this</span>.<span class="pl-en">getOutput</span>());<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getFilters</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">filters</span>},<span class="pl-en">setFilters</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">||</span>(a<span class="pl-k">=</span>[]);<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">isPlaying</span><span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-c1">disconnect</span>(),<span class="pl-c1">this</span>.<span class="pl-smi">filters</span><span class="pl-k">=</span>a,<span class="pl-c1">this</span>.<span class="pl-en">connect</span>())<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">filters</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getFilter</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getFilters</span>()[<span class="pl-c1">0</span>]},<span class="pl-en">setFilter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">setFilters</span>(a<span class="pl-k">?</span>[a]<span class="pl-k">:</span>[])},<span class="pl-en">setPlaybackRate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">hasPlaybackControl</span>)<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Audio: this Audio has no playback control.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">playbackRate</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="LC798" class="blob-code blob-code-inner js-file-line">a,<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">isPlaying</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">source</span>.<span class="pl-smi">playbackRate</span>.<span class="pl-en">setValueAtTime</span>(<span class="pl-c1">this</span>.<span class="pl-smi">playbackRate</span>,<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>),<span class="pl-c1">this</span>},<span class="pl-en">getPlaybackRate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">playbackRate</span>},<span class="pl-en">onEnded</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">isPlaying</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">getLoop</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">hasPlaybackControl</span><span class="pl-k">?</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Audio: this Audio has no playback control.<span class="pl-pds">&quot;</span></span>),<span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">loop</span>},<span class="pl-en">setLoop</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">hasPlaybackControl</span>)<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Audio: this Audio has no playback control.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">loop</span><span class="pl-k">=</span>a,<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">isPlaying</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="LC799" class="blob-code blob-code-inner js-file-line">(<span class="pl-c1">this</span>.<span class="pl-c1">source</span>.<span class="pl-smi">loop</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">loop</span>),<span class="pl-c1">this</span>},<span class="pl-en">getVolume</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">gain</span>.<span class="pl-smi">gain</span>.<span class="pl-c1">value</span>},<span class="pl-en">setVolume</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">gain</span>.<span class="pl-smi">gain</span>.<span class="pl-en">setTargetAtTime</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">context</span>.<span class="pl-smi">currentTime</span>,<span class="pl-c1">.01</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">qe</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">qc</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:qe,getOutput:<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">panner</span>},<span class="pl-en">getRefDistance</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">panner</span>.<span class="pl-smi">refDistance</span>},<span class="pl-en">setRefDistance</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">panner</span>.<span class="pl-smi">refDistance</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getRolloffFactor</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">panner</span>.<span class="pl-smi">rolloffFactor</span>},<span class="pl-en">setRolloffFactor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">panner</span>.<span class="pl-smi">rolloffFactor</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="LC800" class="blob-code blob-code-inner js-file-line">a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getDistanceModel</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">panner</span>.<span class="pl-smi">distanceModel</span>},<span class="pl-en">setDistanceModel</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">panner</span>.<span class="pl-smi">distanceModel</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getMaxDistance</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">panner</span>.<span class="pl-smi">maxDistance</span>},<span class="pl-en">setMaxDistance</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">panner</span>.<span class="pl-smi">maxDistance</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setDirectionalCone</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">panner</span>.<span class="pl-smi">coneInnerAngle</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">panner</span>.<span class="pl-smi">coneOuterAngle</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">panner</span>.<span class="pl-smi">coneOuterGain</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">updateMatrixWorld</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ca</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">updateMatrixWorld</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="LC801" class="blob-code blob-code-inner js-file-line">e);e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">panner</span>;<span class="pl-c1">this</span>.<span class="pl-smi">matrixWorld</span>.<span class="pl-en">decompose</span>(a,b,c);<span class="pl-smi">d</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>).<span class="pl-en">applyQuaternion</span>(b);<span class="pl-smi">e</span>.<span class="pl-en">setPosition</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-smi">e</span>.<span class="pl-en">setOrientation</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">z</span>)}}()});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">re</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">getFrequencyData</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">analyser</span>.<span class="pl-en">getByteFrequencyData</span>(<span class="pl-c1">this</span>.<span class="pl-c1">data</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>},<span class="pl-en">getAverageFrequency</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getFrequencyData</span>(),c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)a<span class="pl-k">+=</span>b[c];<span class="pl-k">return</span> a<span class="pl-k">/</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">se</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">accumulate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">buffer</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">valueSize</span>;a<span class="pl-k">=</span>a<span class="pl-k">*</span>d<span class="pl-k">+</span>d;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">cumulativeWeight</span>;</td>
      </tr>
      <tr>
        <td id="L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="LC802" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>e){<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">!==</span>d;<span class="pl-k">++</span>e)c[a<span class="pl-k">+</span>e]<span class="pl-k">=</span>c[e];e<span class="pl-k">=</span>b}<span class="pl-k">else</span> e<span class="pl-k">+=</span>b,<span class="pl-c1">this</span>.<span class="pl-en">_mixBufferRegion</span>(c,a,<span class="pl-c1">0</span>,b<span class="pl-k">/</span>e,d);<span class="pl-c1">this</span>.<span class="pl-smi">cumulativeWeight</span><span class="pl-k">=</span>e},<span class="pl-en">apply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">valueSize</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">buffer</span>;a<span class="pl-k">=</span>a<span class="pl-k">*</span>b<span class="pl-k">+</span>b;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">cumulativeWeight</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">binding</span>;<span class="pl-c1">this</span>.<span class="pl-smi">cumulativeWeight</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">1</span><span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">_mixBufferRegion</span>(c,a,<span class="pl-c1">3</span><span class="pl-k">*</span>b,<span class="pl-c1">1</span><span class="pl-k">-</span>d,b);d<span class="pl-k">=</span>b;<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span>b<span class="pl-k">+</span>b;d<span class="pl-k">!==</span>f;<span class="pl-k">++</span>d)<span class="pl-k">if</span>(c[d]<span class="pl-k">!==</span>c[d<span class="pl-k">+</span>b]){<span class="pl-smi">e</span>.<span class="pl-en">setValue</span>(c,a);<span class="pl-k">break</span>}},<span class="pl-en">saveOriginalState</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">buffer</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">valueSize</span>,c<span class="pl-k">=</span><span class="pl-c1">3</span><span class="pl-k">*</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">binding</span>.<span class="pl-en">getValue</span>(a,c);<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span>b;d<span class="pl-k">!==</span>c;<span class="pl-k">++</span>d)a[d]<span class="pl-k">=</span>a[c<span class="pl-k">+</span>d<span class="pl-k">%</span>b];<span class="pl-c1">this</span>.<span class="pl-smi">cumulativeWeight</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="LC803" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>},<span class="pl-en">restoreOriginalState</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">binding</span>.<span class="pl-en">setValue</span>(<span class="pl-c1">this</span>.<span class="pl-smi">buffer</span>,<span class="pl-c1">3</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">valueSize</span>)},<span class="pl-en">_select</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-c1">.5</span><span class="pl-k">&lt;=</span>d)<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">!==</span>e;<span class="pl-k">++</span>d)a[b<span class="pl-k">+</span>d]<span class="pl-k">=</span>a[c<span class="pl-k">+</span>d]},<span class="pl-en">_slerp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-smi">ca</span>.<span class="pl-en">slerpFlat</span>(a,b,a,b,a,c,d)},<span class="pl-en">_lerp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span>d,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">!==</span>e;<span class="pl-k">++</span>g){<span class="pl-k">var</span> h<span class="pl-k">=</span>b<span class="pl-k">+</span>g;a[h]<span class="pl-k">=</span>a[h]<span class="pl-k">*</span>f<span class="pl-k">+</span>a[c<span class="pl-k">+</span>g]<span class="pl-k">*</span>d}}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">qf</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">getValue</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-en">bind</span>();<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_targetGroup</span>.<span class="pl-smi">nCachedObjects_</span>];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-en">getValue</span>(a,b)},<span class="pl-en">setValue</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_targetGroup</span>.<span class="pl-smi">nCachedObjects_</span>,</td>
      </tr>
      <tr>
        <td id="L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="LC804" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">!==</span>e;<span class="pl-k">++</span>d)c[d].<span class="pl-en">setValue</span>(a,b)},<span class="pl-en">bind</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_targetGroup</span>.<span class="pl-smi">nCachedObjects_</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">!==</span>c;<span class="pl-k">++</span>b)a[b].<span class="pl-en">bind</span>()},<span class="pl-en">unbind</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_targetGroup</span>.<span class="pl-smi">nCachedObjects_</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">!==</span>c;<span class="pl-k">++</span>b)a[b].<span class="pl-en">unbind</span>()}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(ra,{Composite<span class="pl-k">:</span>qf,<span class="pl-en">create</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">isAnimationObjectGroup</span><span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">ra.Composite</span>(a,b,c)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">ra</span>(a,b,c)},<span class="pl-en">sanitizeNodeName</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-cce">\[\]\.</span>:<span class="pl-cce">\/</span>]</span><span class="pl-pds">/</span>g</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(a,</td>
      </tr>
      <tr>
        <td id="L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="LC805" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}}(),<span class="pl-en">parseTrackName</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>[^<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>[<span class="pl-cce">\\</span>]<span class="pl-cce">\\</span>.:<span class="pl-cce">\\</span>/<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>.<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>((?:WC<span class="pl-k">+</span><span class="pl-c1">[<span class="pl-cce">\/</span>:]</span>)<span class="pl-k">*</span>)<span class="pl-pds">/</span></span>.<span class="pl-c1">source</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WC<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>[^<span class="pl-cce">\\</span>[<span class="pl-cce">\\</span>]<span class="pl-cce">\\</span>.:<span class="pl-cce">\\</span>/]<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(WCOD<span class="pl-k">+</span>)<span class="pl-k">?</span><span class="pl-pds">/</span></span>.<span class="pl-c1">source</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WCOD<span class="pl-pds">&quot;</span></span>,a);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(?:<span class="pl-cce">\.</span>(WC<span class="pl-k">+</span>)(?:<span class="pl-cce">\[</span>(<span class="pl-c1">.</span><span class="pl-k">+</span>)<span class="pl-cce">\]</span>)<span class="pl-k">?</span>)<span class="pl-k">?</span><span class="pl-pds">/</span></span>.<span class="pl-c1">source</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WC<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>[^<span class="pl-cce">\\</span>[<span class="pl-cce">\\</span>]<span class="pl-cce">\\</span>.:<span class="pl-cce">\\</span>/]<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\.</span>(WC<span class="pl-k">+</span>)(?:<span class="pl-cce">\[</span>(<span class="pl-c1">.</span><span class="pl-k">+</span>)<span class="pl-cce">\]</span>)<span class="pl-k">?</span><span class="pl-pds">/</span></span>.<span class="pl-c1">source</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WC<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>[^<span class="pl-cce">\\</span>[<span class="pl-cce">\\</span>]<span class="pl-cce">\\</span>.:<span class="pl-cce">\\</span>/]<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>^<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span>a<span class="pl-k">+</span>c<span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>material<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>materials<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bones<span class="pl-pds">&quot;</span></span>];<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">exec</span>(a);<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>PropertyBinding: Cannot parse trackName: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);b<span class="pl-k">=</span>{nodeName<span class="pl-k">:</span>b[<span class="pl-c1">2</span>],</td>
      </tr>
      <tr>
        <td id="L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="LC806" class="blob-code blob-code-inner js-file-line">objectName<span class="pl-k">:</span>b[<span class="pl-c1">3</span>],objectIndex<span class="pl-k">:</span>b[<span class="pl-c1">4</span>],propertyName<span class="pl-k">:</span>b[<span class="pl-c1">5</span>],propertyIndex<span class="pl-k">:</span>b[<span class="pl-c1">6</span>]};<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!==</span>c){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">substring</span>(c<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-c1">indexOf</span>(d)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,c),<span class="pl-smi">b</span>.<span class="pl-smi">objectName</span><span class="pl-k">=</span>d)}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">propertyName</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">propertyName</span>.<span class="pl-c1">length</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>PropertyBinding: can not parse propertyName from trackName: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);<span class="pl-k">return</span> b}}(),<span class="pl-en">findNode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>root<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">||</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">===</span>b<span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">uuid</span>)<span class="pl-k">return</span> a;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">skeleton</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="LC807" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">skeleton</span>.<span class="pl-en">getBoneByName</span>(b);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c)<span class="pl-k">return</span> c}<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">children</span>){<span class="pl-k">var</span> <span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>a[c];<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-c1">name</span><span class="pl-k">===</span>b<span class="pl-k">||</span><span class="pl-smi">e</span>.<span class="pl-smi">uuid</span><span class="pl-k">===</span>b<span class="pl-k">||</span>(e<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-smi">e</span>.<span class="pl-smi">children</span>)))<span class="pl-k">return</span> e}<span class="pl-k">return</span> <span class="pl-c1">null</span>};<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-smi">a</span>.<span class="pl-smi">children</span>))<span class="pl-k">return</span> a}<span class="pl-k">return</span> <span class="pl-c1">null</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ra</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">_getValue_unavailable</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},<span class="pl-en">_setValue_unavailable</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},BindingType<span class="pl-k">:</span>{Direct<span class="pl-k">:</span><span class="pl-c1">0</span>,EntireArray<span class="pl-k">:</span><span class="pl-c1">1</span>,ArrayElement<span class="pl-k">:</span><span class="pl-c1">2</span>,HasFromToArray<span class="pl-k">:</span><span class="pl-c1">3</span>},Versioning<span class="pl-k">:</span>{None<span class="pl-k">:</span><span class="pl-c1">0</span>,NeedsUpdate<span class="pl-k">:</span><span class="pl-c1">1</span>,MatrixWorldNeedsUpdate<span class="pl-k">:</span><span class="pl-c1">2</span>},GetterByBindingType<span class="pl-k">:</span>[<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a[b]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">node</span>[<span class="pl-c1">this</span>.<span class="pl-smi">propertyName</span>]},</td>
      </tr>
      <tr>
        <td id="L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="LC808" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">!==</span>e;<span class="pl-k">++</span>d)a[b<span class="pl-k">++</span>]<span class="pl-k">=</span>c[d]},<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a[b]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>[<span class="pl-c1">this</span>.<span class="pl-smi">propertyIndex</span>]},<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>.<span class="pl-en">toArray</span>(a,b)}],SetterByBindingTypeAndVersioning<span class="pl-k">:</span>[[<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span>[<span class="pl-c1">this</span>.<span class="pl-smi">propertyName</span>]<span class="pl-k">=</span>a[b]},<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span>[<span class="pl-c1">this</span>.<span class="pl-smi">propertyName</span>]<span class="pl-k">=</span>a[b];<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span>[<span class="pl-c1">this</span>.<span class="pl-smi">propertyName</span>]<span class="pl-k">=</span>a[b];<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}],[<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="LC809" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">!==</span>e;<span class="pl-k">++</span>d)c[d]<span class="pl-k">=</span>a[b<span class="pl-k">++</span>]},<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">!==</span>e;<span class="pl-k">++</span>d)c[d]<span class="pl-k">=</span>a[b<span class="pl-k">++</span>];<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">!==</span>e;<span class="pl-k">++</span>d)c[d]<span class="pl-k">=</span>a[b<span class="pl-k">++</span>];<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}],[<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>[<span class="pl-c1">this</span>.<span class="pl-smi">propertyIndex</span>]<span class="pl-k">=</span>a[b]},<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>[<span class="pl-c1">this</span>.<span class="pl-smi">propertyIndex</span>]<span class="pl-k">=</span>a[b];<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>[<span class="pl-c1">this</span>.<span class="pl-smi">propertyIndex</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="LC810" class="blob-code blob-code-inner js-file-line">a[b];<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}],[<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>.<span class="pl-en">fromArray</span>(a,b)},<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>.<span class="pl-en">fromArray</span>(a,b);<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span>.<span class="pl-en">fromArray</span>(a,b);<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}]],<span class="pl-en">getValue</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-en">bind</span>();<span class="pl-c1">this</span>.<span class="pl-en">getValue</span>(a,b)},<span class="pl-en">setValue</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-en">bind</span>();<span class="pl-c1">this</span>.<span class="pl-en">setValue</span>(a,b)},<span class="pl-en">bind</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">node</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">parsedPath</span>,c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">objectName</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">propertyName</span>,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">propertyIndex</span>;a<span class="pl-k">||</span>(<span class="pl-c1">this</span>.<span class="pl-smi">node</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="LC811" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">ra</span>.<span class="pl-en">findNode</span>(<span class="pl-c1">this</span>.<span class="pl-smi">rootNode</span>,<span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span>)<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">rootNode</span>);<span class="pl-c1">this</span>.<span class="pl-smi">getValue</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_getValue_unavailable</span>;<span class="pl-c1">this</span>.<span class="pl-smi">setValue</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_setValue_unavailable</span>;<span class="pl-k">if</span>(a){<span class="pl-k">if</span>(c){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">objectIndex</span>;<span class="pl-k">switch</span>(c){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>materials<span class="pl-pds">&quot;</span></span>:<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">material</span>){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PropertyBinding: Can not bind to material as node does not have a material.<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>);<span class="pl-k">return</span>}<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">material</span>.<span class="pl-smi">materials</span>){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>);<span class="pl-k">return</span>}a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">material</span>.<span class="pl-smi">materials</span>;</td>
      </tr>
      <tr>
        <td id="L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="LC812" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>bones<span class="pl-pds">&quot;</span></span>:<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">skeleton</span>){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>);<span class="pl-k">return</span>}a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">skeleton</span>.<span class="pl-smi">bones</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(a[c].<span class="pl-c1">name</span><span class="pl-k">===</span>f){f<span class="pl-k">=</span>c;<span class="pl-k">break</span>}<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a[c]){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PropertyBinding: Can not bind to objectName of node undefined.<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>);<span class="pl-k">return</span>}a<span class="pl-k">=</span>a[c]}<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a[f]){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>,a);<span class="pl-k">return</span>}a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="LC813" class="blob-code blob-code-inner js-file-line">a[f]}}f<span class="pl-k">=</span>a[d];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f)<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PropertyBinding: Trying to update property for track: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> but it wasn&#39;t found.<span class="pl-pds">&quot;</span></span>,a);<span class="pl-k">else</span>{b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">Versioning</span>.<span class="pl-smi">None</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">Versioning</span>.<span class="pl-smi">NeedsUpdate</span>,<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span><span class="pl-k">=</span>a)<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">matrixWorldNeedsUpdate</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">Versioning</span>.<span class="pl-smi">MatrixWorldNeedsUpdate</span>,<span class="pl-c1">this</span>.<span class="pl-smi">targetObject</span><span class="pl-k">=</span>a);c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">BindingType</span>.<span class="pl-smi">Direct</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>e){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>morphTargetInfluences<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="LC814" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>);<span class="pl-k">return</span>}<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">isBufferGeometry</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">morphAttributes</span>){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>);<span class="pl-k">return</span>}<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">node</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">morphAttributes</span>.<span class="pl-smi">position</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">morphAttributes</span>.<span class="pl-smi">position</span>[c].<span class="pl-c1">name</span><span class="pl-k">===</span>e){e<span class="pl-k">=</span>c;<span class="pl-k">break</span>}}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">morphTargets</span>){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="LC815" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>);<span class="pl-k">return</span>}<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">node</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">morphTargets</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>.<span class="pl-smi">morphTargets</span>[c].<span class="pl-c1">name</span><span class="pl-k">===</span>e){e<span class="pl-k">=</span>c;<span class="pl-k">break</span>}}}c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">BindingType</span>.<span class="pl-smi">ArrayElement</span>;<span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span><span class="pl-k">=</span>f;<span class="pl-c1">this</span>.<span class="pl-smi">propertyIndex</span><span class="pl-k">=</span>e}<span class="pl-k">else</span> <span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">fromArray</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">toArray</span><span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">BindingType</span>.<span class="pl-smi">HasFromToArray</span>,<span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span><span class="pl-k">=</span>f)<span class="pl-k">:</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(f)<span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">BindingType</span>.<span class="pl-smi">EntireArray</span>,<span class="pl-c1">this</span>.<span class="pl-smi">resolvedProperty</span><span class="pl-k">=</span>f)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">propertyName</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">getValue</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">GetterByBindingType</span>[c];<span class="pl-c1">this</span>.<span class="pl-smi">setValue</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">SetterByBindingTypeAndVersioning</span>[c][b]}}<span class="pl-k">else</span> <span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PropertyBinding: Trying to update node for track: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="LC816" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">path</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> but it wasn&#39;t found.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">unbind</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">node</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">getValue</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_getValue_unbound</span>;<span class="pl-c1">this</span>.<span class="pl-smi">setValue</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_setValue_unbound</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ra</span>.<span class="pl-c1">prototype</span>,{_getValue_unbound<span class="pl-k">:</span><span class="pl-smi">ra</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getValue</span>,_setValue_unbound<span class="pl-k">:</span><span class="pl-smi">ra</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">setValue</span>});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">rf</span>.<span class="pl-c1">prototype</span>,{isAnimationObjectGroup<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_objects</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">nCachedObjects_</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_indicesByUUID</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_paths</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_parsedPaths</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,l<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;k<span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="LC817" class="blob-code blob-code-inner js-file-line">p;<span class="pl-k">++</span>k){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">arguments</span>[k],t<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">uuid</span>,q<span class="pl-k">=</span>d[t];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>q){q<span class="pl-k">=</span>b<span class="pl-k">++</span>;d[t]<span class="pl-k">=</span>q;<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(n);t<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> r<span class="pl-k">=</span>h;t<span class="pl-k">!==</span>r;<span class="pl-k">++</span>t)g[t].<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">ra</span>(n,e[t],f[t]))}<span class="pl-k">else</span> <span class="pl-k">if</span>(q<span class="pl-k">&lt;</span>c){l<span class="pl-k">=</span>a[q];<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-k">--</span>c;r<span class="pl-k">=</span>a[u];d[<span class="pl-smi">r</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>q;a[q]<span class="pl-k">=</span>r;d[t]<span class="pl-k">=</span>u;a[u]<span class="pl-k">=</span>n;t<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(r<span class="pl-k">=</span>h;t<span class="pl-k">!==</span>r;<span class="pl-k">++</span>t){<span class="pl-k">var</span> y<span class="pl-k">=</span>g[t],w<span class="pl-k">=</span>y[q];y[q]<span class="pl-k">=</span>y[u];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>w<span class="pl-k">&amp;&amp;</span>(w<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ra</span>(n,e[t],f[t]));y[u]<span class="pl-k">=</span>w}}<span class="pl-k">else</span> a[q]<span class="pl-k">!==</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.<span class="pl-pds">&quot;</span></span>)}<span class="pl-c1">this</span>.<span class="pl-smi">nCachedObjects_</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="LC818" class="blob-code blob-code-inner js-file-line">c},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_objects</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">nCachedObjects_</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_indicesByUUID</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;f<span class="pl-k">!==</span>g;<span class="pl-k">++</span>f){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">arguments</span>[f],l<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">uuid</span>,k<span class="pl-k">=</span>c[l];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>k<span class="pl-k">&amp;&amp;</span>k<span class="pl-k">&gt;=</span>b){<span class="pl-k">var</span> p<span class="pl-k">=</span>b<span class="pl-k">++</span>,n<span class="pl-k">=</span>a[p];c[<span class="pl-smi">n</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>k;a[k]<span class="pl-k">=</span>n;c[l]<span class="pl-k">=</span>p;a[p]<span class="pl-k">=</span>h;h<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(l<span class="pl-k">=</span>e;h<span class="pl-k">!==</span>l;<span class="pl-k">++</span>h){n<span class="pl-k">=</span>d[h];<span class="pl-k">var</span> t<span class="pl-k">=</span>n[k];n[k]<span class="pl-k">=</span>n[p];n[p]<span class="pl-k">=</span>t}}}<span class="pl-c1">this</span>.<span class="pl-smi">nCachedObjects_</span><span class="pl-k">=</span>b},<span class="pl-en">uncache</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_objects</span>,b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">nCachedObjects_</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_indicesByUUID</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;g<span class="pl-k">!==</span>h;<span class="pl-k">++</span>g){<span class="pl-k">var</span> l<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="LC819" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>[g].<span class="pl-smi">uuid</span>,k<span class="pl-k">=</span>d[l];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>k)<span class="pl-k">if</span>(<span class="pl-k">delete</span> d[l],k<span class="pl-k">&lt;</span>c){l<span class="pl-k">=</span><span class="pl-k">--</span>c;<span class="pl-k">var</span> p<span class="pl-k">=</span>a[l],n<span class="pl-k">=</span><span class="pl-k">--</span>b,t<span class="pl-k">=</span>a[n];d[<span class="pl-smi">p</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>k;a[k]<span class="pl-k">=</span>p;d[<span class="pl-smi">t</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>l;a[l]<span class="pl-k">=</span>t;<span class="pl-smi">a</span>.<span class="pl-c1">pop</span>();p<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(t<span class="pl-k">=</span>f;p<span class="pl-k">!==</span>t;<span class="pl-k">++</span>p){<span class="pl-k">var</span> q<span class="pl-k">=</span>e[p],r<span class="pl-k">=</span>q[n];q[k]<span class="pl-k">=</span>q[l];q[l]<span class="pl-k">=</span>r;<span class="pl-smi">q</span>.<span class="pl-c1">pop</span>()}}<span class="pl-k">else</span> <span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-k">--</span>b,t<span class="pl-k">=</span>a[n],d[<span class="pl-smi">t</span>.<span class="pl-smi">uuid</span>]<span class="pl-k">=</span>k,a[k]<span class="pl-k">=</span>t,<span class="pl-smi">a</span>.<span class="pl-c1">pop</span>(),p<span class="pl-k">=</span><span class="pl-c1">0</span>,t<span class="pl-k">=</span>f;p<span class="pl-k">!==</span>t;<span class="pl-k">++</span>p)q<span class="pl-k">=</span>e[p],q[k]<span class="pl-k">=</span>q[n],<span class="pl-smi">q</span>.<span class="pl-c1">pop</span>()}<span class="pl-c1">this</span>.<span class="pl-smi">nCachedObjects_</span><span class="pl-k">=</span>c},<span class="pl-en">subscribe_</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindingsIndicesByPath</span>,d<span class="pl-k">=</span>c[a],e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d)<span class="pl-k">return</span> e[d];<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_paths</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_parsedPaths</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_objects</span>,k<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">nCachedObjects_</span>,</td>
      </tr>
      <tr>
        <td id="L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="LC820" class="blob-code blob-code-inner js-file-line">m<span class="pl-k">=</span><span class="pl-c1">Array</span>(<span class="pl-smi">h</span>.<span class="pl-c1">length</span>);d<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;c[a]<span class="pl-k">=</span>d;<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(a);<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(b);<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(m);c<span class="pl-k">=</span>k;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>;c<span class="pl-k">!==</span>d;<span class="pl-k">++</span>c)m[c]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ra</span>(h[c],a,b);<span class="pl-k">return</span> m},<span class="pl-en">unsubscribe_</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindingsIndicesByPath</span>,c<span class="pl-k">=</span>b[a];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_paths</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_parsedPaths</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span>f[g];b[a[g]]<span class="pl-k">=</span>c;f[c]<span class="pl-k">=</span>h;<span class="pl-smi">f</span>.<span class="pl-c1">pop</span>();e[c]<span class="pl-k">=</span>e[g];<span class="pl-smi">e</span>.<span class="pl-c1">pop</span>();d[c]<span class="pl-k">=</span>d[g];<span class="pl-smi">d</span>.<span class="pl-c1">pop</span>()}}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">sf</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">play</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>.<span class="pl-en">_activateAction</span>(<span class="pl-c1">this</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">stop</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>.<span class="pl-en">_deactivateAction</span>(<span class="pl-c1">this</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">reset</span>()},</td>
      </tr>
      <tr>
        <td id="L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="LC821" class="blob-code blob-code-inner js-file-line"><span class="pl-en">reset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">paused</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">time</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_loopCount</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_startTime</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">stopFading</span>().<span class="pl-en">stopWarping</span>()},<span class="pl-en">isRunning</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">enabled</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">paused</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">timeScale</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">_startTime</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>.<span class="pl-en">_isActiveAction</span>(<span class="pl-c1">this</span>)},<span class="pl-en">isScheduled</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>.<span class="pl-en">_isActiveAction</span>(<span class="pl-c1">this</span>)},<span class="pl-en">startAt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_startTime</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setLoop</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">loop</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">repetitions</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setEffectiveWeight</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">weight</span><span class="pl-k">=</span>a;</td>
      </tr>
      <tr>
        <td id="L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="LC822" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_effectiveWeight</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">enabled</span><span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">stopFading</span>()},<span class="pl-en">getEffectiveWeight</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_effectiveWeight</span>},<span class="pl-en">fadeIn</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">_scheduleFading</span>(a,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)},<span class="pl-en">fadeOut</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">_scheduleFading</span>(a,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>)},<span class="pl-en">crossFadeFrom</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">fadeOut</span>(b);<span class="pl-c1">this</span>.<span class="pl-en">fadeIn</span>(b);<span class="pl-k">if</span>(c){c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_clip</span>.<span class="pl-smi">duration</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_clip</span>.<span class="pl-smi">duration</span>,e<span class="pl-k">=</span>c<span class="pl-k">/</span>d;<span class="pl-smi">a</span>.<span class="pl-en">warp</span>(<span class="pl-c1">1</span>,d<span class="pl-k">/</span>c,b);<span class="pl-c1">this</span>.<span class="pl-en">warp</span>(e,<span class="pl-c1">1</span>,b)}<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">crossFadeTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">crossFadeFrom</span>(<span class="pl-c1">this</span>,b,c)},<span class="pl-en">stopFading</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_weightInterpolant</span>;</td>
      </tr>
      <tr>
        <td id="L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="LC823" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_weightInterpolant</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>.<span class="pl-en">_takeBackControlInterpolant</span>(a));<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setEffectiveTimeScale</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">timeScale</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_effectiveTimeScale</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">paused</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">stopWarping</span>()},<span class="pl-en">getEffectiveTimeScale</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_effectiveTimeScale</span>},<span class="pl-en">setDuration</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">timeScale</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_clip</span>.<span class="pl-smi">duration</span><span class="pl-k">/</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">stopWarping</span>()},<span class="pl-en">syncWith</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">time</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">time</span>;<span class="pl-c1">this</span>.<span class="pl-smi">timeScale</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">timeScale</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">stopWarping</span>()},<span class="pl-en">halt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">warp</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_effectiveTimeScale</span>,</td>
      </tr>
      <tr>
        <td id="L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="LC824" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,a)},<span class="pl-en">warp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">time</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_timeScaleInterpolant</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">timeScale</span>;<span class="pl-c1">null</span><span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_timeScaleInterpolant</span><span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">_lendControlInterpolant</span>());d<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">parameterPositions</span>;f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">sampleValues</span>;d[<span class="pl-c1">0</span>]<span class="pl-k">=</span>e;d[<span class="pl-c1">1</span>]<span class="pl-k">=</span>e<span class="pl-k">+</span>c;f[<span class="pl-c1">0</span>]<span class="pl-k">=</span>a<span class="pl-k">/</span>g;f[<span class="pl-c1">1</span>]<span class="pl-k">=</span>b<span class="pl-k">/</span>g;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">stopWarping</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_timeScaleInterpolant</span>;<span class="pl-c1">null</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_timeScaleInterpolant</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>.<span class="pl-en">_takeBackControlInterpolant</span>(a));<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getMixer</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>},<span class="pl-en">getClip</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_clip</span>},<span class="pl-en">getRoot</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_localRoot</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="LC825" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>.<span class="pl-smi">_root</span>},<span class="pl-en">_update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">enabled</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_startTime</span>;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>e){b<span class="pl-k">=</span>(a<span class="pl-k">-</span>e)<span class="pl-k">*</span>c;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>b<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">===</span>c)<span class="pl-k">return</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_startTime</span><span class="pl-k">=</span><span class="pl-c1">null</span>;b<span class="pl-k">*=</span>c}b<span class="pl-k">*=</span><span class="pl-c1">this</span>.<span class="pl-en">_updateTimeScale</span>(a);c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_updateTime</span>(b);a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">_updateWeight</span>(a);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>a){b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_interpolants</span>;e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_propertyBindings</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;f<span class="pl-k">!==</span>g;<span class="pl-k">++</span>f)b[f].<span class="pl-c1">evaluate</span>(c),e[f].<span class="pl-en">accumulate</span>(d,a)}}<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-en">_updateWeight</span>(a)},<span class="pl-en">_updateWeight</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">enabled</span>){b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">weight</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_weightInterpolant</span>;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>c){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">evaluate</span>(a)[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="LC826" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">*=</span>d;a<span class="pl-k">&gt;</span><span class="pl-smi">c</span>.<span class="pl-smi">parameterPositions</span>[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">stopFading</span>(),<span class="pl-c1">0</span><span class="pl-k">===</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>))}}<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_effectiveWeight</span><span class="pl-k">=</span>b},<span class="pl-en">_updateTimeScale</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">paused</span>){b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">timeScale</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_timeScaleInterpolant</span>;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>c){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">evaluate</span>(a)[<span class="pl-c1">0</span>];b<span class="pl-k">*=</span>d;a<span class="pl-k">&gt;</span><span class="pl-smi">c</span>.<span class="pl-smi">parameterPositions</span>[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">stopWarping</span>(),<span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">paused</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">timeScale</span><span class="pl-k">=</span>b)}}<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_effectiveTimeScale</span><span class="pl-k">=</span>b},<span class="pl-en">_updateTime</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">time</span><span class="pl-k">+</span>a;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> b;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_clip</span>.<span class="pl-smi">duration</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">loop</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_loopCount</span>;<span class="pl-k">if</span>(<span class="pl-c1">2200</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="LC827" class="blob-code blob-code-inner js-file-line">d)a<span class="pl-k">:</span>{<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">===</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_loopCount</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-en">_setEndings</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>)),b<span class="pl-k">&gt;=</span>c)b<span class="pl-k">=</span>c;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>b)b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">break</span> a;<span class="pl-c1">this</span>.<span class="pl-smi">clampWhenFinished</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">paused</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>finished<span class="pl-pds">&quot;</span></span>,action<span class="pl-k">:</span><span class="pl-c1">this</span>,direction<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>})}<span class="pl-k">else</span>{d<span class="pl-k">=</span><span class="pl-c1">2202</span><span class="pl-k">===</span>d;<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">===</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>a<span class="pl-k">?</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-en">_setEndings</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">repetitions</span>,d))<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">_setEndings</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">repetitions</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,d));<span class="pl-k">if</span>(b<span class="pl-k">&gt;=</span>c<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>b){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(b<span class="pl-k">/</span>c);b<span class="pl-k">-=</span>c<span class="pl-k">*</span>f;e<span class="pl-k">+=</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(f);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">repetitions</span><span class="pl-k">-</span>e;<span class="pl-c1">0</span><span class="pl-k">&gt;=</span>g<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">clampWhenFinished</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">paused</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="LC828" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span><span class="pl-k">&lt;</span>a<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>finished<span class="pl-pds">&quot;</span></span>,action<span class="pl-k">:</span><span class="pl-c1">this</span>,direction<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>}))<span class="pl-k">:</span>(<span class="pl-c1">1</span><span class="pl-k">===</span>g<span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>a,<span class="pl-c1">this</span>.<span class="pl-en">_setEndings</span>(a,<span class="pl-k">!</span>a,d))<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">_setEndings</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,d),<span class="pl-c1">this</span>.<span class="pl-smi">_loopCount</span><span class="pl-k">=</span>e,<span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>.<span class="pl-c1">dispatchEvent</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>loop<span class="pl-pds">&quot;</span></span>,action<span class="pl-k">:</span><span class="pl-c1">this</span>,loopDelta<span class="pl-k">:</span>f}))}<span class="pl-k">if</span>(d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">===</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">1</span>))<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">time</span><span class="pl-k">=</span>b,c<span class="pl-k">-</span>b}<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">time</span><span class="pl-k">=</span>b},<span class="pl-en">_setEndings</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_interpolantSettings</span>;c<span class="pl-k">?</span>(<span class="pl-smi">d</span>.<span class="pl-smi">endingStart</span><span class="pl-k">=</span><span class="pl-c1">2401</span>,<span class="pl-smi">d</span>.<span class="pl-smi">endingEnd</span><span class="pl-k">=</span><span class="pl-c1">2401</span>)<span class="pl-k">:</span>(<span class="pl-smi">d</span>.<span class="pl-smi">endingStart</span><span class="pl-k">=</span>a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">zeroSlopeAtStart</span><span class="pl-k">?</span><span class="pl-c1">2401</span><span class="pl-k">:</span><span class="pl-c1">2400</span><span class="pl-k">:</span><span class="pl-c1">2402</span>,<span class="pl-smi">d</span>.<span class="pl-smi">endingEnd</span><span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">zeroSlopeAtEnd</span><span class="pl-k">?</span><span class="pl-c1">2401</span><span class="pl-k">:</span><span class="pl-c1">2400</span><span class="pl-k">:</span><span class="pl-c1">2402</span>)},<span class="pl-en">_scheduleFading</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="LC829" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_mixer</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">time</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_weightInterpolant</span>;<span class="pl-c1">null</span><span class="pl-k">===</span>f<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_weightInterpolant</span><span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">_lendControlInterpolant</span>());d<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">parameterPositions</span>;f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">sampleValues</span>;d[<span class="pl-c1">0</span>]<span class="pl-k">=</span>e;f[<span class="pl-c1">0</span>]<span class="pl-k">=</span>b;d[<span class="pl-c1">1</span>]<span class="pl-k">=</span>e<span class="pl-k">+</span>a;f[<span class="pl-c1">1</span>]<span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">te</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">za</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:te,_bindAction:<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_localRoot</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">_root</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_clip</span>.<span class="pl-smi">tracks</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_propertyBindings</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_interpolants</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">uuid</span>,h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindingsByRootAndName</span>,k<span class="pl-k">=</span>h[g];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>k<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span>{},h[g]<span class="pl-k">=</span>k);<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">!==</span>e;<span class="pl-k">++</span>h){<span class="pl-k">var</span> m<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="LC830" class="blob-code blob-code-inner js-file-line">d[h],p<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">name</span>,n<span class="pl-k">=</span>k[p];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>n){n<span class="pl-k">=</span>f[h];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>n){<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">n</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">++</span><span class="pl-smi">n</span>.<span class="pl-smi">referenceCount</span>,<span class="pl-c1">this</span>.<span class="pl-en">_addInactiveBinding</span>(n,g,p));<span class="pl-k">continue</span>}n<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">se</span>(<span class="pl-smi">ra</span>.<span class="pl-en">create</span>(c,p,b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">_propertyBindings</span>[h].<span class="pl-smi">binding</span>.<span class="pl-smi">parsedPath</span>),<span class="pl-smi">m</span>.<span class="pl-smi">ValueTypeName</span>,<span class="pl-smi">m</span>.<span class="pl-en">getValueSize</span>());<span class="pl-k">++</span><span class="pl-smi">n</span>.<span class="pl-smi">referenceCount</span>;<span class="pl-c1">this</span>.<span class="pl-en">_addInactiveBinding</span>(n,g,p)}f[h]<span class="pl-k">=</span>n;a[h].<span class="pl-smi">resultBuffer</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">buffer</span>}},<span class="pl-en">_activateAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-en">_isActiveAction</span>(a)){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-smi">_localRoot</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">_root</span>).<span class="pl-smi">uuid</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_clip</span>.<span class="pl-smi">uuid</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actionsByClip</span>[c];<span class="pl-c1">this</span>.<span class="pl-en">_bindAction</span>(a,</td>
      </tr>
      <tr>
        <td id="L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="LC831" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">knownActions</span>[<span class="pl-c1">0</span>]);<span class="pl-c1">this</span>.<span class="pl-en">_addInactiveAction</span>(a,c,b)}b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_propertyBindings</span>;c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">!==</span>d;<span class="pl-k">++</span>c){<span class="pl-k">var</span> e<span class="pl-k">=</span>b[c];<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-smi">useCount</span><span class="pl-k">++</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">_lendBinding</span>(e),<span class="pl-smi">e</span>.<span class="pl-en">saveOriginalState</span>())}<span class="pl-c1">this</span>.<span class="pl-en">_lendAction</span>(a)}},<span class="pl-en">_deactivateAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">_isActiveAction</span>(a)){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_propertyBindings</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">!==</span>d;<span class="pl-k">++</span>c){<span class="pl-k">var</span> e<span class="pl-k">=</span>b[c];<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-k">--</span><span class="pl-smi">e</span>.<span class="pl-smi">useCount</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-en">restoreOriginalState</span>(),<span class="pl-c1">this</span>.<span class="pl-en">_takeBackBinding</span>(e))}<span class="pl-c1">this</span>.<span class="pl-en">_takeBackAction</span>(a)}},<span class="pl-en">_initMemoryManager</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_actions</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_nActiveActions</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_actionsByClip</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="LC832" class="blob-code blob-code-inner js-file-line">{};<span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_nActiveBindings</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_bindingsByRootAndName</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">_controlInterpolants</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_nActiveControlInterpolants</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-c1">this</span>.<span class="pl-smi">stats</span><span class="pl-k">=</span>{actions<span class="pl-k">:</span>{<span class="pl-k">get</span> <span class="pl-en">total</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">_actions</span>.<span class="pl-c1">length</span>},<span class="pl-k">get</span> <span class="pl-en">inUse</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">_nActiveActions</span>}},bindings<span class="pl-k">:</span>{<span class="pl-k">get</span> <span class="pl-en">total</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">_bindings</span>.<span class="pl-c1">length</span>},<span class="pl-k">get</span> <span class="pl-en">inUse</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">_nActiveBindings</span>}},controlInterpolants<span class="pl-k">:</span>{<span class="pl-k">get</span> <span class="pl-en">total</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">_controlInterpolants</span>.<span class="pl-c1">length</span>},<span class="pl-k">get</span> <span class="pl-en">inUse</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">_nActiveControlInterpolants</span>}}}},<span class="pl-en">_isActiveAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span>;</td>
      </tr>
      <tr>
        <td id="L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="LC833" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveActions</span>},<span class="pl-en">_addInactiveAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actions</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actionsByClip</span>,f<span class="pl-k">=</span>e[b];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>f<span class="pl-k">?</span>(f<span class="pl-k">=</span>{knownActions<span class="pl-k">:</span>[a],actionByRoot<span class="pl-k">:</span>{}},<span class="pl-smi">a</span>.<span class="pl-smi">_byClipCacheIndex</span><span class="pl-k">=</span><span class="pl-c1">0</span>,e[b]<span class="pl-k">=</span>f)<span class="pl-k">:</span>(b<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">knownActions</span>,<span class="pl-smi">a</span>.<span class="pl-smi">_byClipCacheIndex</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(a));<span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(a);<span class="pl-smi">f</span>.<span class="pl-smi">actionByRoot</span>[c]<span class="pl-k">=</span>a},<span class="pl-en">_removeInactiveAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actions</span>,c<span class="pl-k">=</span>b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span>;<span class="pl-smi">c</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span>d;b[d]<span class="pl-k">=</span>c;<span class="pl-smi">b</span>.<span class="pl-c1">pop</span>();<span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span><span class="pl-c1">null</span>;b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_clip</span>.<span class="pl-smi">uuid</span>;c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actionsByClip</span>;d<span class="pl-k">=</span>c[b];<span class="pl-k">var</span> e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="LC834" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-smi">knownActions</span>,f<span class="pl-k">=</span>e[<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_byClipCacheIndex</span>;<span class="pl-smi">f</span>.<span class="pl-smi">_byClipCacheIndex</span><span class="pl-k">=</span>g;e[g]<span class="pl-k">=</span>f;<span class="pl-smi">e</span>.<span class="pl-c1">pop</span>();<span class="pl-smi">a</span>.<span class="pl-smi">_byClipCacheIndex</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">delete</span> <span class="pl-smi">d</span>.<span class="pl-smi">actionByRoot</span>[(<span class="pl-smi">a</span>.<span class="pl-smi">_localRoot</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">_root</span>).<span class="pl-smi">uuid</span>];<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> c[b];<span class="pl-c1">this</span>.<span class="pl-en">_removeInactiveBindingsForAction</span>(a)},<span class="pl-en">_removeInactiveBindingsForAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_propertyBindings</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">!==</span>c;<span class="pl-k">++</span>b){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[b];<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-k">--</span><span class="pl-smi">d</span>.<span class="pl-smi">referenceCount</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">_removeInactiveBinding</span>(d)}},<span class="pl-en">_lendAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actions</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveActions</span><span class="pl-k">++</span>,e<span class="pl-k">=</span>b[d];<span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="LC835" class="blob-code blob-code-inner js-file-line">d;b[d]<span class="pl-k">=</span>a;<span class="pl-smi">e</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span>c;b[c]<span class="pl-k">=</span>e},<span class="pl-en">_takeBackAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actions</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span>,d<span class="pl-k">=</span><span class="pl-k">--</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveActions</span>,e<span class="pl-k">=</span>b[d];<span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span>d;b[d]<span class="pl-k">=</span>a;<span class="pl-smi">e</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span>c;b[c]<span class="pl-k">=</span>e},<span class="pl-en">_addInactiveBinding</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindingsByRootAndName</span>,e<span class="pl-k">=</span>d[b],f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>e<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>{},d[b]<span class="pl-k">=</span>e);e[c]<span class="pl-k">=</span>a;<span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(a)},<span class="pl-en">_removeInactiveBinding</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">binding</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">rootNode</span>.<span class="pl-smi">uuid</span>;c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">path</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindingsByRootAndName</span>,f<span class="pl-k">=</span>e[d],g<span class="pl-k">=</span>b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span>;</td>
      </tr>
      <tr>
        <td id="L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="LC836" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span>a;b[a]<span class="pl-k">=</span>g;<span class="pl-smi">b</span>.<span class="pl-c1">pop</span>();<span class="pl-k">delete</span> f[c];a<span class="pl-k">:</span>{<span class="pl-k">for</span>(<span class="pl-k">var</span> h <span class="pl-k">in</span> f)<span class="pl-k">break</span> a;<span class="pl-k">delete</span> e[d]}},<span class="pl-en">_lendBinding</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveBindings</span><span class="pl-k">++</span>,e<span class="pl-k">=</span>b[d];<span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span>d;b[d]<span class="pl-k">=</span>a;<span class="pl-smi">e</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span>c;b[c]<span class="pl-k">=</span>e},<span class="pl-en">_takeBackBinding</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span>,d<span class="pl-k">=</span><span class="pl-k">--</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveBindings</span>,e<span class="pl-k">=</span>b[d];<span class="pl-smi">a</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span>d;b[d]<span class="pl-k">=</span>a;<span class="pl-smi">e</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span>c;b[c]<span class="pl-k">=</span>e},<span class="pl-en">_lendControlInterpolant</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_controlInterpolants</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveControlInterpolants</span><span class="pl-k">++</span>,c<span class="pl-k">=</span>a[b];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">jd</span>(<span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">2</span>),</td>
      </tr>
      <tr>
        <td id="L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="LC837" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">2</span>),<span class="pl-c1">1</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_controlInterpolantsResultBuffer</span>),<span class="pl-smi">c</span>.<span class="pl-smi">__cacheIndex</span><span class="pl-k">=</span>b,a[b]<span class="pl-k">=</span>c);<span class="pl-k">return</span> c},<span class="pl-en">_takeBackControlInterpolant</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_controlInterpolants</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">__cacheIndex</span>,d<span class="pl-k">=</span><span class="pl-k">--</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveControlInterpolants</span>,e<span class="pl-k">=</span>b[d];<span class="pl-smi">a</span>.<span class="pl-smi">__cacheIndex</span><span class="pl-k">=</span>d;b[d]<span class="pl-k">=</span>a;<span class="pl-smi">e</span>.<span class="pl-smi">__cacheIndex</span><span class="pl-k">=</span>c;b[c]<span class="pl-k">=</span>e},_controlInterpolantsResultBuffer<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">1</span>),<span class="pl-en">clipAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">_root</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">uuid</span>;c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">?</span><span class="pl-smi">Ga</span>.<span class="pl-en">findByName</span>(c,a)<span class="pl-k">:</span>a;a<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!==</span>c<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">uuid</span><span class="pl-k">:</span>a;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actionsByClip</span>[a],f<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>e){f<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="LC838" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-smi">actionByRoot</span>[d];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>f)<span class="pl-k">return</span> f;f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">knownActions</span>[<span class="pl-c1">0</span>];<span class="pl-c1">null</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">_clip</span>)}<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span>c)<span class="pl-k">return</span> <span class="pl-c1">null</span>;b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">sf</span>(<span class="pl-c1">this</span>,c,b);<span class="pl-c1">this</span>.<span class="pl-en">_bindAction</span>(b,f);<span class="pl-c1">this</span>.<span class="pl-en">_addInactiveAction</span>(b,a,d);<span class="pl-k">return</span> b},<span class="pl-en">existingAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">_root</span>;b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">uuid</span>;c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">?</span><span class="pl-smi">Ga</span>.<span class="pl-en">findByName</span>(c,a)<span class="pl-k">:</span>a;a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actionsByClip</span>[c<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">uuid</span><span class="pl-k">:</span>a];<span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">actionByRoot</span>[b]<span class="pl-k">||</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-c1">null</span>},<span class="pl-en">stopAllAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actions</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveActions</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveBindings</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveBindings</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="LC839" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveActions</span><span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">!==</span>b;<span class="pl-k">++</span>e)a[e].<span class="pl-c1">reset</span>();<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">!==</span>d;<span class="pl-k">++</span>e)c[e].<span class="pl-smi">useCount</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">*=</span><span class="pl-c1">this</span>.<span class="pl-smi">timeScale</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actions</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveActions</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">time</span><span class="pl-k">+=</span>a,e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sign</span>(a),f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_accuIndex</span><span class="pl-k">^=</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">!==</span>c;<span class="pl-k">++</span>g)b[g].<span class="pl-en">_update</span>(d,a,e,f);a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindings</span>;b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_nActiveBindings</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">!==</span>b;<span class="pl-k">++</span>g)a[g].<span class="pl-c1">apply</span>(f);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getRoot</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_root</span>},<span class="pl-en">uncacheClip</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actions</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">uuid</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actionsByClip</span>,d<span class="pl-k">=</span>c[a];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d){d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">knownActions</span>;</td>
      </tr>
      <tr>
        <td id="L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="LC840" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;e<span class="pl-k">!==</span>f;<span class="pl-k">++</span>e){<span class="pl-k">var</span> g<span class="pl-k">=</span>d[e];<span class="pl-c1">this</span>.<span class="pl-en">_deactivateAction</span>(g);<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">_cacheIndex</span>,k<span class="pl-k">=</span>b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-smi">g</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">g</span>.<span class="pl-smi">_byClipCacheIndex</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">k</span>.<span class="pl-smi">_cacheIndex</span><span class="pl-k">=</span>h;b[h]<span class="pl-k">=</span>k;<span class="pl-smi">b</span>.<span class="pl-c1">pop</span>();<span class="pl-c1">this</span>.<span class="pl-en">_removeInactiveBindingsForAction</span>(g)}<span class="pl-k">delete</span> c[a]}},<span class="pl-en">uncacheRoot</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">uuid</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_actionsByClip</span>;<span class="pl-k">for</span>(d <span class="pl-k">in</span> b){<span class="pl-k">var</span> c<span class="pl-k">=</span>b[d].<span class="pl-smi">actionByRoot</span>[a];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">_deactivateAction</span>(c),<span class="pl-c1">this</span>.<span class="pl-en">_removeInactiveAction</span>(c))}<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_bindingsByRootAndName</span>[a];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>d)<span class="pl-k">for</span>(<span class="pl-k">var</span> e <span class="pl-k">in</span> d)a<span class="pl-k">=</span>d[e],<span class="pl-smi">a</span>.<span class="pl-en">restoreOriginalState</span>(),</td>
      </tr>
      <tr>
        <td id="L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="LC841" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">_removeInactiveBinding</span>(a)},<span class="pl-en">uncacheAction</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">existingAction</span>(a,b);<span class="pl-c1">null</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">_deactivateAction</span>(a),<span class="pl-c1">this</span>.<span class="pl-en">_removeInactiveAction</span>(a))}});<span class="pl-smi">Qd</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">clone</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Qd</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-c1">value</span>.<span class="pl-smi">clone</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">value</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">value</span>.<span class="pl-en">clone</span>())};<span class="pl-smi">ue</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:ue,isInstancedBufferGeometry:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">maxInstancedCount</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">maxInstancedCount</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)}});</td>
      </tr>
      <tr>
        <td id="L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="LC842" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">ve</span>.<span class="pl-c1">prototype</span>,{count<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">count</span>}},array<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>}}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ve</span>.<span class="pl-c1">prototype</span>,{isInterleavedBufferAttribute<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">setX</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">stride</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span>]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setY</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">stride</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span><span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">stride</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span><span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setW</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">stride</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="LC843" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">3</span>]<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">getX</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">stride</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span>]},<span class="pl-en">getY</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">stride</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span><span class="pl-k">+</span><span class="pl-c1">1</span>]},<span class="pl-en">getZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">stride</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span><span class="pl-k">+</span><span class="pl-c1">2</span>]},<span class="pl-en">getW</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">stride</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span><span class="pl-k">+</span><span class="pl-c1">3</span>]},<span class="pl-en">setXY</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">stride</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span>;<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">0</span>]<span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setXYZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){a<span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">stride</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span>;<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="LC844" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>]<span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>d;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setXYZW</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){a<span class="pl-k">=</span>a<span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">stride</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">offset</span>;<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">0</span>]<span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span>e;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">rc</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>needsUpdate<span class="pl-pds">&quot;</span></span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">version</span><span class="pl-k">++</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">rc</span>.<span class="pl-c1">prototype</span>,{isInterleavedBuffer<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">onUploadCallback</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},<span class="pl-en">setArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(a))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferAttribute: array should be a Typed Array.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="LC845" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">stride</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">array</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setDynamic</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">dynamic</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">array</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a.array.constructor</span>(<span class="pl-smi">a</span>.<span class="pl-smi">array</span>);<span class="pl-c1">this</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">count</span>;<span class="pl-c1">this</span>.<span class="pl-smi">stride</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">stride</span>;<span class="pl-c1">this</span>.<span class="pl-smi">dynamic</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">dynamic</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">copyAt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">*=</span><span class="pl-c1">this</span>.<span class="pl-smi">stride</span>;c<span class="pl-k">*=</span><span class="pl-smi">b</span>.<span class="pl-smi">stride</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">stride</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-smi">array</span>[a<span class="pl-k">+</span>d]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">array</span>[c<span class="pl-k">+</span>d];<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-smi">array</span>.<span class="pl-c1">set</span>(a,b);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},</td>
      </tr>
      <tr>
        <td id="L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="LC846" class="blob-code blob-code-inner js-file-line"><span class="pl-en">onUpload</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">onUploadCallback</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">we</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">rc</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:we,isInstancedInterleavedBuffer:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">rc</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">meshPerAttribute</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">meshPerAttribute</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-smi">xe</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>),{<span class="pl-en">constructor</span>:xe,isInstancedBufferAttribute:!0,copy:<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">copy</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a);<span class="pl-c1">this</span>.<span class="pl-smi">meshPerAttribute</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">meshPerAttribute</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">tf</span>.<span class="pl-c1">prototype</span>,{linePrecision<span class="pl-k">:</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="LC847" class="blob-code blob-code-inner js-file-line"><span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">ray</span>.<span class="pl-c1">set</span>(a,b)},<span class="pl-en">setFromCamera</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">isPerspectiveCamera</span><span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">origin</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-smi">b</span>.<span class="pl-smi">matrixWorld</span>),<span class="pl-c1">this</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">direction</span>.<span class="pl-c1">set</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-c1">.5</span>).<span class="pl-en">unproject</span>(b).<span class="pl-c1">sub</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">origin</span>).<span class="pl-c1">normalize</span>())<span class="pl-k">:</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">isOrthographicCamera</span><span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">origin</span>.<span class="pl-c1">set</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,(<span class="pl-smi">b</span>.<span class="pl-smi">near</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">far</span>)<span class="pl-k">/</span>(<span class="pl-smi">b</span>.<span class="pl-smi">near</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">far</span>)).<span class="pl-en">unproject</span>(b),<span class="pl-c1">this</span>.<span class="pl-smi">ray</span>.<span class="pl-smi">direction</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>).<span class="pl-en">transformDirection</span>(<span class="pl-smi">b</span>.<span class="pl-smi">matrixWorld</span>))<span class="pl-k">:</span><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Raycaster: Unsupported camera type.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">intersectObject</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span>c<span class="pl-k">||</span>[];<span class="pl-en">ye</span>(a,<span class="pl-c1">this</span>,</td>
      </tr>
      <tr>
        <td id="L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="LC848" class="blob-code blob-code-inner js-file-line">c,b);<span class="pl-smi">c</span>.<span class="pl-c1">sort</span>(uf);<span class="pl-k">return</span> c},<span class="pl-en">intersectObjects</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span>c<span class="pl-k">||</span>[];<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(a))<span class="pl-k">return</span> <span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Raycaster.intersectObjects: objects is not an Array.<span class="pl-pds">&quot;</span></span>),c;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>)<span class="pl-en">ye</span>(a[d],<span class="pl-c1">this</span>,c,b);<span class="pl-smi">c</span>.<span class="pl-c1">sort</span>(uf);<span class="pl-k">return</span> c}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">vf</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">start</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">oldTime</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">startTime</span><span class="pl-k">=</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">performance</span><span class="pl-k">?</span><span class="pl-c1">Date</span><span class="pl-k">:</span><span class="pl-c1">performance</span>).<span class="pl-en">now</span>();<span class="pl-c1">this</span>.<span class="pl-smi">elapsedTime</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">running</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">stop</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">getElapsedTime</span>();<span class="pl-c1">this</span>.<span class="pl-smi">autoStart</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">running</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">getElapsedTime</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">getDelta</span>();</td>
      </tr>
      <tr>
        <td id="L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="LC849" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">elapsedTime</span>},<span class="pl-en">getDelta</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">autoStart</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">running</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">start</span>(),<span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">running</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">performance</span><span class="pl-k">?</span><span class="pl-c1">Date</span><span class="pl-k">:</span><span class="pl-c1">performance</span>).<span class="pl-en">now</span>();a<span class="pl-k">=</span>(b<span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">oldTime</span>)<span class="pl-k">/</span><span class="pl-c1">1E3</span>;<span class="pl-c1">this</span>.<span class="pl-smi">oldTime</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">elapsedTime</span><span class="pl-k">+=</span>a}<span class="pl-k">return</span> a}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">wf</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">phi</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">theta</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span>;<span class="pl-c1">this</span>.<span class="pl-smi">phi</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">phi</span>;<span class="pl-c1">this</span>.<span class="pl-smi">theta</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">theta</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="LC850" class="blob-code blob-code-inner js-file-line"><span class="pl-en">makeSafe</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">phi</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">1E-6</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">-</span><span class="pl-c1">1E-6</span>,<span class="pl-c1">this</span>.<span class="pl-smi">phi</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromVector3</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>();<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">phi</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">theta</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">theta</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>),<span class="pl-c1">this</span>.<span class="pl-smi">phi</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">acos</span>(<span class="pl-c1">J</span>.<span class="pl-en">clamp</span>(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">/</span><span class="pl-c1">this</span>.<span class="pl-smi">radius</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>)));<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">xf</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">theta</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},<span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">radius</span>;<span class="pl-c1">this</span>.<span class="pl-smi">theta</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">theta</span>;<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},</td>
      </tr>
      <tr>
        <td id="L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="LC851" class="blob-code blob-code-inner js-file-line"><span class="pl-en">setFromVector3</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">radius</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-c1">this</span>.<span class="pl-smi">theta</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);<span class="pl-c1">this</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ze</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">copy</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">copy</span>(b);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">makeEmpty</span>();<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-c1">this</span>.<span class="pl-en">expandByPoint</span>(a[b]);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">setFromCenterAndSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">copy</span>(c).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">.5</span>);<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">copy</span>(b).<span class="pl-c1">sub</span>(c);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">copy</span>(b).<span class="pl-c1">add</span>(c);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}(),<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">this.constructor</span>).<span class="pl-en">copy</span>(<span class="pl-c1">this</span>)},</td>
      </tr>
      <tr>
        <td id="L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="LC852" class="blob-code blob-code-inner js-file-line"><span class="pl-en">copy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">copy</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">makeEmpty</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Infinity</span>;<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">isEmpty</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>},<span class="pl-en">getCenter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box2: .getCenter() target is now required<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">isEmpty</span>()<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">addVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">min</span>,<span class="pl-c1">this</span>.<span class="pl-smi">max</span>).<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">.5</span>)},<span class="pl-en">getSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box2: .getSize() target is now required<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="LC853" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">isEmpty</span>()<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">subVectors</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>,<span class="pl-c1">this</span>.<span class="pl-smi">min</span>)},<span class="pl-en">expandByPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">min</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">max</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">expandByVector</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">sub</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">add</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">expandByScalar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">addScalar</span>(<span class="pl-k">-</span>a);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">addScalar</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">containsPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">containsBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;=</span></td>
      </tr>
      <tr>
        <td id="L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="LC854" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span>},<span class="pl-en">getParameter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box2: .getParameter() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">set</span>((<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>)<span class="pl-k">/</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span>),(<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>)<span class="pl-k">/</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span>))},<span class="pl-en">intersectsBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">clampPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box2: .clampPoint() target is now required<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">B</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">copy</span>(a).<span class="pl-en">clamp</span>(<span class="pl-c1">this</span>.<span class="pl-smi">min</span>,<span class="pl-c1">this</span>.<span class="pl-smi">max</span>)},<span class="pl-en">distanceToPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="LC855" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">B</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">copy</span>(b).<span class="pl-en">clamp</span>(<span class="pl-c1">this</span>.<span class="pl-smi">min</span>,<span class="pl-c1">this</span>.<span class="pl-smi">max</span>).<span class="pl-c1">sub</span>(b).<span class="pl-c1">length</span>()}}(),<span class="pl-en">intersect</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">max</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">min</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">union</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-en">min</span>(<span class="pl-smi">a</span>.<span class="pl-smi">min</span>);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-en">max</span>(<span class="pl-smi">a</span>.<span class="pl-smi">max</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">min</span>.<span class="pl-c1">add</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">max</span>.<span class="pl-c1">add</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">equals</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">min</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">min</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>.<span class="pl-en">equals</span>(<span class="pl-c1">this</span>.<span class="pl-smi">max</span>)}});<span class="pl-smi">ld</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">ld</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>ld;<span class="pl-smi">ld</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">isImmediateRenderObject</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">md</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="LC856" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">md</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>md;<span class="pl-smi">md</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">la</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> d<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>b<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span>];<span class="pl-c1">this</span>.<span class="pl-c1">object</span>.<span class="pl-en">updateMatrixWorld</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">c</span>.<span class="pl-en">getNormalMatrix</span>(<span class="pl-c1">this</span>.<span class="pl-c1">object</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">object</span>.<span class="pl-smi">matrixWorld</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">object</span>.<span class="pl-smi">geometry</span>;<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">isGeometry</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">vertices</span>,k<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">faces</span>,m<span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>;m<span class="pl-k">&lt;</span>p;m<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span>k[m],t<span class="pl-k">=</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">vertexNormals</span>.<span class="pl-c1">length</span>;t<span class="pl-k">&lt;</span>q;t<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">vertexNormals</span>[t];<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(h[n[d[t]]]).<span class="pl-en">applyMatrix4</span>(e);<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(r).<span class="pl-en">applyMatrix3</span>(c).<span class="pl-c1">normalize</span>().<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">this</span>.<span class="pl-c1">size</span>).<span class="pl-c1">add</span>(a);</td>
      </tr>
      <tr>
        <td id="L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="LC857" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-en">setXYZ</span>(g,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);g<span class="pl-k">+=</span><span class="pl-c1">1</span>;<span class="pl-smi">f</span>.<span class="pl-en">setXYZ</span>(g,<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-smi">b</span>.<span class="pl-c1">z</span>);g<span class="pl-k">+=</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">isBufferGeometry</span>)<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">normal</span>,t<span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">count</span>;t<span class="pl-k">&lt;</span>q;t<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-c1">set</span>(<span class="pl-smi">d</span>.<span class="pl-en">getX</span>(t),<span class="pl-smi">d</span>.<span class="pl-en">getY</span>(t),<span class="pl-smi">d</span>.<span class="pl-en">getZ</span>(t)).<span class="pl-en">applyMatrix4</span>(e),<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-smi">h</span>.<span class="pl-en">getX</span>(t),<span class="pl-smi">h</span>.<span class="pl-en">getY</span>(t),<span class="pl-smi">h</span>.<span class="pl-en">getZ</span>(t)),<span class="pl-smi">b</span>.<span class="pl-en">applyMatrix3</span>(c).<span class="pl-c1">normalize</span>().<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">this</span>.<span class="pl-c1">size</span>).<span class="pl-c1">add</span>(a),<span class="pl-smi">f</span>.<span class="pl-en">setXYZ</span>(g,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>),g<span class="pl-k">+=</span><span class="pl-c1">1</span>,<span class="pl-smi">f</span>.<span class="pl-en">setXYZ</span>(g,<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-smi">b</span>.<span class="pl-c1">z</span>),g<span class="pl-k">+=</span><span class="pl-c1">1</span>;<span class="pl-smi">f</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}();<span class="pl-smi">sc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">sc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>sc;<span class="pl-smi">sc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">dispose</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">cone</span>.<span class="pl-smi">geometry</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="LC858" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">cone</span>.<span class="pl-smi">material</span>.<span class="pl-en">dispose</span>()};<span class="pl-smi">sc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-en">updateMatrixWorld</span>();<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-smi">distance</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-smi">distance</span><span class="pl-k">:</span><span class="pl-c1">1E3</span>,d<span class="pl-k">=</span>c<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">tan</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-smi">angle</span>);<span class="pl-c1">this</span>.<span class="pl-smi">cone</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">set</span>(d,d,c);<span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-smi">b</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-c1">target</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-c1">this</span>.<span class="pl-smi">cone</span>.<span class="pl-en">lookAt</span>(<span class="pl-smi">b</span>.<span class="pl-c1">sub</span>(a));<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">cone</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-c1">color</span>)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">cone</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-c1">color</span>)}}();<span class="pl-smi">tc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="LC859" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">tc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>tc;<span class="pl-smi">tc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">updateMatrixWorld</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">bones</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-en">getInverse</span>(<span class="pl-c1">this</span>.<span class="pl-smi">root</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span>e[h];<span class="pl-smi">m</span>.<span class="pl-c1">parent</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-c1">parent</span>.<span class="pl-smi">isBone</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-en">multiplyMatrices</span>(c,<span class="pl-smi">m</span>.<span class="pl-smi">matrixWorld</span>),<span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixPosition</span>(b),<span class="pl-smi">g</span>.<span class="pl-en">setXYZ</span>(k,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>),<span class="pl-smi">b</span>.<span class="pl-en">multiplyMatrices</span>(c,<span class="pl-smi">m</span>.<span class="pl-c1">parent</span>.<span class="pl-smi">matrixWorld</span>),<span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixPosition</span>(b),<span class="pl-smi">g</span>.<span class="pl-en">setXYZ</span>(k<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>),k<span class="pl-k">+=</span><span class="pl-c1">2</span>)}<span class="pl-smi">f</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="LC860" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">updateMatrixWorld</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,d)}}();<span class="pl-smi">uc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">va</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">uc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>uc;<span class="pl-smi">uc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">dispose</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-en">dispose</span>();<span class="pl-c1">this</span>.<span class="pl-smi">material</span>.<span class="pl-en">dispose</span>()};<span class="pl-smi">uc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-c1">color</span>)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-c1">color</span>)};<span class="pl-smi">vc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">vc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>vc;<span class="pl-smi">vc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">dispose</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">children</span>[<span class="pl-c1">0</span>].<span class="pl-smi">geometry</span>.<span class="pl-en">dispose</span>();<span class="pl-c1">this</span>.<span class="pl-smi">children</span>[<span class="pl-c1">0</span>].<span class="pl-smi">material</span>.<span class="pl-en">dispose</span>()};</td>
      </tr>
      <tr>
        <td id="L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="LC861" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">vc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-c1">width</span>,b<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-c1">height</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">line</span>.<span class="pl-smi">geometry</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">array</span>;d[<span class="pl-c1">0</span>]<span class="pl-k">=</span>a;d[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-k">-</span>b;d[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;d[<span class="pl-c1">3</span>]<span class="pl-k">=</span>a;d[<span class="pl-c1">4</span>]<span class="pl-k">=</span>b;d[<span class="pl-c1">5</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;d[<span class="pl-c1">6</span>]<span class="pl-k">=</span><span class="pl-k">-</span>a;d[<span class="pl-c1">7</span>]<span class="pl-k">=</span>b;d[<span class="pl-c1">8</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;d[<span class="pl-c1">9</span>]<span class="pl-k">=</span><span class="pl-k">-</span>a;d[<span class="pl-c1">10</span>]<span class="pl-k">=</span><span class="pl-k">-</span>b;d[<span class="pl-c1">11</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;d[<span class="pl-c1">12</span>]<span class="pl-k">=</span>a;d[<span class="pl-c1">13</span>]<span class="pl-k">=</span><span class="pl-k">-</span>b;d[<span class="pl-c1">14</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">line</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-c1">color</span>)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">line</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-c1">color</span>)};<span class="pl-smi">wc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">wc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>wc;<span class="pl-smi">wc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">dispose</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">children</span>[<span class="pl-c1">0</span>].<span class="pl-smi">geometry</span>.<span class="pl-en">dispose</span>();</td>
      </tr>
      <tr>
        <td id="L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="LC862" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">children</span>[<span class="pl-c1">0</span>].<span class="pl-smi">material</span>.<span class="pl-en">dispose</span>()};<span class="pl-smi">wc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">G</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span>)<span class="pl-c1">this</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-c1">color</span>);<span class="pl-k">else</span>{<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">geometry</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>color<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-c1">color</span>);<span class="pl-smi">c</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-smi">groundColor</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">count</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>f<span class="pl-k">&lt;</span>g<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">?</span>b<span class="pl-k">:</span>c;<span class="pl-smi">e</span>.<span class="pl-en">setXYZ</span>(f,<span class="pl-smi">h</span>.<span class="pl-smi">r</span>,<span class="pl-smi">h</span>.<span class="pl-smi">g</span>,<span class="pl-smi">h</span>.<span class="pl-smi">b</span>)}<span class="pl-smi">e</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-smi">d</span>.<span class="pl-en">lookAt</span>(<span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-smi">matrixWorld</span>).<span class="pl-en">negate</span>())}}();<span class="pl-smi">nd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">nd</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="LC863" class="blob-code blob-code-inner js-file-line">nd;<span class="pl-smi">Rd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Rd</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Rd;<span class="pl-smi">od</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">od</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>od;<span class="pl-smi">od</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">la</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">object</span>.<span class="pl-en">updateMatrixWorld</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">c</span>.<span class="pl-en">getNormalMatrix</span>(<span class="pl-c1">this</span>.<span class="pl-c1">object</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">object</span>.<span class="pl-smi">matrixWorld</span>,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">object</span>.<span class="pl-smi">geometry</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">vertices</span>;f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">faces</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>m;k<span class="pl-k">++</span>){<span class="pl-k">var</span> p<span class="pl-k">=</span>f[k],n<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">normal</span>;<span class="pl-smi">a</span>.<span class="pl-en">copy</span>(g[<span class="pl-smi">p</span>.<span class="pl-smi">a</span>]).<span class="pl-c1">add</span>(g[<span class="pl-smi">p</span>.<span class="pl-smi">b</span>]).<span class="pl-c1">add</span>(g[<span class="pl-smi">p</span>.<span class="pl-smi">c</span>]).<span class="pl-en">divideScalar</span>(<span class="pl-c1">3</span>).<span class="pl-en">applyMatrix4</span>(d);</td>
      </tr>
      <tr>
        <td id="L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="LC864" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">copy</span>(n).<span class="pl-en">applyMatrix3</span>(c).<span class="pl-c1">normalize</span>().<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">this</span>.<span class="pl-c1">size</span>).<span class="pl-c1">add</span>(a);<span class="pl-smi">e</span>.<span class="pl-en">setXYZ</span>(h,<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-c1">z</span>);h<span class="pl-k">+=</span><span class="pl-c1">1</span>;<span class="pl-smi">e</span>.<span class="pl-en">setXYZ</span>(h,<span class="pl-smi">b</span>.<span class="pl-c1">x</span>,<span class="pl-smi">b</span>.<span class="pl-c1">y</span>,<span class="pl-smi">b</span>.<span class="pl-c1">z</span>);h<span class="pl-k">+=</span><span class="pl-c1">1</span>}<span class="pl-smi">e</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}();<span class="pl-smi">xc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">xc</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>xc;<span class="pl-smi">xc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">dispose</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">lightPlane</span>.<span class="pl-smi">geometry</span>.<span class="pl-en">dispose</span>();<span class="pl-c1">this</span>.<span class="pl-smi">lightPlane</span>.<span class="pl-smi">material</span>.<span class="pl-en">dispose</span>();<span class="pl-c1">this</span>.<span class="pl-smi">targetLine</span>.<span class="pl-smi">geometry</span>.<span class="pl-en">dispose</span>();<span class="pl-c1">this</span>.<span class="pl-smi">targetLine</span>.<span class="pl-smi">material</span>.<span class="pl-en">dispose</span>()};<span class="pl-smi">xc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-smi">matrixWorld</span>);</td>
      </tr>
      <tr>
        <td id="L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="LC865" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">setFromMatrixPosition</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-c1">target</span>.<span class="pl-smi">matrixWorld</span>);<span class="pl-smi">c</span>.<span class="pl-en">subVectors</span>(b,a);<span class="pl-c1">this</span>.<span class="pl-smi">lightPlane</span>.<span class="pl-en">lookAt</span>(c);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">color</span><span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-smi">lightPlane</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-c1">color</span>),<span class="pl-c1">this</span>.<span class="pl-smi">targetLine</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-c1">set</span>(<span class="pl-c1">this</span>.<span class="pl-c1">color</span>))<span class="pl-k">:</span>(<span class="pl-c1">this</span>.<span class="pl-smi">lightPlane</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-c1">color</span>),<span class="pl-c1">this</span>.<span class="pl-smi">targetLine</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">light</span>.<span class="pl-c1">color</span>));<span class="pl-c1">this</span>.<span class="pl-smi">targetLine</span>.<span class="pl-en">lookAt</span>(c);<span class="pl-c1">this</span>.<span class="pl-smi">targetLine</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">z</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>()}}();<span class="pl-smi">pd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">pd</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>pd;<span class="pl-smi">pd</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="LC866" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">k</span>){<span class="pl-smi">d</span>.<span class="pl-c1">set</span>(g,h,k).<span class="pl-en">unproject</span>(e);a<span class="pl-k">=</span>c[a];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a)<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>),h<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;h<span class="pl-k">&lt;</span>k;h<span class="pl-k">++</span>)<span class="pl-smi">g</span>.<span class="pl-en">setXYZ</span>(a[h],<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">z</span>)}<span class="pl-k">var</span> b,c,d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ra</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(){b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>;c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pointMap</span>;<span class="pl-smi">e</span>.<span class="pl-smi">projectionMatrix</span>.<span class="pl-en">copy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">camera</span>.<span class="pl-smi">projectionMatrix</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>t<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n1<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n2<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n3<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>n4<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>f1<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>f2<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>f3<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>f4<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>u1<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">.7</span>,<span class="pl-c1">1.1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>u2<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">.7</span>,<span class="pl-c1">1.1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>u3<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cf1<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cf2<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cf3<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="LC867" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cf4<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cn1<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cn2<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cn3<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cn4<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-smi">b</span>.<span class="pl-c1">getAttribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}();<span class="pl-smi">Ib</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Ib</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Ib;<span class="pl-smi">Ib</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Xa</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BoxHelper: .update() has no longer arguments.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-c1">object</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">setFromObject</span>(<span class="pl-c1">this</span>.<span class="pl-c1">object</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-en">isEmpty</span>()){b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">min</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">max</span>,d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-c1">attributes</span>.<span class="pl-smi">position</span>,e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">array</span>;e[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>;e[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>;e[<span class="pl-c1">2</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="LC868" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">z</span>;e[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;e[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>;e[<span class="pl-c1">5</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">z</span>;e[<span class="pl-c1">6</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;e[<span class="pl-c1">7</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;e[<span class="pl-c1">8</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">z</span>;e[<span class="pl-c1">9</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>;e[<span class="pl-c1">10</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;e[<span class="pl-c1">11</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">z</span>;e[<span class="pl-c1">12</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>;e[<span class="pl-c1">13</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>;e[<span class="pl-c1">14</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>;e[<span class="pl-c1">15</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;e[<span class="pl-c1">16</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>;e[<span class="pl-c1">17</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>;e[<span class="pl-c1">18</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;e[<span class="pl-c1">19</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;e[<span class="pl-c1">20</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>;e[<span class="pl-c1">21</span>]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>;e[<span class="pl-c1">22</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>;e[<span class="pl-c1">23</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">z</span>;<span class="pl-smi">d</span>.<span class="pl-smi">needsUpdate</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">geometry</span>.<span class="pl-en">computeBoundingSphere</span>()}}}();<span class="pl-smi">Ib</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setFromObject</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">object</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-en">update</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">qd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">qd</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>qd;<span class="pl-smi">qd</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">updateMatrixWorld</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">box</span>;<span class="pl-smi">b</span>.<span class="pl-en">isEmpty</span>()<span class="pl-k">||</span>(<span class="pl-smi">b</span>.<span class="pl-en">getCenter</span>(<span class="pl-c1">this</span>.<span class="pl-smi">position</span>),</td>
      </tr>
      <tr>
        <td id="L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="LC869" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">getSize</span>(<span class="pl-c1">this</span>.<span class="pl-smi">scale</span>),<span class="pl-c1">this</span>.<span class="pl-smi">scale</span>.<span class="pl-en">multiplyScalar</span>(<span class="pl-c1">.5</span>),<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">updateMatrixWorld</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a))};<span class="pl-smi">rd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">wa</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">rd</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>rd;<span class="pl-smi">rd</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">updateMatrixWorld</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">this</span>.<span class="pl-smi">plane</span>.<span class="pl-smi">constant</span>;<span class="pl-c1">1E-8</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(b)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">1E-8</span>);<span class="pl-c1">this</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">set</span>(<span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">size</span>,<span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">this</span>.<span class="pl-c1">size</span>,b);<span class="pl-c1">this</span>.<span class="pl-smi">children</span>[<span class="pl-c1">0</span>].<span class="pl-smi">material</span>.<span class="pl-smi">side</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>b<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-en">lookAt</span>(<span class="pl-c1">this</span>.<span class="pl-smi">plane</span>.<span class="pl-smi">normal</span>);<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">updateMatrixWorld</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a)};<span class="pl-k">var</span> Sd,Ae;<span class="pl-smi">Jb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Jb</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>Jb;<span class="pl-smi">Jb</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">setDirection</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="LC870" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>,b;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-c1">.99999</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-c1">set</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">.99999</span><span class="pl-k">&gt;</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-c1">set</span>(<span class="pl-smi">c</span>.<span class="pl-c1">z</span>,<span class="pl-c1">0</span>,<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>).<span class="pl-c1">normalize</span>(),b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">acos</span>(<span class="pl-smi">c</span>.<span class="pl-c1">y</span>),<span class="pl-c1">this</span>.<span class="pl-smi">quaternion</span>.<span class="pl-en">setFromAxisAngle</span>(a,b))}}();<span class="pl-smi">Jb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setLength</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">.2</span><span class="pl-k">*</span>a);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">.2</span><span class="pl-k">*</span>b);<span class="pl-c1">this</span>.<span class="pl-smi">line</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">set</span>(<span class="pl-c1">1</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,a<span class="pl-k">-</span>b),<span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">line</span>.<span class="pl-en">updateMatrix</span>();<span class="pl-c1">this</span>.<span class="pl-smi">cone</span>.<span class="pl-smi">scale</span>.<span class="pl-c1">set</span>(c,b,c);<span class="pl-c1">this</span>.<span class="pl-smi">cone</span>.<span class="pl-smi">position</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">cone</span>.<span class="pl-en">updateMatrix</span>()};<span class="pl-smi">Jb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setColor</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">line</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(a);</td>
      </tr>
      <tr>
        <td id="L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="LC871" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">cone</span>.<span class="pl-smi">material</span>.<span class="pl-c1">color</span>.<span class="pl-en">copy</span>(a)};<span class="pl-smi">sd</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">Y</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">sd</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>sd;<span class="pl-c1">E</span>.<span class="pl-en">create</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Curve.create() has been deprecated<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>a;<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">getPoint</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> a};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">bb</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">createPointsGeometry</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getPoints</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">createGeometry</span>(a)},</td>
      </tr>
      <tr>
        <td id="L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="LC872" class="blob-code blob-code-inner js-file-line"><span class="pl-en">createSpacedPointsGeometry</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getSpacedPoints</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">createGeometry</span>(a)},<span class="pl-en">createGeometry</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">P</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>a[c];<span class="pl-smi">b</span>.<span class="pl-smi">vertices</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">p</span>(<span class="pl-smi">e</span>.<span class="pl-c1">x</span>,<span class="pl-smi">e</span>.<span class="pl-c1">y</span>,<span class="pl-smi">e</span>.<span class="pl-c1">z</span><span class="pl-k">||</span><span class="pl-c1">0</span>))}<span class="pl-k">return</span> b}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Qa</span>.<span class="pl-c1">prototype</span>,</td>
      </tr>
      <tr>
        <td id="L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="LC873" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">fromPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Path: .fromPoints() has been renamed to .setFromPoints().<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-en">setFromPoints</span>(a)}});<span class="pl-smi">zf</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">pa</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Af</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">pa</span>.<span class="pl-c1">prototype</span>);<span class="pl-smi">Be</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-en">create</span>(<span class="pl-smi">pa</span>.<span class="pl-c1">prototype</span>);<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Be</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">initFromArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Spline: .initFromArray() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">getControlPointsArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Spline: .getControlPointsArray() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">reparametrizeByArcLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Spline: .reparametrizeByArcLength() has been removed.<span class="pl-pds">&quot;</span></span>)}});</td>
      </tr>
      <tr>
        <td id="L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="LC874" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">nd</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setColors</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.<span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">tc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.SkeletonHelper: update() no longer needs to be called.<span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">pc</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">extractUrlBase</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">Fe</span>.<span class="pl-en">extractUrlBase</span>(a)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ze</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">center</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box2: .center() has been renamed to .getCenter().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="LC875" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getCenter</span>(a)},<span class="pl-en">empty</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box2: .empty() has been renamed to .isEmpty().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">isEmpty</span>()},<span class="pl-en">isIntersectionBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">intersectsBox</span>(a)},<span class="pl-en">size</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box2: .size() has been renamed to .getSize().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getSize</span>(a)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Xa</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">center</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box3: .center() has been renamed to .getCenter().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="LC876" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getCenter</span>(a)},<span class="pl-en">empty</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box3: .empty() has been renamed to .isEmpty().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">isEmpty</span>()},<span class="pl-en">isIntersectionBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">intersectsBox</span>(a)},<span class="pl-en">isIntersectionSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">intersectsSphere</span>(a)},<span class="pl-en">size</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Box3: .size() has been renamed to .getSize().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="LC877" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getSize</span>(a)}});<span class="pl-smi">Qb</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">center</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Line3: .center() has been renamed to .getCenter().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getCenter</span>(a)};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">J</span>,{<span class="pl-en">random16</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Math: .random16() has been deprecated. Use Math.random() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()},<span class="pl-en">nearestPowerOfTwo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">J</span>.<span class="pl-en">floorPowerOfTwo</span>(a)},<span class="pl-en">nextPowerOfTwo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="LC878" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">J</span>.<span class="pl-en">ceilPowerOfTwo</span>(a)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">la</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">flattenToArrayOffset</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">toArray</span>(a,b)},<span class="pl-en">multiplyVector3</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">applyMatrix3</span>(<span class="pl-c1">this</span>)},<span class="pl-en">multiplyVector3Array</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix3: .multiplyVector3Array() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">applyToBuffer</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="LC879" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">applyToBufferAttribute</span>(a)},<span class="pl-en">applyToVector3Array</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix3: .applyToVector3Array() has been removed.<span class="pl-pds">&quot;</span></span>)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">R</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">extractPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">copyPosition</span>(a)},<span class="pl-en">flattenToArrayOffset</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">toArray</span>(a,b)},<span class="pl-en">getPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;</td>
      </tr>
      <tr>
        <td id="L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="LC880" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">p</span>);<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">setFromMatrixColumn</span>(<span class="pl-c1">this</span>,<span class="pl-c1">3</span>)}}(),<span class="pl-en">setRotationFromQuaternion</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">makeRotationFromQuaternion</span>(a)},<span class="pl-en">multiplyToArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .multiplyToArray() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">multiplyVector3</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="LC881" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-c1">this</span>)},<span class="pl-en">multiplyVector4</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-c1">this</span>)},<span class="pl-en">multiplyVector3Array</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .multiplyVector3Array() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">rotateAxis</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-en">transformDirection</span>(<span class="pl-c1">this</span>)},<span class="pl-en">crossVector</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="LC882" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">applyMatrix4</span>(<span class="pl-c1">this</span>)},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .translate() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">rotateX</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .rotateX() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">rotateY</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .rotateY() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">rotateZ</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .rotateZ() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">rotateByAxis</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .rotateByAxis() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">applyToBuffer</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="LC883" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">applyToBufferAttribute</span>(a)},<span class="pl-en">applyToVector3Array</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .applyToVector3Array() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">makeFrustum</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">makePerspective</span>(a,b,d,c,e,f)}});<span class="pl-smi">Ia</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">isIntersectionLine</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">intersectsLine</span>(a)};</td>
      </tr>
      <tr>
        <td id="L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="LC884" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">ca</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">multiplyVector3</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">applyQuaternion</span>(<span class="pl-c1">this</span>)};<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">sb</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">isIntersectionBox</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">intersectsBox</span>(a)},<span class="pl-en">isIntersectionPlane</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">intersectsPlane</span>(a)},</td>
      </tr>
      <tr>
        <td id="L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="LC885" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isIntersectionSphere</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">intersectsSphere</span>(a)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ta</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">area</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .area() has been renamed to .getArea().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getArea</span>()},<span class="pl-en">barycoordFromPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getBarycoord</span>(a,b)},<span class="pl-en">midpoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .midpoint() has been renamed to .getMidpoint().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="LC886" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getMidpoint</span>(a)},<span class="pl-en">normal</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .normal() has been renamed to .getNormal().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getNormal</span>(a)},<span class="pl-en">plane</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .plane() has been renamed to .getPlane().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getPlane</span>(a)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(ta,{<span class="pl-en">barycoordFromPoint</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">ta</span>.<span class="pl-en">getBarycoord</span>(a,b,c,d,e)},<span class="pl-en">normal</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Triangle: .normal() has been renamed to .getNormal().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="LC887" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">ta</span>.<span class="pl-en">getNormal</span>(a,b,c,d)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">jb</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">extractAllPoints</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">extractPoints</span>(a)},<span class="pl-en">extrude</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">wb</span>(<span class="pl-c1">this</span>,a)},<span class="pl-en">makeGeometry</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">yb</span>(<span class="pl-c1">this</span>,a)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">B</span>.<span class="pl-c1">prototype</span>,</td>
      </tr>
      <tr>
        <td id="L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="LC888" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">fromAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">fromBufferAttribute</span>(a,b,c)},<span class="pl-en">distanceToManhattan</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">manhattanDistanceTo</span>(a)},<span class="pl-en">lengthManhattan</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">manhattanLength</span>()}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">p</span>.<span class="pl-c1">prototype</span>,</td>
      </tr>
      <tr>
        <td id="L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="LC889" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">setEulerFromRotationMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">setEulerFromQuaternion</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">getPositionFromMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">setFromMatrixPosition</span>(a)},<span class="pl-en">getScaleFromMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="LC890" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">setFromMatrixScale</span>(a)},<span class="pl-en">getColumnFromMatrix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">setFromMatrixColumn</span>(b,a)},<span class="pl-en">applyProjection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">applyMatrix4</span>(a)},<span class="pl-en">fromAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">fromBufferAttribute</span>(a,</td>
      </tr>
      <tr>
        <td id="L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="LC891" class="blob-code blob-code-inner js-file-line">b,c)},<span class="pl-en">distanceToManhattan</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">manhattanDistanceTo</span>(a)},<span class="pl-en">lengthManhattan</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">manhattanLength</span>()}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">W</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">fromAttribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">fromBufferAttribute</span>(a,</td>
      </tr>
      <tr>
        <td id="L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="LC892" class="blob-code blob-code-inner js-file-line">b,c)},<span class="pl-en">lengthManhattan</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">manhattanLength</span>()}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">P</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">computeTangents</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Geometry: .computeTangents() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">computeLineDistances</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.<span class="pl-pds">&quot;</span></span>)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">getChildByName</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="LC893" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getObjectByName</span>(a)},<span class="pl-en">renderDepth</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">translate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">translateOnAxis</span>(b,a)},<span class="pl-en">getWorldRotation</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.<span class="pl-pds">&quot;</span></span>)}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-c1">H</span>.<span class="pl-c1">prototype</span>,</td>
      </tr>
      <tr>
        <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="LC894" class="blob-code blob-code-inner js-file-line">{eulerOrder<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .eulerOrder is now .rotation.order.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">rotation</span>.<span class="pl-smi">order</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .eulerOrder is now .rotation.order.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">rotation</span>.<span class="pl-smi">order</span><span class="pl-k">=</span>a}},useQuaternion<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.<span class="pl-pds">&quot;</span></span>)}}});</td>
      </tr>
      <tr>
        <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="LC895" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">Jc</span>.<span class="pl-c1">prototype</span>,{objects<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.LOD: .objects has been renamed to .levels.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">levels</span>}}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-smi">Kc</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>useVertexTexture<span class="pl-pds">&quot;</span></span>,{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Skeleton: useVertexTexture has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Skeleton: useVertexTexture has been removed.<span class="pl-pds">&quot;</span></span>)}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>__arcLengthDivisions<span class="pl-pds">&quot;</span></span>,{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="LC896" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">arcLengthDivisions</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">arcLengthDivisions</span><span class="pl-k">=</span>a}});<span class="pl-c1">Z</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">setLens</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">filmGauge</span><span class="pl-k">=</span>b);<span class="pl-c1">this</span>.<span class="pl-en">setFocalLength</span>(a)};<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-c1">X</span>.<span class="pl-c1">prototype</span>,{onlyShadow<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .onlyShadow has been removed.<span class="pl-pds">&quot;</span></span>)}},shadowCameraFov<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowCameraFov is now .shadow.camera.fov.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="LC897" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">camera</span>.<span class="pl-smi">fov</span><span class="pl-k">=</span>a}},shadowCameraLeft<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowCameraLeft is now .shadow.camera.left.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">camera</span>.<span class="pl-c1">left</span><span class="pl-k">=</span>a}},shadowCameraRight<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowCameraRight is now .shadow.camera.right.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">camera</span>.<span class="pl-c1">right</span><span class="pl-k">=</span>a}},shadowCameraTop<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowCameraTop is now .shadow.camera.top.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">camera</span>.<span class="pl-c1">top</span><span class="pl-k">=</span>a}},shadowCameraBottom<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="LC898" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">camera</span>.<span class="pl-c1">bottom</span><span class="pl-k">=</span>a}},shadowCameraNear<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowCameraNear is now .shadow.camera.near.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">camera</span>.<span class="pl-smi">near</span><span class="pl-k">=</span>a}},shadowCameraFar<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowCameraFar is now .shadow.camera.far.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">camera</span>.<span class="pl-smi">far</span><span class="pl-k">=</span>a}},shadowCameraVisible<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.<span class="pl-pds">&quot;</span></span>)}},shadowBias<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowBias is now .shadow.bias.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="LC899" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">bias</span><span class="pl-k">=</span>a}},shadowDarkness<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowDarkness has been removed.<span class="pl-pds">&quot;</span></span>)}},shadowMapWidth<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">mapSize</span>.<span class="pl-c1">width</span><span class="pl-k">=</span>a}},shadowMapHeight<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">shadow</span>.<span class="pl-smi">mapSize</span>.<span class="pl-c1">height</span><span class="pl-k">=</span>a}}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-c1">L</span>.<span class="pl-c1">prototype</span>,{length<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferAttribute: .length has been deprecated. Use .count instead.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="LC900" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">array</span>.<span class="pl-c1">length</span>}},<span class="pl-en">copyIndicesArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferAttribute: .copyIndicesArray() has been removed.<span class="pl-pds">&quot;</span></span>)}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">addIndex</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-en">setIndex</span>(a)},<span class="pl-en">addDrawCall</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.<span class="pl-pds">&quot;</span></span>);<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry: .addDrawCall() is now .addGroup().<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-en">addGroup</span>(a,b)},</td>
      </tr>
      <tr>
        <td id="L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="LC901" class="blob-code blob-code-inner js-file-line"><span class="pl-en">clearDrawCalls</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-en">clearGroups</span>()},<span class="pl-en">computeTangents</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry: .computeTangents() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">computeOffsets</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry: .computeOffsets() has been removed.<span class="pl-pds">&quot;</span></span>)}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-c1">D</span>.<span class="pl-c1">prototype</span>,{drawcalls<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry: .drawcalls has been renamed to .groups.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">groups</span>}},offsets<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BufferGeometry: .offsets has been renamed to .groups.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="LC902" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">groups</span>}}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">Ta</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">getArrays</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ExtrudeBufferGeometry: .getArrays() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">addShapeList</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">addShape</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ExtrudeBufferGeometry: .addShape() has been removed.<span class="pl-pds">&quot;</span></span>)}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">Qd</span>.<span class="pl-c1">prototype</span>,{dynamic<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.<span class="pl-pds">&quot;</span></span>)}},</td>
      </tr>
      <tr>
        <td id="L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="LC903" class="blob-code blob-code-inner js-file-line">onUpdate<span class="pl-k">:</span>{<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>}}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-c1">I</span>.<span class="pl-c1">prototype</span>,{wrapAround<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Material: .wrapAround has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Material: .wrapAround has been removed.<span class="pl-pds">&quot;</span></span>)}},wrapRGB<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Material: .wrapRGB has been removed.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">G</span>}},shading<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="LC904" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>: .shading has been removed. Use the boolean .flatShading instead.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">type</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>: .shading has been removed. Use the boolean .flatShading instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">flatShading</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">===</span>a}}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">Ka</span>.<span class="pl-c1">prototype</span>,{metal<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead<span class="pl-pds">&quot;</span></span>)}}});</td>
      </tr>
      <tr>
        <td id="L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="LC905" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">Fa</span>.<span class="pl-c1">prototype</span>,{derivatives<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">extensions</span>.<span class="pl-smi">derivatives</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">extensions</span>.<span class="pl-smi">derivatives</span><span class="pl-k">=</span>a}}});<span class="pl-c1">Object</span>.<span class="pl-en">assign</span>(<span class="pl-smi">ae</span>.<span class="pl-c1">prototype</span>,{<span class="pl-en">animate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .animate() is now .setAnimationLoop().<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-en">setAnimationLoop</span>(a)},<span class="pl-en">getCurrentRenderTarget</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="LC906" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getRenderTarget</span>()},<span class="pl-en">getMaxAnisotropy</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">capabilities</span>.<span class="pl-en">getMaxAnisotropy</span>()},<span class="pl-en">getPrecision</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">capabilities</span>.<span class="pl-smi">precision</span>},<span class="pl-en">resetGLState</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .resetGLState() is now .state.reset().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">state</span>.<span class="pl-c1">reset</span>()},<span class="pl-en">supportsFloatTextures</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( &#39;OES_texture_float&#39; ).<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="LC907" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">extensions</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_texture_float<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">supportsHalfFloatTextures</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( &#39;OES_texture_half_float&#39; ).<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">extensions</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_texture_half_float<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">supportsStandardDerivatives</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( &#39;OES_standard_derivatives&#39; ).<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">extensions</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>OES_standard_derivatives<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">supportsCompressedTextureS3TC</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( &#39;WEBGL_compressed_texture_s3tc&#39; ).<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="LC908" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">extensions</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_s3tc<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">supportsCompressedTexturePVRTC</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( &#39;WEBGL_compressed_texture_pvrtc&#39; ).<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">extensions</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_compressed_texture_pvrtc<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">supportsBlendMinMax</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( &#39;EXT_blend_minmax&#39; ).<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">extensions</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EXT_blend_minmax<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">supportsVertexTextures</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="LC909" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">capabilities</span>.<span class="pl-smi">vertexTextures</span>},<span class="pl-en">supportsInstancedArrays</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( &#39;ANGLE_instanced_arrays&#39; ).<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">extensions</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ANGLE_instanced_arrays<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">enableScissorTest</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-en">setScissorTest</span>(a)},<span class="pl-en">initMaterial</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .initMaterial() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">addPrePlugin</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .addPrePlugin() has been removed.<span class="pl-pds">&quot;</span></span>)},</td>
      </tr>
      <tr>
        <td id="L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="LC910" class="blob-code blob-code-inner js-file-line"><span class="pl-en">addPostPlugin</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .addPostPlugin() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">updateShadowMap</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .updateShadowMap() has been removed.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">setFaceCulling</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .setFaceCulling() has been removed.<span class="pl-pds">&quot;</span></span>)}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">ae</span>.<span class="pl-c1">prototype</span>,{shadowMapEnabled<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">shadowMap</span>.<span class="pl-smi">enabled</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="LC911" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">shadowMap</span>.<span class="pl-smi">enabled</span><span class="pl-k">=</span>a}},shadowMapType<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">shadowMap</span>.<span class="pl-c1">type</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">shadowMap</span>.<span class="pl-c1">type</span><span class="pl-k">=</span>a}},shadowMapCullFace<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.<span class="pl-pds">&quot;</span></span>)}}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">$e</span>.<span class="pl-c1">prototype</span>,</td>
      </tr>
      <tr>
        <td id="L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="LC912" class="blob-code blob-code-inner js-file-line">{cullFace<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.<span class="pl-pds">&quot;</span></span>)}},renderReverseSided<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.<span class="pl-pds">&quot;</span></span>)}},</td>
      </tr>
      <tr>
        <td id="L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="LC913" class="blob-code blob-code-inner js-file-line">renderSingleSided<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.<span class="pl-pds">&quot;</span></span>)}}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">kb</span>.<span class="pl-c1">prototype</span>,{wrapS<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">wrapS</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="LC914" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">wrapS</span><span class="pl-k">=</span>a}},wrapT<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">wrapT</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">wrapT</span><span class="pl-k">=</span>a}},magFilter<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">magFilter</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">magFilter</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="LC915" class="blob-code blob-code-inner js-file-line">a}},minFilter<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">minFilter</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">minFilter</span><span class="pl-k">=</span>a}},anisotropy<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">anisotropy</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">anisotropy</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="LC916" class="blob-code blob-code-inner js-file-line">a}},offset<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .offset is now .texture.offset.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">offset</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .offset is now .texture.offset.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">offset</span><span class="pl-k">=</span>a}},repeat<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .repeat is now .texture.repeat.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">repeat</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .repeat is now .texture.repeat.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">repeat</span><span class="pl-k">=</span>a}},format<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .format is now .texture.format.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="LC917" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">format</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .format is now .texture.format.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">format</span><span class="pl-k">=</span>a}},type<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .type is now .texture.type.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-c1">type</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .type is now .texture.type.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-c1">type</span><span class="pl-k">=</span>a}},generateMipmaps<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">generateMipmaps</span>},</td>
      </tr>
      <tr>
        <td id="L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="LC918" class="blob-code blob-code-inner js-file-line"><span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">texture</span>.<span class="pl-smi">generateMipmaps</span><span class="pl-k">=</span>a}}});<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">bf</span>.<span class="pl-c1">prototype</span>,{standing<span class="pl-k">:</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WebVRManager: .standing has been removed.<span class="pl-pds">&quot;</span></span>)}}});<span class="pl-smi">qc</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">load</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>;(<span class="pl-k">new</span> <span class="pl-en">ne</span>).<span class="pl-c1">load</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-en">setBuffer</span>(a)});<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">re</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getData</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.AudioAnalyser: .getData() is now .getFrequencyData().<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="LC919" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getFrequencyData</span>()};<span class="pl-smi">kd</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">updateCubeMap</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.CubeCamera: .updateCubeMap() is now .update().<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">update</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-smi">WebGLRenderTargetCube</span><span class="pl-k">=</span>Lb;<span class="pl-smi">k</span>.<span class="pl-smi">WebGLRenderTarget</span><span class="pl-k">=</span>kb;<span class="pl-smi">k</span>.<span class="pl-smi">WebGLRenderer</span><span class="pl-k">=</span>ae;<span class="pl-smi">k</span>.<span class="pl-smi">ShaderLib</span><span class="pl-k">=</span>tb;<span class="pl-smi">k</span>.<span class="pl-smi">UniformsLib</span><span class="pl-k">=</span><span class="pl-c1">K</span>;<span class="pl-smi">k</span>.<span class="pl-smi">UniformsUtils</span><span class="pl-k">=</span>Ba;<span class="pl-smi">k</span>.<span class="pl-smi">ShaderChunk</span><span class="pl-k">=</span><span class="pl-c1">S</span>;<span class="pl-smi">k</span>.<span class="pl-smi">FogExp2</span><span class="pl-k">=</span>Vb;<span class="pl-smi">k</span>.<span class="pl-smi">Fog</span><span class="pl-k">=</span>Wb;<span class="pl-smi">k</span>.<span class="pl-smi">Scene</span><span class="pl-k">=</span>vd;<span class="pl-smi">k</span>.<span class="pl-smi">Sprite</span><span class="pl-k">=</span>Ic;<span class="pl-smi">k</span>.<span class="pl-c1">LOD</span><span class="pl-k">=</span>Jc;<span class="pl-smi">k</span>.<span class="pl-smi">SkinnedMesh</span><span class="pl-k">=</span>xd;<span class="pl-smi">k</span>.<span class="pl-smi">Skeleton</span><span class="pl-k">=</span>Kc;<span class="pl-smi">k</span>.<span class="pl-smi">Bone</span><span class="pl-k">=</span>wd;<span class="pl-smi">k</span>.<span class="pl-smi">Mesh</span><span class="pl-k">=</span>va;<span class="pl-smi">k</span>.<span class="pl-smi">LineSegments</span><span class="pl-k">=</span><span class="pl-c1">Y</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LineLoop</span><span class="pl-k">=</span>yd;<span class="pl-smi">k</span>.<span class="pl-smi">Line</span><span class="pl-k">=</span>wa;<span class="pl-smi">k</span>.<span class="pl-smi">Points</span><span class="pl-k">=</span>Xb;<span class="pl-smi">k</span>.<span class="pl-smi">Group</span><span class="pl-k">=</span>Ub;<span class="pl-smi">k</span>.<span class="pl-smi">VideoTexture</span><span class="pl-k">=</span>be;<span class="pl-smi">k</span>.<span class="pl-smi">DataTexture</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="LC920" class="blob-code blob-code-inner js-file-line">lb;<span class="pl-smi">k</span>.<span class="pl-smi">CompressedTexture</span><span class="pl-k">=</span>Yb;<span class="pl-smi">k</span>.<span class="pl-smi">CubeTexture</span><span class="pl-k">=</span>Za;<span class="pl-smi">k</span>.<span class="pl-smi">CanvasTexture</span><span class="pl-k">=</span>Sb;<span class="pl-smi">k</span>.<span class="pl-smi">DepthTexture</span><span class="pl-k">=</span>Lc;<span class="pl-smi">k</span>.<span class="pl-smi">Texture</span><span class="pl-k">=</span>ea;<span class="pl-smi">k</span>.<span class="pl-smi">CompressedTextureLoader</span><span class="pl-k">=</span>lf;<span class="pl-smi">k</span>.<span class="pl-smi">DataTextureLoader</span><span class="pl-k">=</span>fe;<span class="pl-smi">k</span>.<span class="pl-smi">CubeTextureLoader</span><span class="pl-k">=</span>ge;<span class="pl-smi">k</span>.<span class="pl-smi">TextureLoader</span><span class="pl-k">=</span>Ad;<span class="pl-smi">k</span>.<span class="pl-smi">ObjectLoader</span><span class="pl-k">=</span>nf;<span class="pl-smi">k</span>.<span class="pl-smi">MaterialLoader</span><span class="pl-k">=</span>Pd;<span class="pl-smi">k</span>.<span class="pl-smi">BufferGeometryLoader</span><span class="pl-k">=</span>ie;<span class="pl-smi">k</span>.<span class="pl-smi">DefaultLoadingManager</span><span class="pl-k">=</span>ya;<span class="pl-smi">k</span>.<span class="pl-smi">LoadingManager</span><span class="pl-k">=</span>ee;<span class="pl-smi">k</span>.<span class="pl-smi">JSONLoader</span><span class="pl-k">=</span>je;<span class="pl-smi">k</span>.<span class="pl-smi">ImageLoader</span><span class="pl-k">=</span>fd;<span class="pl-smi">k</span>.<span class="pl-smi">ImageBitmapLoader</span><span class="pl-k">=</span>ke;<span class="pl-smi">k</span>.<span class="pl-smi">FontLoader</span><span class="pl-k">=</span><span class="pl-k">of</span>;<span class="pl-smi">k</span>.<span class="pl-smi">FileLoader</span><span class="pl-k">=</span>La;<span class="pl-smi">k</span>.<span class="pl-smi">Loader</span><span class="pl-k">=</span>pc;<span class="pl-smi">k</span>.<span class="pl-smi">LoaderUtils</span><span class="pl-k">=</span>Fe;<span class="pl-smi">k</span>.<span class="pl-smi">Cache</span><span class="pl-k">=</span>Kb;<span class="pl-smi">k</span>.<span class="pl-smi">AudioLoader</span><span class="pl-k">=</span>ne;<span class="pl-smi">k</span>.<span class="pl-smi">SpotLightShadow</span><span class="pl-k">=</span>Cd;<span class="pl-smi">k</span>.<span class="pl-smi">SpotLight</span><span class="pl-k">=</span>Dd;<span class="pl-smi">k</span>.<span class="pl-smi">PointLight</span><span class="pl-k">=</span>Ed;<span class="pl-smi">k</span>.<span class="pl-smi">RectAreaLight</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="LC921" class="blob-code blob-code-inner js-file-line">Id;<span class="pl-smi">k</span>.<span class="pl-smi">HemisphereLight</span><span class="pl-k">=</span>Bd;<span class="pl-smi">k</span>.<span class="pl-smi">DirectionalLightShadow</span><span class="pl-k">=</span>Fd;<span class="pl-smi">k</span>.<span class="pl-smi">DirectionalLight</span><span class="pl-k">=</span>Gd;<span class="pl-smi">k</span>.<span class="pl-smi">AmbientLight</span><span class="pl-k">=</span>Hd;<span class="pl-smi">k</span>.<span class="pl-smi">LightShadow</span><span class="pl-k">=</span>Hb;<span class="pl-smi">k</span>.<span class="pl-smi">Light</span><span class="pl-k">=</span><span class="pl-c1">X</span>;<span class="pl-smi">k</span>.<span class="pl-smi">StereoCamera</span><span class="pl-k">=</span>pf;<span class="pl-smi">k</span>.<span class="pl-smi">PerspectiveCamera</span><span class="pl-k">=</span><span class="pl-c1">Z</span>;<span class="pl-smi">k</span>.<span class="pl-smi">OrthographicCamera</span><span class="pl-k">=</span>Mb;<span class="pl-smi">k</span>.<span class="pl-smi">CubeCamera</span><span class="pl-k">=</span>kd;<span class="pl-smi">k</span>.<span class="pl-smi">ArrayCamera</span><span class="pl-k">=</span>Hc;<span class="pl-smi">k</span>.<span class="pl-smi">Camera</span><span class="pl-k">=</span>Ra;<span class="pl-smi">k</span>.<span class="pl-smi">AudioListener</span><span class="pl-k">=</span>oe;<span class="pl-smi">k</span>.<span class="pl-smi">PositionalAudio</span><span class="pl-k">=</span>qe;<span class="pl-smi">k</span>.<span class="pl-smi">AudioContext</span><span class="pl-k">=</span>pe;<span class="pl-smi">k</span>.<span class="pl-smi">AudioAnalyser</span><span class="pl-k">=</span>re;<span class="pl-smi">k</span>.<span class="pl-smi">Audio</span><span class="pl-k">=</span>qc;<span class="pl-smi">k</span>.<span class="pl-smi">VectorKeyframeTrack</span><span class="pl-k">=</span>oc;<span class="pl-smi">k</span>.<span class="pl-smi">StringKeyframeTrack</span><span class="pl-k">=</span>Jd;<span class="pl-smi">k</span>.<span class="pl-smi">QuaternionKeyframeTrack</span><span class="pl-k">=</span>id;<span class="pl-smi">k</span>.<span class="pl-smi">NumberKeyframeTrack</span><span class="pl-k">=</span>nc;<span class="pl-smi">k</span>.<span class="pl-smi">ColorKeyframeTrack</span><span class="pl-k">=</span>Md;<span class="pl-smi">k</span>.<span class="pl-smi">BooleanKeyframeTrack</span><span class="pl-k">=</span>Kd;<span class="pl-smi">k</span>.<span class="pl-smi">PropertyMixer</span><span class="pl-k">=</span>se;<span class="pl-smi">k</span>.<span class="pl-smi">PropertyBinding</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="LC922" class="blob-code blob-code-inner js-file-line">ra;<span class="pl-smi">k</span>.<span class="pl-smi">KeyframeTrack</span><span class="pl-k">=</span>ja;<span class="pl-smi">k</span>.<span class="pl-smi">AnimationUtils</span><span class="pl-k">=</span>na;<span class="pl-smi">k</span>.<span class="pl-smi">AnimationObjectGroup</span><span class="pl-k">=</span>rf;<span class="pl-smi">k</span>.<span class="pl-smi">AnimationMixer</span><span class="pl-k">=</span>te;<span class="pl-smi">k</span>.<span class="pl-smi">AnimationClip</span><span class="pl-k">=</span>Ga;<span class="pl-smi">k</span>.<span class="pl-smi">Uniform</span><span class="pl-k">=</span>Qd;<span class="pl-smi">k</span>.<span class="pl-smi">InstancedBufferGeometry</span><span class="pl-k">=</span>ue;<span class="pl-smi">k</span>.<span class="pl-smi">BufferGeometry</span><span class="pl-k">=</span><span class="pl-c1">D</span>;<span class="pl-smi">k</span>.<span class="pl-smi">Geometry</span><span class="pl-k">=</span><span class="pl-c1">P</span>;<span class="pl-smi">k</span>.<span class="pl-smi">InterleavedBufferAttribute</span><span class="pl-k">=</span>ve;<span class="pl-smi">k</span>.<span class="pl-smi">InstancedInterleavedBuffer</span><span class="pl-k">=</span>we;<span class="pl-smi">k</span>.<span class="pl-smi">InterleavedBuffer</span><span class="pl-k">=</span>rc;<span class="pl-smi">k</span>.<span class="pl-smi">InstancedBufferAttribute</span><span class="pl-k">=</span>xe;<span class="pl-smi">k</span>.<span class="pl-smi">Face3</span><span class="pl-k">=</span>Ya;<span class="pl-smi">k</span>.<span class="pl-smi">Object3D</span><span class="pl-k">=</span><span class="pl-c1">H</span>;<span class="pl-smi">k</span>.<span class="pl-smi">Raycaster</span><span class="pl-k">=</span>tf;<span class="pl-smi">k</span>.<span class="pl-smi">Layers</span><span class="pl-k">=</span>Wd;<span class="pl-smi">k</span>.<span class="pl-smi">EventDispatcher</span><span class="pl-k">=</span>za;<span class="pl-smi">k</span>.<span class="pl-smi">Clock</span><span class="pl-k">=</span>vf;<span class="pl-smi">k</span>.<span class="pl-smi">QuaternionLinearInterpolant</span><span class="pl-k">=</span>Ld;<span class="pl-smi">k</span>.<span class="pl-smi">LinearInterpolant</span><span class="pl-k">=</span>jd;<span class="pl-smi">k</span>.<span class="pl-smi">DiscreteInterpolant</span><span class="pl-k">=</span>Od;<span class="pl-smi">k</span>.<span class="pl-smi">CubicInterpolant</span><span class="pl-k">=</span>Nd;<span class="pl-smi">k</span>.<span class="pl-smi">Interpolant</span><span class="pl-k">=</span>Ea;</td>
      </tr>
      <tr>
        <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="LC923" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-smi">Triangle</span><span class="pl-k">=</span>ta;<span class="pl-smi">k</span>.<span class="pl-smi">Math</span><span class="pl-k">=</span><span class="pl-c1">J</span>;<span class="pl-smi">k</span>.<span class="pl-smi">Spherical</span><span class="pl-k">=</span>wf;<span class="pl-smi">k</span>.<span class="pl-smi">Cylindrical</span><span class="pl-k">=</span>xf;<span class="pl-smi">k</span>.<span class="pl-smi">Plane</span><span class="pl-k">=</span>Ia;<span class="pl-smi">k</span>.<span class="pl-smi">Frustum</span><span class="pl-k">=</span>td;<span class="pl-smi">k</span>.<span class="pl-smi">Sphere</span><span class="pl-k">=</span>Ha;<span class="pl-smi">k</span>.<span class="pl-smi">Ray</span><span class="pl-k">=</span>sb;<span class="pl-smi">k</span>.<span class="pl-smi">Matrix4</span><span class="pl-k">=</span><span class="pl-c1">R</span>;<span class="pl-smi">k</span>.<span class="pl-smi">Matrix3</span><span class="pl-k">=</span>la;<span class="pl-smi">k</span>.<span class="pl-smi">Box3</span><span class="pl-k">=</span>Xa;<span class="pl-smi">k</span>.<span class="pl-smi">Box2</span><span class="pl-k">=</span>ze;<span class="pl-smi">k</span>.<span class="pl-smi">Line3</span><span class="pl-k">=</span>Qb;<span class="pl-smi">k</span>.<span class="pl-smi">Euler</span><span class="pl-k">=</span>mb;<span class="pl-smi">k</span>.<span class="pl-smi">Vector4</span><span class="pl-k">=</span><span class="pl-c1">W</span>;<span class="pl-smi">k</span>.<span class="pl-smi">Vector3</span><span class="pl-k">=</span>p;<span class="pl-smi">k</span>.<span class="pl-smi">Vector2</span><span class="pl-k">=</span><span class="pl-c1">B</span>;<span class="pl-smi">k</span>.<span class="pl-smi">Quaternion</span><span class="pl-k">=</span>ca;<span class="pl-smi">k</span>.<span class="pl-smi">Color</span><span class="pl-k">=</span><span class="pl-c1">G</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ImmediateRenderObject</span><span class="pl-k">=</span>ld;<span class="pl-smi">k</span>.<span class="pl-smi">VertexNormalsHelper</span><span class="pl-k">=</span>md;<span class="pl-smi">k</span>.<span class="pl-smi">SpotLightHelper</span><span class="pl-k">=</span>sc;<span class="pl-smi">k</span>.<span class="pl-smi">SkeletonHelper</span><span class="pl-k">=</span>tc;<span class="pl-smi">k</span>.<span class="pl-smi">PointLightHelper</span><span class="pl-k">=</span>uc;<span class="pl-smi">k</span>.<span class="pl-smi">RectAreaLightHelper</span><span class="pl-k">=</span>vc;<span class="pl-smi">k</span>.<span class="pl-smi">HemisphereLightHelper</span><span class="pl-k">=</span>wc;<span class="pl-smi">k</span>.<span class="pl-smi">GridHelper</span><span class="pl-k">=</span>nd;<span class="pl-smi">k</span>.<span class="pl-smi">PolarGridHelper</span><span class="pl-k">=</span>Rd;<span class="pl-smi">k</span>.<span class="pl-smi">FaceNormalsHelper</span><span class="pl-k">=</span>od;<span class="pl-smi">k</span>.<span class="pl-smi">DirectionalLightHelper</span><span class="pl-k">=</span>xc;<span class="pl-smi">k</span>.<span class="pl-smi">CameraHelper</span><span class="pl-k">=</span>pd;</td>
      </tr>
      <tr>
        <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
        <td id="LC924" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-smi">BoxHelper</span><span class="pl-k">=</span>Ib;<span class="pl-smi">k</span>.<span class="pl-smi">Box3Helper</span><span class="pl-k">=</span>qd;<span class="pl-smi">k</span>.<span class="pl-smi">PlaneHelper</span><span class="pl-k">=</span>rd;<span class="pl-smi">k</span>.<span class="pl-smi">ArrowHelper</span><span class="pl-k">=</span>Jb;<span class="pl-smi">k</span>.<span class="pl-smi">AxesHelper</span><span class="pl-k">=</span>sd;<span class="pl-smi">k</span>.<span class="pl-smi">Shape</span><span class="pl-k">=</span>jb;<span class="pl-smi">k</span>.<span class="pl-smi">Path</span><span class="pl-k">=</span>Qa;<span class="pl-smi">k</span>.<span class="pl-smi">ShapePath</span><span class="pl-k">=</span>le;<span class="pl-smi">k</span>.<span class="pl-smi">Font</span><span class="pl-k">=</span>me;<span class="pl-smi">k</span>.<span class="pl-smi">CurvePath</span><span class="pl-k">=</span>bb;<span class="pl-smi">k</span>.<span class="pl-smi">Curve</span><span class="pl-k">=</span><span class="pl-c1">E</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ShapeUtils</span><span class="pl-k">=</span>$a;<span class="pl-smi">k</span>.<span class="pl-smi">WebGLUtils</span><span class="pl-k">=</span>af;<span class="pl-smi">k</span>.<span class="pl-smi">WireframeGeometry</span><span class="pl-k">=</span>Zb;<span class="pl-smi">k</span>.<span class="pl-smi">ParametricGeometry</span><span class="pl-k">=</span>Mc;<span class="pl-smi">k</span>.<span class="pl-smi">ParametricBufferGeometry</span><span class="pl-k">=</span>$b;<span class="pl-smi">k</span>.<span class="pl-smi">TetrahedronGeometry</span><span class="pl-k">=</span>Oc;<span class="pl-smi">k</span>.<span class="pl-smi">TetrahedronBufferGeometry</span><span class="pl-k">=</span>ac;<span class="pl-smi">k</span>.<span class="pl-smi">OctahedronGeometry</span><span class="pl-k">=</span>Pc;<span class="pl-smi">k</span>.<span class="pl-smi">OctahedronBufferGeometry</span><span class="pl-k">=</span>ub;<span class="pl-smi">k</span>.<span class="pl-smi">IcosahedronGeometry</span><span class="pl-k">=</span>Qc;<span class="pl-smi">k</span>.<span class="pl-smi">IcosahedronBufferGeometry</span><span class="pl-k">=</span>bc;<span class="pl-smi">k</span>.<span class="pl-smi">DodecahedronGeometry</span><span class="pl-k">=</span>Rc;<span class="pl-smi">k</span>.<span class="pl-smi">DodecahedronBufferGeometry</span><span class="pl-k">=</span>cc;<span class="pl-smi">k</span>.<span class="pl-smi">PolyhedronGeometry</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
        <td id="LC925" class="blob-code blob-code-inner js-file-line">Nc;<span class="pl-smi">k</span>.<span class="pl-smi">PolyhedronBufferGeometry</span><span class="pl-k">=</span>xa;<span class="pl-smi">k</span>.<span class="pl-smi">TubeGeometry</span><span class="pl-k">=</span>Sc;<span class="pl-smi">k</span>.<span class="pl-smi">TubeBufferGeometry</span><span class="pl-k">=</span>dc;<span class="pl-smi">k</span>.<span class="pl-smi">TorusKnotGeometry</span><span class="pl-k">=</span>Tc;<span class="pl-smi">k</span>.<span class="pl-smi">TorusKnotBufferGeometry</span><span class="pl-k">=</span>ec;<span class="pl-smi">k</span>.<span class="pl-smi">TorusGeometry</span><span class="pl-k">=</span>Uc;<span class="pl-smi">k</span>.<span class="pl-smi">TorusBufferGeometry</span><span class="pl-k">=</span>fc;<span class="pl-smi">k</span>.<span class="pl-smi">TextGeometry</span><span class="pl-k">=</span>Zc;<span class="pl-smi">k</span>.<span class="pl-smi">TextBufferGeometry</span><span class="pl-k">=</span>gc;<span class="pl-smi">k</span>.<span class="pl-smi">SphereGeometry</span><span class="pl-k">=</span>$c;<span class="pl-smi">k</span>.<span class="pl-smi">SphereBufferGeometry</span><span class="pl-k">=</span>xb;<span class="pl-smi">k</span>.<span class="pl-smi">RingGeometry</span><span class="pl-k">=</span>ad;<span class="pl-smi">k</span>.<span class="pl-smi">RingBufferGeometry</span><span class="pl-k">=</span>hc;<span class="pl-smi">k</span>.<span class="pl-smi">PlaneGeometry</span><span class="pl-k">=</span>Fc;<span class="pl-smi">k</span>.<span class="pl-smi">PlaneBufferGeometry</span><span class="pl-k">=</span>rb;<span class="pl-smi">k</span>.<span class="pl-smi">LatheGeometry</span><span class="pl-k">=</span>bd;<span class="pl-smi">k</span>.<span class="pl-smi">LatheBufferGeometry</span><span class="pl-k">=</span>ic;<span class="pl-smi">k</span>.<span class="pl-smi">ShapeGeometry</span><span class="pl-k">=</span>yb;<span class="pl-smi">k</span>.<span class="pl-smi">ShapeBufferGeometry</span><span class="pl-k">=</span>zb;<span class="pl-smi">k</span>.<span class="pl-smi">ExtrudeGeometry</span><span class="pl-k">=</span>wb;<span class="pl-smi">k</span>.<span class="pl-smi">ExtrudeBufferGeometry</span><span class="pl-k">=</span>Ta;<span class="pl-smi">k</span>.<span class="pl-smi">EdgesGeometry</span><span class="pl-k">=</span>jc;<span class="pl-smi">k</span>.<span class="pl-smi">ConeGeometry</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L926" class="blob-num js-line-number" data-line-number="926"></td>
        <td id="LC926" class="blob-code blob-code-inner js-file-line">cd;<span class="pl-smi">k</span>.<span class="pl-smi">ConeBufferGeometry</span><span class="pl-k">=</span>dd;<span class="pl-smi">k</span>.<span class="pl-smi">CylinderGeometry</span><span class="pl-k">=</span>Ab;<span class="pl-smi">k</span>.<span class="pl-smi">CylinderBufferGeometry</span><span class="pl-k">=</span>ab;<span class="pl-smi">k</span>.<span class="pl-smi">CircleGeometry</span><span class="pl-k">=</span>ed;<span class="pl-smi">k</span>.<span class="pl-smi">CircleBufferGeometry</span><span class="pl-k">=</span>kc;<span class="pl-smi">k</span>.<span class="pl-smi">BoxGeometry</span><span class="pl-k">=</span>Nb;<span class="pl-smi">k</span>.<span class="pl-smi">BoxBufferGeometry</span><span class="pl-k">=</span>pb;<span class="pl-smi">k</span>.<span class="pl-smi">ShadowMaterial</span><span class="pl-k">=</span>Bb;<span class="pl-smi">k</span>.<span class="pl-smi">SpriteMaterial</span><span class="pl-k">=</span>ib;<span class="pl-smi">k</span>.<span class="pl-smi">RawShaderMaterial</span><span class="pl-k">=</span>lc;<span class="pl-smi">k</span>.<span class="pl-smi">ShaderMaterial</span><span class="pl-k">=</span>Fa;<span class="pl-smi">k</span>.<span class="pl-smi">PointsMaterial</span><span class="pl-k">=</span>Ja;<span class="pl-smi">k</span>.<span class="pl-smi">MeshPhysicalMaterial</span><span class="pl-k">=</span>Cb;<span class="pl-smi">k</span>.<span class="pl-smi">MeshStandardMaterial</span><span class="pl-k">=</span>Ua;<span class="pl-smi">k</span>.<span class="pl-smi">MeshPhongMaterial</span><span class="pl-k">=</span>Ka;<span class="pl-smi">k</span>.<span class="pl-smi">MeshToonMaterial</span><span class="pl-k">=</span>Db;<span class="pl-smi">k</span>.<span class="pl-smi">MeshNormalMaterial</span><span class="pl-k">=</span>Eb;<span class="pl-smi">k</span>.<span class="pl-smi">MeshLambertMaterial</span><span class="pl-k">=</span>Fb;<span class="pl-smi">k</span>.<span class="pl-smi">MeshDepthMaterial</span><span class="pl-k">=</span>fb;<span class="pl-smi">k</span>.<span class="pl-smi">MeshDistanceMaterial</span><span class="pl-k">=</span>gb;<span class="pl-smi">k</span>.<span class="pl-smi">MeshBasicMaterial</span><span class="pl-k">=</span>ua;<span class="pl-smi">k</span>.<span class="pl-smi">LineDashedMaterial</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L927" class="blob-num js-line-number" data-line-number="927"></td>
        <td id="LC927" class="blob-code blob-code-inner js-file-line">Gb;<span class="pl-smi">k</span>.<span class="pl-smi">LineBasicMaterial</span><span class="pl-k">=</span><span class="pl-c1">T</span>;<span class="pl-smi">k</span>.<span class="pl-smi">Material</span><span class="pl-k">=</span><span class="pl-c1">I</span>;<span class="pl-smi">k</span>.<span class="pl-smi">Float64BufferAttribute</span><span class="pl-k">=</span>Dc;<span class="pl-smi">k</span>.<span class="pl-smi">Float32BufferAttribute</span><span class="pl-k">=</span>z;<span class="pl-smi">k</span>.<span class="pl-smi">Uint32BufferAttribute</span><span class="pl-k">=</span>ob;<span class="pl-smi">k</span>.<span class="pl-smi">Int32BufferAttribute</span><span class="pl-k">=</span>Cc;<span class="pl-smi">k</span>.<span class="pl-smi">Uint16BufferAttribute</span><span class="pl-k">=</span>nb;<span class="pl-smi">k</span>.<span class="pl-smi">Int16BufferAttribute</span><span class="pl-k">=</span>Bc;<span class="pl-smi">k</span>.<span class="pl-smi">Uint8ClampedBufferAttribute</span><span class="pl-k">=</span>Ac;<span class="pl-smi">k</span>.<span class="pl-smi">Uint8BufferAttribute</span><span class="pl-k">=</span>zc;<span class="pl-smi">k</span>.<span class="pl-smi">Int8BufferAttribute</span><span class="pl-k">=</span>yc;<span class="pl-smi">k</span>.<span class="pl-smi">BufferAttribute</span><span class="pl-k">=</span><span class="pl-c1">L</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ArcCurve</span><span class="pl-k">=</span>mc;<span class="pl-smi">k</span>.<span class="pl-smi">CatmullRomCurve3</span><span class="pl-k">=</span>pa;<span class="pl-smi">k</span>.<span class="pl-smi">CubicBezierCurve</span><span class="pl-k">=</span>Ma;<span class="pl-smi">k</span>.<span class="pl-smi">CubicBezierCurve3</span><span class="pl-k">=</span>Va;<span class="pl-smi">k</span>.<span class="pl-smi">EllipseCurve</span><span class="pl-k">=</span>Da;<span class="pl-smi">k</span>.<span class="pl-smi">LineCurve</span><span class="pl-k">=</span>ia;<span class="pl-smi">k</span>.<span class="pl-smi">LineCurve3</span><span class="pl-k">=</span>Na;<span class="pl-smi">k</span>.<span class="pl-smi">QuadraticBezierCurve</span><span class="pl-k">=</span>Oa;<span class="pl-smi">k</span>.<span class="pl-smi">QuadraticBezierCurve3</span><span class="pl-k">=</span>Wa;<span class="pl-smi">k</span>.<span class="pl-smi">SplineCurve</span><span class="pl-k">=</span>Pa;</td>
      </tr>
      <tr>
        <td id="L928" class="blob-num js-line-number" data-line-number="928"></td>
        <td id="LC928" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-c1">REVISION</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>94<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">k</span>.<span class="pl-c1">MOUSE</span><span class="pl-k">=</span>{<span class="pl-c1">LEFT</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-c1">MIDDLE</span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-c1">RIGHT</span><span class="pl-k">:</span><span class="pl-c1">2</span>};<span class="pl-smi">k</span>.<span class="pl-smi">CullFaceNone</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">CullFaceBack</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">CullFaceFront</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">k</span>.<span class="pl-smi">CullFaceFrontBack</span><span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-smi">k</span>.<span class="pl-smi">FrontFaceDirectionCW</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">FrontFaceDirectionCCW</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">BasicShadowMap</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">PCFShadowMap</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">PCFSoftShadowMap</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">k</span>.<span class="pl-smi">FrontSide</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">BackSide</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">DoubleSide</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">k</span>.<span class="pl-smi">FlatShading</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">SmoothShading</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">k</span>.<span class="pl-smi">NoColors</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">FaceColors</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">VertexColors</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">k</span>.<span class="pl-smi">NoBlending</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">NormalBlending</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">AdditiveBlending</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">k</span>.<span class="pl-smi">SubtractiveBlending</span><span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-smi">k</span>.<span class="pl-smi">MultiplyBlending</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">k</span>.<span class="pl-smi">CustomBlending</span><span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-smi">k</span>.<span class="pl-smi">AddEquation</span><span class="pl-k">=</span><span class="pl-c1">100</span>;<span class="pl-smi">k</span>.<span class="pl-smi">SubtractEquation</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L929" class="blob-num js-line-number" data-line-number="929"></td>
        <td id="LC929" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">101</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ReverseSubtractEquation</span><span class="pl-k">=</span><span class="pl-c1">102</span>;<span class="pl-smi">k</span>.<span class="pl-smi">MinEquation</span><span class="pl-k">=</span><span class="pl-c1">103</span>;<span class="pl-smi">k</span>.<span class="pl-smi">MaxEquation</span><span class="pl-k">=</span><span class="pl-c1">104</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ZeroFactor</span><span class="pl-k">=</span><span class="pl-c1">200</span>;<span class="pl-smi">k</span>.<span class="pl-smi">OneFactor</span><span class="pl-k">=</span><span class="pl-c1">201</span>;<span class="pl-smi">k</span>.<span class="pl-smi">SrcColorFactor</span><span class="pl-k">=</span><span class="pl-c1">202</span>;<span class="pl-smi">k</span>.<span class="pl-smi">OneMinusSrcColorFactor</span><span class="pl-k">=</span><span class="pl-c1">203</span>;<span class="pl-smi">k</span>.<span class="pl-smi">SrcAlphaFactor</span><span class="pl-k">=</span><span class="pl-c1">204</span>;<span class="pl-smi">k</span>.<span class="pl-smi">OneMinusSrcAlphaFactor</span><span class="pl-k">=</span><span class="pl-c1">205</span>;<span class="pl-smi">k</span>.<span class="pl-smi">DstAlphaFactor</span><span class="pl-k">=</span><span class="pl-c1">206</span>;<span class="pl-smi">k</span>.<span class="pl-smi">OneMinusDstAlphaFactor</span><span class="pl-k">=</span><span class="pl-c1">207</span>;<span class="pl-smi">k</span>.<span class="pl-smi">DstColorFactor</span><span class="pl-k">=</span><span class="pl-c1">208</span>;<span class="pl-smi">k</span>.<span class="pl-smi">OneMinusDstColorFactor</span><span class="pl-k">=</span><span class="pl-c1">209</span>;<span class="pl-smi">k</span>.<span class="pl-smi">SrcAlphaSaturateFactor</span><span class="pl-k">=</span><span class="pl-c1">210</span>;<span class="pl-smi">k</span>.<span class="pl-smi">NeverDepth</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">AlwaysDepth</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LessDepth</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LessEqualDepth</span><span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-smi">k</span>.<span class="pl-smi">EqualDepth</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">k</span>.<span class="pl-smi">GreaterEqualDepth</span><span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-smi">k</span>.<span class="pl-smi">GreaterDepth</span><span class="pl-k">=</span><span class="pl-c1">6</span>;<span class="pl-smi">k</span>.<span class="pl-smi">NotEqualDepth</span><span class="pl-k">=</span><span class="pl-c1">7</span>;<span class="pl-smi">k</span>.<span class="pl-smi">MultiplyOperation</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">MixOperation</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L930" class="blob-num js-line-number" data-line-number="930"></td>
        <td id="LC930" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">AddOperation</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">k</span>.<span class="pl-smi">NoToneMapping</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LinearToneMapping</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ReinhardToneMapping</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">k</span>.<span class="pl-smi">Uncharted2ToneMapping</span><span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-smi">k</span>.<span class="pl-smi">CineonToneMapping</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">k</span>.<span class="pl-smi">UVMapping</span><span class="pl-k">=</span><span class="pl-c1">300</span>;<span class="pl-smi">k</span>.<span class="pl-smi">CubeReflectionMapping</span><span class="pl-k">=</span><span class="pl-c1">301</span>;<span class="pl-smi">k</span>.<span class="pl-smi">CubeRefractionMapping</span><span class="pl-k">=</span><span class="pl-c1">302</span>;<span class="pl-smi">k</span>.<span class="pl-smi">EquirectangularReflectionMapping</span><span class="pl-k">=</span><span class="pl-c1">303</span>;<span class="pl-smi">k</span>.<span class="pl-smi">EquirectangularRefractionMapping</span><span class="pl-k">=</span><span class="pl-c1">304</span>;<span class="pl-smi">k</span>.<span class="pl-smi">SphericalReflectionMapping</span><span class="pl-k">=</span><span class="pl-c1">305</span>;<span class="pl-smi">k</span>.<span class="pl-smi">CubeUVReflectionMapping</span><span class="pl-k">=</span><span class="pl-c1">306</span>;<span class="pl-smi">k</span>.<span class="pl-smi">CubeUVRefractionMapping</span><span class="pl-k">=</span><span class="pl-c1">307</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RepeatWrapping</span><span class="pl-k">=</span><span class="pl-c1">1E3</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ClampToEdgeWrapping</span><span class="pl-k">=</span><span class="pl-c1">1001</span>;<span class="pl-smi">k</span>.<span class="pl-smi">MirroredRepeatWrapping</span><span class="pl-k">=</span><span class="pl-c1">1002</span>;<span class="pl-smi">k</span>.<span class="pl-smi">NearestFilter</span><span class="pl-k">=</span><span class="pl-c1">1003</span>;<span class="pl-smi">k</span>.<span class="pl-smi">NearestMipMapNearestFilter</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L931" class="blob-num js-line-number" data-line-number="931"></td>
        <td id="LC931" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1004</span>;<span class="pl-smi">k</span>.<span class="pl-smi">NearestMipMapLinearFilter</span><span class="pl-k">=</span><span class="pl-c1">1005</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LinearFilter</span><span class="pl-k">=</span><span class="pl-c1">1006</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LinearMipMapNearestFilter</span><span class="pl-k">=</span><span class="pl-c1">1007</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LinearMipMapLinearFilter</span><span class="pl-k">=</span><span class="pl-c1">1008</span>;<span class="pl-smi">k</span>.<span class="pl-smi">UnsignedByteType</span><span class="pl-k">=</span><span class="pl-c1">1009</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ByteType</span><span class="pl-k">=</span><span class="pl-c1">1010</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ShortType</span><span class="pl-k">=</span><span class="pl-c1">1011</span>;<span class="pl-smi">k</span>.<span class="pl-smi">UnsignedShortType</span><span class="pl-k">=</span><span class="pl-c1">1012</span>;<span class="pl-smi">k</span>.<span class="pl-smi">IntType</span><span class="pl-k">=</span><span class="pl-c1">1013</span>;<span class="pl-smi">k</span>.<span class="pl-smi">UnsignedIntType</span><span class="pl-k">=</span><span class="pl-c1">1014</span>;<span class="pl-smi">k</span>.<span class="pl-smi">FloatType</span><span class="pl-k">=</span><span class="pl-c1">1015</span>;<span class="pl-smi">k</span>.<span class="pl-smi">HalfFloatType</span><span class="pl-k">=</span><span class="pl-c1">1016</span>;<span class="pl-smi">k</span>.<span class="pl-smi">UnsignedShort4444Type</span><span class="pl-k">=</span><span class="pl-c1">1017</span>;<span class="pl-smi">k</span>.<span class="pl-smi">UnsignedShort5551Type</span><span class="pl-k">=</span><span class="pl-c1">1018</span>;<span class="pl-smi">k</span>.<span class="pl-smi">UnsignedShort565Type</span><span class="pl-k">=</span><span class="pl-c1">1019</span>;<span class="pl-smi">k</span>.<span class="pl-smi">UnsignedInt248Type</span><span class="pl-k">=</span><span class="pl-c1">1020</span>;<span class="pl-smi">k</span>.<span class="pl-smi">AlphaFormat</span><span class="pl-k">=</span><span class="pl-c1">1021</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBFormat</span><span class="pl-k">=</span><span class="pl-c1">1022</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBAFormat</span><span class="pl-k">=</span><span class="pl-c1">1023</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LuminanceFormat</span><span class="pl-k">=</span><span class="pl-c1">1024</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LuminanceAlphaFormat</span><span class="pl-k">=</span><span class="pl-c1">1025</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBEFormat</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L932" class="blob-num js-line-number" data-line-number="932"></td>
        <td id="LC932" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1023</span>;<span class="pl-smi">k</span>.<span class="pl-smi">DepthFormat</span><span class="pl-k">=</span><span class="pl-c1">1026</span>;<span class="pl-smi">k</span>.<span class="pl-smi">DepthStencilFormat</span><span class="pl-k">=</span><span class="pl-c1">1027</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGB_S3TC_DXT1_Format</span><span class="pl-k">=</span><span class="pl-c1">33776</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_S3TC_DXT1_Format</span><span class="pl-k">=</span><span class="pl-c1">33777</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_S3TC_DXT3_Format</span><span class="pl-k">=</span><span class="pl-c1">33778</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_S3TC_DXT5_Format</span><span class="pl-k">=</span><span class="pl-c1">33779</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGB_PVRTC_4BPPV1_Format</span><span class="pl-k">=</span><span class="pl-c1">35840</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGB_PVRTC_2BPPV1_Format</span><span class="pl-k">=</span><span class="pl-c1">35841</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_PVRTC_4BPPV1_Format</span><span class="pl-k">=</span><span class="pl-c1">35842</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_PVRTC_2BPPV1_Format</span><span class="pl-k">=</span><span class="pl-c1">35843</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGB_ETC1_Format</span><span class="pl-k">=</span><span class="pl-c1">36196</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_4x4_Format</span><span class="pl-k">=</span><span class="pl-c1">37808</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_5x4_Format</span><span class="pl-k">=</span><span class="pl-c1">37809</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_5x5_Format</span><span class="pl-k">=</span><span class="pl-c1">37810</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_6x5_Format</span><span class="pl-k">=</span><span class="pl-c1">37811</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_6x6_Format</span><span class="pl-k">=</span><span class="pl-c1">37812</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_8x5_Format</span><span class="pl-k">=</span><span class="pl-c1">37813</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_8x6_Format</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L933" class="blob-num js-line-number" data-line-number="933"></td>
        <td id="LC933" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">37814</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_8x8_Format</span><span class="pl-k">=</span><span class="pl-c1">37815</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_10x5_Format</span><span class="pl-k">=</span><span class="pl-c1">37816</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_10x6_Format</span><span class="pl-k">=</span><span class="pl-c1">37817</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_10x8_Format</span><span class="pl-k">=</span><span class="pl-c1">37818</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_10x10_Format</span><span class="pl-k">=</span><span class="pl-c1">37819</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_12x10_Format</span><span class="pl-k">=</span><span class="pl-c1">37820</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBA_ASTC_12x12_Format</span><span class="pl-k">=</span><span class="pl-c1">37821</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LoopOnce</span><span class="pl-k">=</span><span class="pl-c1">2200</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LoopRepeat</span><span class="pl-k">=</span><span class="pl-c1">2201</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LoopPingPong</span><span class="pl-k">=</span><span class="pl-c1">2202</span>;<span class="pl-smi">k</span>.<span class="pl-smi">InterpolateDiscrete</span><span class="pl-k">=</span><span class="pl-c1">2300</span>;<span class="pl-smi">k</span>.<span class="pl-smi">InterpolateLinear</span><span class="pl-k">=</span><span class="pl-c1">2301</span>;<span class="pl-smi">k</span>.<span class="pl-smi">InterpolateSmooth</span><span class="pl-k">=</span><span class="pl-c1">2302</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ZeroCurvatureEnding</span><span class="pl-k">=</span><span class="pl-c1">2400</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ZeroSlopeEnding</span><span class="pl-k">=</span><span class="pl-c1">2401</span>;<span class="pl-smi">k</span>.<span class="pl-smi">WrapAroundEnding</span><span class="pl-k">=</span><span class="pl-c1">2402</span>;<span class="pl-smi">k</span>.<span class="pl-smi">TrianglesDrawMode</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">TriangleStripDrawMode</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">TriangleFanDrawMode</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LinearEncoding</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L934" class="blob-num js-line-number" data-line-number="934"></td>
        <td id="LC934" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">3E3</span>;<span class="pl-smi">k</span>.<span class="pl-smi">sRGBEncoding</span><span class="pl-k">=</span><span class="pl-c1">3001</span>;<span class="pl-smi">k</span>.<span class="pl-smi">GammaEncoding</span><span class="pl-k">=</span><span class="pl-c1">3007</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBEEncoding</span><span class="pl-k">=</span><span class="pl-c1">3002</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LogLuvEncoding</span><span class="pl-k">=</span><span class="pl-c1">3003</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBM7Encoding</span><span class="pl-k">=</span><span class="pl-c1">3004</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBM16Encoding</span><span class="pl-k">=</span><span class="pl-c1">3005</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBDEncoding</span><span class="pl-k">=</span><span class="pl-c1">3006</span>;<span class="pl-smi">k</span>.<span class="pl-smi">BasicDepthPacking</span><span class="pl-k">=</span><span class="pl-c1">3200</span>;<span class="pl-smi">k</span>.<span class="pl-smi">RGBADepthPacking</span><span class="pl-k">=</span><span class="pl-c1">3201</span>;<span class="pl-smi">k</span>.<span class="pl-smi">TangentSpaceNormalMap</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">ObjectSpaceNormalMap</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">CubeGeometry</span><span class="pl-k">=</span>Nb;<span class="pl-smi">k</span>.<span class="pl-en">Face4</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>,<span class="pl-smi">g</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Face4 has been removed. A THREE.Face3 will be created instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Ya</span>(a,b,c,e,f,g)};<span class="pl-smi">k</span>.<span class="pl-smi">LineStrip</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-smi">LinePieces</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-en">MeshFaceMaterial</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.MeshFaceMaterial has been removed. Use an Array instead.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L935" class="blob-num js-line-number" data-line-number="935"></td>
        <td id="LC935" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> a};<span class="pl-smi">k</span>.<span class="pl-en">MultiMaterial</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>[]);<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.MultiMaterial has been removed. Use an Array instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-smi">isMultiMaterial</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">materials</span><span class="pl-k">=</span>a;<span class="pl-smi">a</span>.<span class="pl-en">clone</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">slice</span>()};<span class="pl-k">return</span> a};<span class="pl-smi">k</span>.<span class="pl-en">PointCloud</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PointCloud has been renamed to THREE.Points.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Xb</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-en">Particle</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Particle has been renamed to THREE.Sprite.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Ic</span>(a)};<span class="pl-smi">k</span>.<span class="pl-en">ParticleSystem</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ParticleSystem has been renamed to THREE.Points.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L936" class="blob-num js-line-number" data-line-number="936"></td>
        <td id="LC936" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Xb</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-en">PointCloudMaterial</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Ja</span>(a)};<span class="pl-smi">k</span>.<span class="pl-en">ParticleBasicMaterial</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Ja</span>(a)};<span class="pl-smi">k</span>.<span class="pl-en">ParticleSystemMaterial</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Ja</span>(a)};<span class="pl-smi">k</span>.<span class="pl-en">Vertex</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Vertex has been removed. Use THREE.Vector3 instead.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L937" class="blob-num js-line-number" data-line-number="937"></td>
        <td id="LC937" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">p</span>(a,b,c)};<span class="pl-smi">k</span>.<span class="pl-en">DynamicBufferAttribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">L</span>(a,b)).<span class="pl-en">setDynamic</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)};<span class="pl-smi">k</span>.<span class="pl-en">Int8Attribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">yc</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-en">Uint8Attribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">zc</span>(a,</td>
      </tr>
      <tr>
        <td id="L938" class="blob-num js-line-number" data-line-number="938"></td>
        <td id="LC938" class="blob-code blob-code-inner js-file-line">b)};<span class="pl-smi">k</span>.<span class="pl-en">Uint8ClampedAttribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Ac</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-en">Int16Attribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Bc</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-en">Uint16Attribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">nb</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-smi">Int32Attribute</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L939" class="blob-num js-line-number" data-line-number="939"></td>
        <td id="LC939" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Cc</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-en">Uint32Attribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ob</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-en">Float32Attribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">z</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-en">Float64Attribute</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L940" class="blob-num js-line-number" data-line-number="940"></td>
        <td id="LC940" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Dc</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-smi">ClosedSplineCurve3</span><span class="pl-k">=</span>zf;<span class="pl-smi">k</span>.<span class="pl-smi">SplineCurve3</span><span class="pl-k">=</span>Af;<span class="pl-smi">k</span>.<span class="pl-smi">Spline</span><span class="pl-k">=</span>Be;<span class="pl-smi">k</span>.<span class="pl-en">AxisHelper</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.AxisHelper has been renamed to THREE.AxesHelper.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">sd</span>(a)};<span class="pl-smi">k</span>.<span class="pl-en">BoundingBoxHelper</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Ib</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-en">EdgesHelper</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Y</span>(<span class="pl-k">new</span> <span class="pl-en">jc</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>),<span class="pl-k">new</span> <span class="pl-en">T</span>({color<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L941" class="blob-num js-line-number" data-line-number="941"></td>
        <td id="LC941" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-c1">16777215</span>}))};<span class="pl-smi">k</span>.<span class="pl-en">WireframeHelper</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Y</span>(<span class="pl-k">new</span> <span class="pl-en">Zb</span>(<span class="pl-smi">a</span>.<span class="pl-smi">geometry</span>),<span class="pl-k">new</span> <span class="pl-en">T</span>({color<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>b<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-c1">16777215</span>}))};<span class="pl-smi">k</span>.<span class="pl-en">XHRLoader</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.XHRLoader has been renamed to THREE.FileLoader.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">La</span>(a)};<span class="pl-smi">k</span>.<span class="pl-en">BinaryTextureLoader</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">fe</span>(a)};<span class="pl-smi">k</span>.<span class="pl-smi">GeometryUtils</span><span class="pl-k">=</span>{<span class="pl-en">merge</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L942" class="blob-num js-line-number" data-line-number="942"></td>
        <td id="LC942" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">isMesh</span>){<span class="pl-smi">b</span>.<span class="pl-smi">matrixAutoUpdate</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">updateMatrix</span>();<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">matrix</span>;b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">geometry</span>}<span class="pl-smi">a</span>.<span class="pl-en">merge</span>(b,d,c)},<span class="pl-en">center</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">center</span>()}};<span class="pl-smi">k</span>.<span class="pl-smi">ImageUtils</span><span class="pl-k">=</span>{crossOrigin<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-en">loadTexture</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Ad</span>;<span class="pl-smi">e</span>.<span class="pl-en">setCrossOrigin</span>(<span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span>);a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">load</span>(a,c,<span class="pl-k">void</span> <span class="pl-c1">0</span>,d);b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mapping</span><span class="pl-k">=</span>b);<span class="pl-k">return</span> a},</td>
      </tr>
      <tr>
        <td id="L943" class="blob-num js-line-number" data-line-number="943"></td>
        <td id="LC943" class="blob-code blob-code-inner js-file-line"><span class="pl-en">loadTextureCube</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ge</span>;<span class="pl-smi">e</span>.<span class="pl-en">setCrossOrigin</span>(<span class="pl-c1">this</span>.<span class="pl-smi">crossOrigin</span>);a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">load</span>(a,c,<span class="pl-k">void</span> <span class="pl-c1">0</span>,d);b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mapping</span><span class="pl-k">=</span>b);<span class="pl-k">return</span> a},<span class="pl-en">loadCompressedTexture</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">loadCompressedTextureCube</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.<span class="pl-pds">&quot;</span></span>)}};</td>
      </tr>
      <tr>
        <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
        <td id="LC944" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-en">Projector</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Projector has been moved to /examples/js/renderers/Projector.js.<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-en">projectVector</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Projector: .projectVector() is now vector.project().<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-en">project</span>(b)};<span class="pl-c1">this</span>.<span class="pl-en">unprojectVector</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">console</span>.<span class="pl-c1">warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Projector: .unprojectVector() is now vector.unproject().<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-en">unproject</span>(b)};<span class="pl-c1">this</span>.<span class="pl-en">pickingRay</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.Projector: .pickingRay() is now raycaster.setFromCamera().<span class="pl-pds">&quot;</span></span>)}};<span class="pl-smi">k</span>.<span class="pl-en">CanvasRenderer</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
        <td id="LC945" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">domElement</span><span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElementNS</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>http://www.w3.org/1999/xhtml<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-c1">this</span>.<span class="pl-en">render</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-c1">this</span>.<span class="pl-en">setClearColor</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-c1">this</span>.<span class="pl-en">setSize</span><span class="pl-k">=</span><span class="pl-k">function</span>(){}};<span class="pl-smi">k</span>.<span class="pl-smi">SceneUtils</span><span class="pl-k">=</span>{<span class="pl-en">createMultiMaterialObject</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">detach</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">attach</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js<span class="pl-pds">&quot;</span></span>)}};</td>
      </tr>
      <tr>
        <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
        <td id="LC946" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-en">LensFlare</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js<span class="pl-pds">&quot;</span></span>)};<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(k,<span class="pl-s"><span class="pl-pds">&quot;</span>__esModule<span class="pl-pds">&quot;</span></span>,{value<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>})});</td>
      </tr>
</table>

  <div class="BlobToolbar position-absolute js-file-line-actions dropdown js-menu-container js-select-menu d-none" aria-hidden="true">
    <button class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1 js-menu-target" type="button" aria-expanded="false" aria-haspopup="true" aria-label="Inline file action toolbar" aria-controls="inline-file-actions">
      <svg class="octicon octicon-kebab-horizontal" viewBox="0 0 13 16" version="1.1" width="13" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm5 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM13 7.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>
    </button>
    <div class="dropdown-menu-content js-menu-content" id="inline-file-actions">
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2">
        <li><clipboard-copy class="dropdown-item" id="js-copy-lines" style="cursor:pointer;" data-original-text="Copy lines">Copy lines</clipboard-copy></li>
        <li><clipboard-copy class="dropdown-item" id="js-copy-permalink" style="cursor:pointer;" data-original-text="Copy permalink">Copy permalink</clipboard-copy></li>
        <li><a class="dropdown-item js-update-url-with-hash" id="js-view-git-blame" href="/mrdoob/three.js/blame/0949e59f3a4978efc39d7c1366d26274b7d9af82/build/three.min.js">View git blame</a></li>
          <li><a class="dropdown-item" id="js-new-issue" href="/mrdoob/three.js/issues/new">Open new issue</a></li>
      </ul>
    </div>
  </div>

  </div>

  </div>

  <button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
  <div id="jump-to-line" style="display:none">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form" action="" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
      <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
      <button type="submit" class="btn">Go</button>
</form>  </div>


  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

      
<div class="footer container-lg px-3" role="contentinfo">
  <div class="position-relative d-flex flex-justify-between pt-6 pb-2 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap ">
      <li class="mr-3">&copy; 2018 <span title="0.34441s from unicorn-78bfd6cdb8-85r5x">GitHub</span>, Inc.</li>
        <li class="mr-3"><a data-ga-click="Footer, go to terms, text:terms" href="https://github.com/site/terms">Terms</a></li>
        <li class="mr-3"><a data-ga-click="Footer, go to privacy, text:privacy" href="https://github.com/site/privacy">Privacy</a></li>
        <li class="mr-3"><a href="https://help.github.com/articles/github-security/" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li class="mr-3"><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a data-ga-click="Footer, go to help, text:help" href="https://help.github.com">Help</a></li>
    </ul>

    <a aria-label="Homepage" title="GitHub" class="footer-octicon" href="https://github.com">
      <svg height="24" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="24" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
   <ul class="list-style-none d-flex flex-wrap ">
        <li class="mr-3"><a data-ga-click="Footer, go to contact, text:contact" href="https://github.com/contact">Contact GitHub</a></li>
      <li class="mr-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li class="mr-3"><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li class="mr-3"><a href="https://blog.github.com" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>

    </ul>
  </div>
  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 text-gray-light"></span>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
    </button>
    You can’t perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha512-HtXMaArrY9G3PeC0Ak9gvytVs8jgGWgF72UwiHRvPUaF/ru8bw6gGq2qxSli8smS4OcZUo+6sXKV9ilIsIW/cw==" type="application/javascript" src="https://assets-cdn.github.com/assets/frameworks-c3c14c4cae6d3342206a30a4f9851d53.js"></script>
    
    <script crossorigin="anonymous" async="async" integrity="sha512-nRc6PFf8BVI7wfX8/X56tAKay2YA4qqW+weVHnPvfg6BUaMOacqY8BrBsGlRaGsJ+zOlqieKwESq+afIvVv0xg==" type="application/javascript" src="https://assets-cdn.github.com/assets/github-0cf9f7e086e0c91c4b50d4fdbfde46c5.js"></script>
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
    </button>
  </div>
</div>

  <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box box-shadow-large" style="width:360px;">
  </div>
</div>

<div id="hovercard-aria-description" class="sr-only">
  Press h to open a hovercard with more details.
</div>


  </body>
</html>

